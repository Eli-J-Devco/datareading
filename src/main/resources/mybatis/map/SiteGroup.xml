<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SiteGroup">
	<resultMap id="SiteGroupMap"
		type="com.nwm.api.entities.SiteGroupManageEntity">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="offset" column="offset" />
		<result property="is_delete" column="is_delete" />
		<result property="created_date" column="created_date" />
		<result property="created_by" column="created_by" />
		<result property="updated_date" column="updated_by" />
		<result property="active" column="active" />
		<result property="id_company" column="id_company" />
	</resultMap>
	
	
	<select id="getList" resultType="Map" >
		SELECT
			sg.id,
			sg.name,
			em.email,
			em.id AS id_employee,
			GROUP_CONCAT(s.name ORDER BY s.name SEPARATOR "; ") AS site_name,
			GROUP_CONCAT(s.id ORDER BY s.name SEPARATOR "; ") AS site_id,
			sg.is_delete,
			sg.id_company
		FROM
			site_group sg
			LEFT JOIN site_employee_map sem ON sem.id_site_group = sg.id
			LEFT JOIN employee em ON em.id = sem.id_employee
			LEFT JOIN site s ON s.id = sem.id_site
		WHERE sg.is_delete = 0
		<if test="keyword != null">
			AND sg.name LIKE CONCAT("%",#{keyword}, "%")
		</if> 	
		
 		GROUP BY sg.id
 		
		ORDER BY
	        <choose>  
	            <when test="sort_column == 'id'">
	                sg.id ${order_by}
	            </when>         
	            <when test="sort_column == 'name'">
	                sg.name ${order_by}
	            </when>
	            
	            <otherwise>
			      sg.id DESC
			    </otherwise>                                                  
	        </choose>  
		 	 
		 LIMIT ${limit} OFFSET ${offset};
	</select>
	
  	
	<select id="getListCount" resultType="int" parameterType="com.nwm.api.entities.SiteGroupManageEntity">
    	SELECT count(*) as totalRow
		FROM site_group sg WHERE sg.is_delete = 0
		<if test="keyword != null">
			AND sg.name LIKE CONCAT("%",#{keyword}, "%")
		</if> 
  	</select>
  	
  	
  	<select id="getPrevList" resultType="int" >
		SELECT
			sem.id_site
		FROM
			site_employee_map sem
		WHERE sem.id_site_group = #{id}
	</select>
  	
  	
	<update id="deleteSiteGroup">
		UPDATE `site_group`
		SET
			`is_delete` = #{is_delete}
		WHERE
			`id` = #{id}
	</update>
	
	<update id="deleteAllSiteInSiteGroup">
		UPDATE `site_employee_map`
		SET
			`id_site_group` = null
		WHERE
			`id_employee` = #{id_employee}
			AND `id_site_group` = #{id}
	</update>
	
	
	<insert id="insertSiteGroup" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `site_group` (
			`name`
		)
		VALUES (
			#{name}
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	<update id="updateSiteGroupInName">
		UPDATE `site_group`
		SET
			`name` = #{name}
		WHERE
			`id` = #{id}
	</update>
	
	<update id="updateSiteGroupInSite">
		UPDATE `site_employee_map`
		SET
			`id_site_group` = #{id}
		WHERE
			`id_employee` = #{id_employee}
			<foreach collection="site_id" item="value" open="AND `id_site` IN (" separator="," close=")">
				#{value}
			</foreach>
	</update>
	
	<update id="deletePrevSiteInSiteGroup">
		UPDATE `site_employee_map`
		SET
			`id_site_group` = null
		WHERE
			`id_employee` = #{id_employee}
			<foreach collection="prev_site_id" item="value" open="AND `id_site` IN (" separator="," close=")">
				#{value}
			</foreach>
	</update>
	
</mapper>