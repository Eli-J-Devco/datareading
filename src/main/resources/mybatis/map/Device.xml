<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Device">
	<resultMap id="DeviceMap"
		type="com.nwm.api.entities.DeviceEntity">
		<result property="id" column="id" />
		<result property="id_site" column="id_site" />
		<result property="id_vendor" column="id_vendor" />
		<result property="serial_number" column="serial_number" />
		<result property="modbusdevicenumber" column="modbusdevicenumber" />
		<result property="devicename" column="devicename" />
		<result property="devicetype" column="devicetype" />
		<result property="deviceclass" column="deviceclass" />
		<result property="configuration" column="configuration" />
		<result property="configurationchangetime" column="configurationchangetime" />
		<result property="configurationchecksum" column="configurationchecksum" />
		<result property="datatablename" column="datatablename" />
		<result property="id_customer" column="id_customer" />
		<result property="id_device_type" column="id_device_type" />
		<result property="active" column="active" />
		<result property="id_device_group" column="id_device_group" />
		<result property="keyword" column="keyword" />
		<result property="device_type_name" column="device_type_name" />
		<result property="view_tablename" column="view_tablename" />
		<result property="job_tablename" column="job_tablename" />
		<result property="order_id" column="order_id" />
		<result property="reverse_poa" column="reverse_poa" />
		<result property="lat" column="lat" />
		<result property="lng" column="lng" />
		<result property="rating_ac_power" column="rating_ac_power" />
		<result property="field_value_default" column="field_value_default" />
		<result property="ssh_host" column="ssh_host" />
		<result property="ssh_user" column="ssh_user" />
		<result property="ssh_pass" column="ssh_pass" />
		<result property="ssh_port" column="ssh_port" />
		<result property="hidden" column="hidden" />
		<result property="virtual_device_type" column="virtual_device_type" />
		<result property="is_supper_admin" column="is_supper_admin" />
		<result property="datalogger_table" column="datalogger_table" />
		<result property="enable_alert" column="enable_alert" />
		
		
		
		
		
		
		
		
	</resultMap>

	<select id="getListBySerialNumber" resultMap="DeviceMap" parameterType="String">
		SELECT
			d.id,
			d.id_site,
			d.id_vendor,
			d.serial_number,
			d.serialnumber,
			d.modbusdevicenumber,
			d.devicename,
			d.devicetype,
			d.deviceclass,
			d.configuration,
			d.configurationchecksum,
			d.configurationchangetime,
			d.datatablename,
			d.id_device_group,
			d.id_device_type,
			s.start_date_time,
			s.end_date_time,
			t.`offset` AS timezone_offset,
			t.`value` AS timezone_value,
			d.reverse_poa,
			d.field_value_default,
			d.ssh_host,
			d.ssh_user,
			d.ssh_pass,
			d.ssh_port,
			d.hidden,
			d.virtual_device_type,
			d.view_tablename,
			d.job_tablename,
			dg.table_name  AS device_group_table,
			dl.datalogger_table,
			s.enable_alert
		FROM
			device AS d
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			LEFT JOIN device_group dg ON d.id_device_group = dg.id
			LEFT JOIN (
				SELECT
					datatablename AS datalogger_table,
					serial_number
				FROM device
				WHERE
					serial_number = #{serial_number}
					AND id_device_type = 5
			) dl ON dl.serial_number = d.serial_number
		WHERE
			d.serial_number = #{serial_number}
			GROUP BY d.id
	</select>
	
	<select id="getListByDeviceType" resultMap="DeviceMap">
		SELECT
			d.id,
			d.id_site,
			d.id_device_type,
			d.id_vendor,
			d.serial_number,
			d.devicename,
			d.devicetype,
			0 AS active 
		FROM
			site s
			LEFT JOIN device d ON d.id_site = s.id 
		WHERE
			d.id_device_type = #{id_device_type} 
			AND s.id = #{id_site} 
			AND s.id_customer = #{id_customer} 
			AND s.`status` = 1 
			AND s.is_delete = 0
	</select>
	
	
	<select id="getListDeviceByGroup" resultMap="DeviceMap">
		SELECT
			d.id,
			d.id_site,
			d.id_device_type,
			d.id_device_group,
			d.id_vendor,
			d.serial_number,
			d.devicename,
			d.devicetype,
			0 AS active
		FROM
			site s
			LEFT JOIN device d ON d.id_site = s.id 
		WHERE
			d.id_device_group = #{id_device_group} 
			AND s.id = #{id_site} 
			AND s.id_customer = #{id_customer} 
			AND s.`status` = 1
			AND s.is_delete = 0
	</select>
	
	<select id="getListDeviceBySite" resultType="Map" >
		SELECT
			s.id,
			s.id_site,
			s.`id_vendor`,
			s.id_device_type,
			s.id_device_group,
			s.serial_number,
			s.serialnumber,
			s.modbusdevicenumber,
			s.devicename,
			s.devicetype,
			s.deviceclass,
			s.`configuration`,
			DATE_FORMAT(s.configurationchangetime,'%m/%d/%Y') AS configurationchangetime,
			s.configurationchecksum,
			s.datatablename,
			s.order_id,
			s.`status`,
			s.is_delete,
			dt.name AS device_type_name,
			s.view_tablename,
			s.job_tablename,
			s.order_id,
			s.reverse_poa,
			s.field_value_default,
			s.ssh_host,
			s.ssh_user,
			s.ssh_pass,
			s.ssh_port,
			s.lat,
			s.lng,
			s.rating_ac_power,
			IF(s.`hidden` = 1, 1, 0) AS hidden,
			s.virtual_device_type,
			s.ip_address,
			s.consumption_meter
		FROM
			device s
			LEFT JOIN device_type dt ON dt.id = s.id_device_type
		WHERE s.id_site = #{id_site}
		<if test="keyword != null">
			 AND s.devicename LIKE CONCAT("%",#{keyword}, "%")
		</if> 	
		    order by
	        <choose>  
	            <when test="sort_column == 'id'">
	                s.id ${order_by}
	            </when>         
	            <when test="sort_column == 'id_vendor'">
	                s.id_vendor ${order_by}
	            </when>
	            <when test="sort_column == 'id_device_type'">
	                s.id_device_type ${order_by}
	            </when>
	            <when test="sort_column == 'id_device_group'">
	                s.id_device_group ${order_by}
	            </when>
	            <when test="sort_column == 'serial_number'">
	                s.serial_number ${order_by}
	            </when>
	            <when test="sort_column == 'datatablename'">
	                s.datatablename ${order_by}
	            </when>
	            <when test="sort_column == 'status'">
	                status ${order_by}
	            </when>
	            
	            <otherwise>
			      s.id DESC
			    </otherwise>                                                  
	        </choose>  
		 	 
		 LIMIT ${limit} OFFSET ${offset};
	</select>
	
  	
	
	<select id="getDeviceBySiteTotalRecord"  resultType="int" parameterType="com.nwm.api.entities.DeviceEntity">
    	SELECT count(*) as totalRow
		FROM device s
		WHERE s.id_site = #{id_site}
		<if test="keyword != null">
			AND s.devicename LIKE CONCAT("%",#{keyword}, "%")
		</if> 
  	</select>
  	
  	
  	<update id="updateStatus">
		UPDATE `device`
		SET
			`status` = #{status}
		WHERE
			`id` = #{id} AND id_site = #{id_site}
	</update>
	
	
	<update id="updateLastUpdated">
		UPDATE `device`
		SET
			<if test="last_updated != null">
				 `last_updated` = #{last_updated},
			</if> 
			`last_value` = #{last_value},
			`field_value1` = #{field_value1},
			`field_value2` = #{field_value2},
			`field_value3` = #{field_value3}
		WHERE
			`id` = #{id}
	</update>
	
	
	
	<update id="updateSshStatus">
		UPDATE `device`
		SET
			`ssh_status` = #{ssh_status},
			`ssh_last_connect` = #{ssh_last_connect}
		WHERE
			`id` = #{id}
	</update>
	
	
	<update id="deleteDevice">
		UPDATE `device`
		SET
			`is_delete` = #{is_delete}
		WHERE
			`id` = #{id}
	</update>
	
	<insert id="insertDevice" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `device`(
			`id_site`,
			`id_vendor`,
			`id_device_type`,
			`id_device_group`,
			`serial_number`,
			`serialnumber`,
			`modbusdevicenumber`,
			`devicename`,
			`devicetype`,
			`deviceclass`,
			`configuration`,
			`configurationchangetime`,
			`configurationchecksum`,
			`datatablename`,
			`view_tablename`,
			`job_tablename`,
			`order_id`,
			`reverse_poa`,
			`field_value_default`,
			`ssh_host`,
			`ssh_user`,
			`ssh_pass`,
			`ssh_port`,
			`lat`,
			`lng`,
			`rating_ac_power`,
			`hidden`,
			`virtual_device_type`,
			`ip_address`,
			`consumption_meter`
		)VALUES(
			#{id_site},
			#{id_vendor},
			#{id_device_type},
			#{id_device_group},
			#{serial_number},
			#{serialnumber},
			#{modbusdevicenumber},
			#{devicename},
			#{devicetype},
			#{deviceclass},
			#{configuration},
			#{configurationchangetime},
			#{configurationchecksum},
			#{datatablename},
			#{view_tablename},
			#{job_tablename},
			#{order_id},
			#{reverse_poa},
			#{field_value_default},
			#{ssh_host},
			#{ssh_user},
			#{ssh_pass},
			#{ssh_port},
			#{lat},
			#{lng},
			#{rating_ac_power},
			#{hidden},
			#{virtual_device_type},
			#{ip_address},
			#{consumption_meter}
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	<update id="updateDevice">
		<if test="checkAll == 1">
			UPDATE `device`
			SET
				rating_ac_power = #{rating_ac_power}
			WHERE id_site = #{id_site} AND id_device_type = #{id_device_type}
		</if>
		<if test="checkAll == 0">
			UPDATE `device`
			SET
				id_site = #{id_site},
				id_vendor = #{id_vendor},
				id_device_type = #{id_device_type},
				id_device_group = #{id_device_group},
				serial_number = #{serial_number},
				serialnumber = #{serialnumber},
				modbusdevicenumber = #{modbusdevicenumber},
				devicename = #{devicename},
				devicetype = #{devicetype},
				deviceclass = #{deviceclass},
				configuration = #{configuration},
				configurationchangetime = #{configurationchangetime},
				configurationchecksum = #{configurationchecksum},
				datatablename = #{datatablename},
				view_tablename = #{view_tablename},
				job_tablename = #{job_tablename},
				order_id = #{order_id},
				reverse_poa = #{reverse_poa},
				field_value_default = #{field_value_default},
				ssh_host = #{ssh_host},
				ssh_user = #{ssh_user},
				ssh_pass = #{ssh_pass},
				ssh_port = #{ssh_port},
				lat = #{lat},
				lng = #{lng},
				rating_ac_power = #{rating_ac_power},
				`hidden` = #{hidden},
				virtual_device_type = #{virtual_device_type},
				ip_address = #{ip_address},
				consumption_meter = #{consumption_meter}
			WHERE
				`id` = #{id}
		</if>
	</update>
	
	
	
	
	<select id="getListSshDataloggerCellModem" resultType="Map" >
		SELECT
			s.`name` AS site_name,
			dt.`name` AS device_type_name,
			d.id,
			d.devicename,
			d.ssh_host,
			d.ssh_user,
			d.ssh_pass,
			d.ssh_port,
			d.ssh_status,
			DATE_FORMAT(d.ssh_last_connect, "%m-%d-%Y %H:%m:%s") AS ssh_last_connect,
			d.`status`,
			d.is_delete
		FROM
			device d
			LEFT JOIN device_type dt ON dt.id = d.id_device_type
			LEFT JOIN site s ON s.id = d.id_site 
		WHERE d.`status` = 1 
		AND d.is_delete = 0
		AND s.`status` = 1
		AND s.is_delete = 0
		AND d.ssh_host IS NOT NULL
		AND d.ssh_pass IS NOT NULL
		AND d.ssh_user IS NOT NULL
		AND d.ssh_port IS NOT NULL

		<if test="keyword != null">
			 AND s.name LIKE CONCAT("%",#{keyword}, "%")
		</if> 	
		    ORDER BY
	        <choose>  
	            <when test="sort_column == 'id'">
	                s.id ${order_by}
	            </when>  
	                   
	            <when test="sort_column == 'site_name'">
	                s.name ${order_by}
	            </when>
	            
	            <when test="sort_column == 'name'">
	                d.name ${order_by}
	            </when>
	            
	            <when test="sort_column == 'ssh_status'">
	                d.ssh_status ${order_by}
	            </when>
	            
	            <otherwise>
			      d.id_device_group DESC
			    </otherwise>                                                  
	        </choose>  
		 	 
		 LIMIT ${limit} OFFSET ${offset};
	</select>
	
  	
	
	<select id="getTotalSshDataloggerCellModem"  resultType="int" parameterType="com.nwm.api.entities.DeviceEntity">
    	SELECT count(*) as totalRow
		FROM
			device d
			LEFT JOIN site s ON s.id = d.id_site 
		WHERE d.`status` = 1 
		AND d.is_delete = 0
		AND s.`status` = 1
		AND s.is_delete = 0
		AND d.ssh_host IS NOT NULL
		AND d.ssh_pass IS NOT NULL
		AND d.ssh_user IS NOT NULL
		AND d.ssh_port IS NOT NULL
		<if test="keyword != null">
			AND s.name LIKE CONCAT("%",#{keyword}, "%")
		</if> 
  	</select>
  	
  	<select id="getListHiddenDataByDevice" resultType="Map">
		SELECT
			id,
			CONCAT_WS(" - ", date_from, date_to) AS text
		FROM
			hidden_data
		WHERE
			id_device = #{id}
			AND status = 1
			AND is_delete = 0
	</select>
	
  	<insert id="insertHiddenData" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `hidden_data`(
			`id_device`,
			`date_from`,
			`date_to`,
			`create_by`,
			`create_date`
		)VALUES(
			#{id},
			#{date_from},
			#{date_to},
			#{id_employee},
			NOW()
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	<update id="deleteHiddenData">
		UPDATE `hidden_data`
		SET
			is_delete = 1,
			update_by = #{id_employee},
			update_date = NOW()
		WHERE
			`id` = #{id}
	</update>
	
	<select id="getLowProductionErrorId" resultType="int">
    	SELECT
			e.id
		FROM
			error e
			LEFT JOIN device_group dg ON dg.id = e.id_device_group
		WHERE
			e.status = 1
			AND e.is_delete = 0
			AND e.error_code = 1002
			AND dg.status = 1
			AND dg.is_delete = 0
			AND dg.table_name = #{datatablename}
	</select>
  	
	<select id="getCurrentProductionPercentage" resultType="double">
		SELECT
			IF(
				d.last_value IS NULL OR d.last_value <![CDATA[<=]]> 0,
				0,
				ROUND(
					d.last_value /
					(
						SELECT 
							MAX(d.last_value)
						FROM
							device d
						WHERE
							d.id_site = #{id_site}
							AND d.id_device_type = #{id_device_type}
							AND d.`status`  = 1
							AND d.is_delete = 0
					) * 100,
					2
				)
			) AS percent_power
		FROM
			device d 
		WHERE
			d.id = #{id}
			AND d.id_site = #{id_site}
			AND d.id_device_type = #{id_device_type}
			AND d.`status`  = 1 
			AND d.is_delete = 0
	</select>
	
	<select id="getListDeviceParameter" resultType="Map">
		SELECT
			dp.id,
			dp.`name`,
			CONCAT(dp.`name`, IF(dps.scale IS NULL, "", CONCAT(" (Scale: ", dps.scale, ")"))) AS text,
			dps.scale
		FROM
			device_parameters dp
			LEFT JOIN device d ON d.id_device_group = dp.id_device_group
			LEFT JOIN device_parameter_scale dps ON dps.id_device_parameter = dp.id AND dps.id_device = d.id
		WHERE
			d.id = #{id}
			AND d.status = 1
			AND d.is_delete = 0
			AND dp.status = 1
			AND dp.is_delete = 0
		ORDER BY dp.id
	</select>
	
	<select id="getListScaledParameterByDeviceGroup" resultType="Map">
		SELECT 
			dp.id,
			CONCAT(dp.`name`, IF(dps.scale IS NULL, "", CONCAT(" (Scale: ", dps.scale, ")"))) AS text,
			dp.`name` AS parameter_name,
			dps.scale
			
		FROM 
			device_parameter_scale dps
			LEFT JOIN device_parameters dp ON dp.id = dps.id_device_parameter
			LEFT JOIN device d ON d.id = dps.id_device
		WHERE
			d.id_device_group = #{id_device_group}
			AND d.status = 1
			AND d.is_delete = 0
			AND dp.status = 1
			AND dp.is_delete = 0
			AND dps.scale is not null
			GROUP BY dps.scale, dps.id_device_parameter
			ORDER BY dp.`name`
	</select>
	
	<select id="getListScaledDeviceParameter" resultType="com.nwm.api.entities.DeviceEntity">
		SELECT
			dps.scale AS parameter_scale,
			dps.variable_name,
			dp.slug AS parameter_slug
		FROM
			device_parameter_scale dps
			LEFT JOIN device_parameters dp ON dp.id = dps.id_device_parameter
		WHERE
			dps.id_device = #{id}
			AND dps.scale IS NOT NULL
	</select>
	
	<insert id="saveDeviceParameterScale">
		INSERT INTO `device_parameter_scale` (
			`id_device`,
			`id_device_parameter`,
			`scale`,
			`variable_name`
		) VALUES (
			#{id},
			#{id_device_parameter},
			#{parameter_scale},
			#{variable_name}
		) ON DUPLICATE KEY UPDATE
			`id_device` = VALUES(id_device),
			`id_device_parameter` = VALUES(id_device_parameter),
			`scale` = VALUES(scale),
			`variable_name` = VALUES(variable_name)
	</insert>
	
	
	<insert id="createTableDevice">
		<choose>  
	            <when test="id_device_group == 1">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `volts_a_n` double DEFAULT NULL COMMENT 'Volts A-N',
						  `volts_b_n` double DEFAULT NULL COMMENT 'Volts B-N',
						  `volts_c_n` double DEFAULT NULL COMMENT 'Volts C-N',
						  `volts_a_b` double DEFAULT NULL COMMENT 'Volts A-B',
						  `volts_b_c` double DEFAULT NULL COMMENT 'Volts B-C',
						  `volts_c_a` double DEFAULT NULL COMMENT 'Volts C-A',
						  `amps_a` float DEFAULT NULL COMMENT 'Amps A',
						  `amps_b` float DEFAULT NULL COMMENT 'Amps B',
						  `amps_c` float DEFAULT NULL COMMENT 'Amps C',
						  `watts_3ph_total` float DEFAULT NULL COMMENT 'Watts, 3-Ph total',
						  `vars_3ph_total` float DEFAULT NULL COMMENT 'VARs, 3-Ph total (kVAR)',
						  `vas_3ph_total` float DEFAULT NULL COMMENT 'VAs, 3-Ph total (kVA)',
						  `power_factor_3ph_total` float DEFAULT NULL COMMENT 'Power Factor, 3-Ph total',
						  `frequency` float DEFAULT NULL COMMENT 'Frequency (Hz)',
						  `neutral_current` float DEFAULT NULL COMMENT 'Neutral Current (Amps)',
						  `w_hours_received` double DEFAULT NULL COMMENT 'W-hours, Received  (kWh)',
						  `w_hours_delivered` double DEFAULT NULL COMMENT 'W-hours, Delivered',
						  `w_hours_net` double DEFAULT NULL COMMENT 'W-hours, Net',
						  `w_hours_total` double DEFAULT NULL COMMENT 'W-hours, Total',
						  `var_hours_positive` double DEFAULT NULL COMMENT 'VAR-hours, Positive',
						  `var_hours_negative` double DEFAULT NULL COMMENT 'VAR-hours, Negative',
						  `var_hours_net` double DEFAULT NULL COMMENT 'VAR-hours, Net',
						  `var_hours_total` double DEFAULT NULL COMMENT 'VAR-hours, Total',
						  `va_hours_total` double DEFAULT NULL COMMENT 'VA-hours, Total',
						  `amps_a_average` float DEFAULT NULL COMMENT 'Amps A, Average',
						  `amps_b_average` float DEFAULT NULL COMMENT 'Amps B, Average',
						  `amps_c_average` float DEFAULT NULL COMMENT 'Amps C, Average',
						  `positive_watts_3ph_average` float DEFAULT NULL COMMENT 'Positive Watts, 3-Ph, Average',
						  `positive_vars_3ph_average` float DEFAULT NULL COMMENT 'Positive VARs, 3-Ph, Average',
						  `negative_watts_3ph_average` float DEFAULT NULL COMMENT 'Negative Watts, 3-Ph, Average',
						  `negative_vars_3ph_average` float DEFAULT NULL COMMENT 'Negative VARs, 3-Ph, Average',
						  `vas_3ph_average` float DEFAULT NULL COMMENT 'VAs, 3-Ph, Average',
						  `positive_pf_3ph_average` float DEFAULT NULL COMMENT 'Positive PF, 3-Ph, Average',
						  `negative_pf_3ph_average` float DEFAULT NULL COMMENT 'Negative PF, 3-Ph, Average',
						  `volts_a_n_min` float DEFAULT NULL COMMENT 'Volts A-N, Min',
						  `volts_b_n_min` float DEFAULT NULL COMMENT 'Volts B-N, Min',
						  `volts_c_n_min` float DEFAULT NULL COMMENT 'Volts C-N, Min',
						  `volts_a_b_min` float DEFAULT NULL COMMENT 'Volts A-B, Min',
						  `volts_b_c_min` float DEFAULT NULL COMMENT 'Volts B-C, Min',
						  `volts_c_a_min` float DEFAULT NULL COMMENT 'Volts C-A, Min',
						  `amps_a_min_avg_demand` float DEFAULT NULL COMMENT 'Amps A, Min Avg Demand',
						  `amps_b_min_avg_demand` float DEFAULT NULL COMMENT 'Amps B, Min Avg Demand',
						  `amps_c_min_avg_demand` float DEFAULT NULL COMMENT 'Amps C, Min Avg Demand',
						  `positive_watts_3ph_min_avg_demand` float DEFAULT NULL COMMENT 'Positive Watts, 3-Ph, Min Avg Demand',
						  `positive_vars_3ph_min_avg_demand` float DEFAULT NULL COMMENT 'Positive VARs, 3-Ph Min Avg Demand',
						  `negative_watts_3ph_min_avg_demand` float DEFAULT NULL COMMENT 'Negative Watts, 3-Ph, Min Avg Demand',
						  `negative_vars_3ph_min_avg_demand` float DEFAULT NULL COMMENT 'Negative VARs, 3-Ph Min Avg Demand',
						  `vas_3ph_min_avg_demand` float DEFAULT NULL COMMENT 'VAs, 3-Ph, Min Avg Demand',
						  `positive_pf_3ph_min_avg_demand` float DEFAULT NULL COMMENT 'Positive PF, 3-Ph, Min Avg Demand',
						  `negative_pf_3ph_min_avg_demand` float DEFAULT NULL COMMENT 'Negative PF, 3-Ph, Min Avg Demand',
						  `frequency_min` float DEFAULT NULL COMMENT 'Frequency, Min',
						  `volts_a_n_max` double DEFAULT NULL COMMENT 'Volts A-N, Max',
						  `volts_b_n_max` double DEFAULT NULL COMMENT 'Volts B-N, Max',
						  `volts_c_n_max` double DEFAULT NULL COMMENT 'Volts C-N, Max',
						  `volts_a_b_max` double DEFAULT NULL COMMENT 'Volts A-B, Max',
						  `volts_b_c_max` double DEFAULT NULL COMMENT 'Volts B-C, Max',
						  `volts_c_a_max` double DEFAULT NULL COMMENT 'Volts C-A, Max',
						  `amps_a_max_avg_demand` double DEFAULT NULL COMMENT 'Amps A, Max Avg Demand',
						  `amps_b_max_avg_demand` double DEFAULT NULL COMMENT 'Amps B, Max Avg Demand ',
						  `amps_c_max_avg_demand` double DEFAULT NULL COMMENT 'Amps C, Max Avg Demand',
						  `positive_watts_3ph_max_avg_demand` double DEFAULT NULL COMMENT 'Positive Watts, 3-Ph, Max Avg Demand',
						  `positive_vars_3ph_max_avg_demand` double DEFAULT NULL COMMENT 'Positive VARs, 3-Ph Max Avg Demand',
						  `negative_watts_3ph_max_avg_demand` double DEFAULT NULL COMMENT 'Negative Watts, 3-Ph, Max Avg Demand',
						  `negative_vars_3ph_max_avg_demand` double DEFAULT NULL COMMENT 'Negative VARs, 3-Ph Max Avg Demand',
						  `vas_3ph_max_avg_demand` double DEFAULT NULL COMMENT 'VAs, 3-Ph, Max Avg Demand',
						  `positive_pf_3ph_max_avg_demand` float DEFAULT NULL COMMENT 'Positive PF, 3-Ph, Max Avg Demand',
						  `negative_pf_3ph_max_avg_demand` float DEFAULT NULL COMMENT 'Negative PF, 3-Ph, Max Avg Demand',
						  `frequency_max` float DEFAULT NULL COMMENT 'Frequency, Max ',
						  `volts_a_n_thd` float DEFAULT NULL COMMENT 'Volts A-N, %THD',
						  `volts_b_n_thd` float DEFAULT NULL COMMENT 'Volts B-N, %THD',
						  `volts_c_n_thd` float DEFAULT NULL COMMENT 'Volts C-N, %THD',
						  `amps_a_thd` float DEFAULT NULL COMMENT 'Amps A, %THD',
						  `amps_b_thd` float DEFAULT NULL COMMENT 'Amps B, %THD',
						  `amps_c_thd` float DEFAULT NULL COMMENT 'Amps C, %THD',
						  `phase_a_current_0th` float DEFAULT NULL COMMENT 'Phase A Current 0th harmonic magnitude',
						  `phase_a_current_1st` float DEFAULT NULL COMMENT 'Phase A Current 1st harmonic magnitude',
						  `phase_a_current_2nd` float DEFAULT NULL COMMENT 'Phase A Current 2nd harmonic magnitude',
						  `phase_a_current_3rd` float DEFAULT NULL COMMENT 'Phase A Current 3rd harmonic magnitude',
						  `phase_a_current_4th` float DEFAULT NULL COMMENT 'Phase A Current 4th harmonic magnitude',
						  `phase_a_current_5th` float DEFAULT NULL COMMENT 'Phase A Current 5th harmonic magnitude',
						  `phase_a_current_6th` float DEFAULT NULL COMMENT 'Phase A Current 6th harmonic magnitude',
						  `phase_a_current_7th` float DEFAULT NULL COMMENT 'Phase A Current 7th harmonic magnitude',
						  `phase_a_voltage_0th` float DEFAULT NULL COMMENT 'Phase A Voltage 0th harmonic magnitude',
						  `phase_a_voltage_1st` float DEFAULT NULL COMMENT 'Phase A Voltage 1st harmonic magnitude',
						  `phase_a_voltage_2nd` float DEFAULT NULL COMMENT 'Phase A Voltage 2nd harmonic magnitude',
						  `phase_a_voltage_3rd` float DEFAULT NULL COMMENT 'Phase A Voltage 3rd harmonic magnitude',
						  `phase_b_current_0th` float DEFAULT NULL COMMENT 'Phase B Current 0th harmonic magnitude',
						  `phase_b_current_1st` float DEFAULT NULL COMMENT 'Phase B Current 1st harmonic magnitude',
						  `phase_b_current_2nd` float DEFAULT NULL COMMENT 'Phase B Current 2nd harmonic magnitude',
						  `phase_b_current_3rd` float DEFAULT NULL COMMENT 'Phase B Current 3rd harmonic magnitude',
						  `phase_b_current_4th` float DEFAULT NULL COMMENT 'Phase B Current 4th harmonic magnitude',
						  `phase_b_current_5th` float DEFAULT NULL COMMENT 'Phase B Current 5th harmonic magnitude',
						  `phase_b_current_6th` float DEFAULT NULL COMMENT 'Phase B Current 6th harmonic magnitude',
						  `phase_b_current_7th` float DEFAULT NULL COMMENT 'Phase B Current 7th harmonic magnitude',
						  `phase_b_voltage_0th` float DEFAULT NULL COMMENT 'Phase B Voltage 0th harmonic magnitude',
						  `phase_b_voltage_1st` float DEFAULT NULL COMMENT 'Phase B Voltage 1st harmonic magnitude',
						  `phase_b_voltage_2nd` float DEFAULT NULL COMMENT 'Phase B Voltage 2nd harmonic magnitude',
						  `phase_b_voltage_3rd` float DEFAULT NULL COMMENT 'Phase B Voltage 3rd harmonic magnitude',
						  `phase_c_current_0th` float DEFAULT NULL COMMENT 'Phase C Current 0th harmonic magnitude',
						  `phase_c_current_1st` float DEFAULT NULL COMMENT 'Phase C Current 1st harmonic magnitude',
						  `phase_c_current_2nd` float DEFAULT NULL COMMENT 'Phase C Current 2nd harmonic magnitude',
						  `phase_c_current_3rd` float DEFAULT NULL COMMENT 'Phase C Current 3rd harmonic magnitude',
						  `phase_c_current_4th` float DEFAULT NULL COMMENT 'Phase C Current 4th harmonic magnitude',
						  `phase_c_current_5th` float DEFAULT NULL COMMENT 'Phase C Current 5th harmonic magnitude',
						  `phase_c_current_6th` float DEFAULT NULL COMMENT 'Phase C Current 6th harmonic magnitude',
						  `phase_c_current_7th` float DEFAULT NULL COMMENT 'Phase C Current 7th harmonic magnitude',
						  `phase_c_voltage_0th` float DEFAULT NULL COMMENT 'Phase C Voltage 0th harmonic magnitude',
						  `phase_c_voltage_1st` float DEFAULT NULL COMMENT 'Phase C Voltage 1st harmonic magnitude',
						  `phase_c_voltage_2nd` float DEFAULT NULL COMMENT 'Phase C Voltage 2nd harmonic magnitude',
						  `phase_c_voltage_3rd` float DEFAULT NULL COMMENT 'Phase C Voltage 3rd harmonic magnitude',
						  `angle_phase_a_current` float DEFAULT NULL COMMENT 'Angle, Phase A Current',
						  `angle_phase_b_current` float DEFAULT NULL COMMENT 'Angle, Phase B Current',
						  `angle_phase_c_current` float DEFAULT NULL COMMENT 'Angle, Phase C Current',
						  `angle_volts_a_b` float DEFAULT NULL COMMENT 'Angle, Volts A-B',
						  `angle_volts_b_c` float DEFAULT NULL COMMENT 'Angle, Volts B-C',
						  `angle_volts_c_a` float DEFAULT NULL COMMENT 'Angle, Volts C-A',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 2">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `device_type` float DEFAULT NULL COMMENT 'Device Type',
						  `data_model_version` float DEFAULT NULL COMMENT 'Data Model Version',
						  `operational_mode` float DEFAULT NULL COMMENT 'Operational Mode',
						  `status_flags` float DEFAULT NULL COMMENT 'Status Flags',
						  `sensor1_data` double DEFAULT NULL COMMENT 'Sensor1 Data (W/m^2)',
						  `panel_temperature` float DEFAULT NULL COMMENT 'Panel Temperature (C)',
						  `external_power_sensor` float DEFAULT NULL COMMENT 'External Power Sensor (V)',
						  `calibration_date` double DEFAULT NULL COMMENT 'Calibration Date (yymmdd)',
						  `error_code` float DEFAULT NULL COMMENT 'Error Code',
						  `protocol_error` float DEFAULT NULL COMMENT 'Protocol Error',
						  `batch_number` float DEFAULT NULL COMMENT 'Batch Number',
						  `serial_number` float DEFAULT NULL COMMENT 'Serial Number',
						  `software_version` float DEFAULT NULL COMMENT 'Software Version',
						  `hardware_version` float DEFAULT NULL COMMENT 'Hardware Version',
						  `node_id` float DEFAULT NULL COMMENT 'Node ID',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT '0',
						  `nvm_panel_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 3">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `today_kwh` double DEFAULT NULL COMMENT 'Today kWh',
						  `ytd_kwh_total` double DEFAULT NULL COMMENT 'YTD kWh Total',
						  `life_kwh_total` double DEFAULT NULL COMMENT 'Life kWh Total',
						  `ytd_kwh` double DEFAULT NULL COMMENT 'YTD kWh',
						  `life_kwh` double DEFAULT NULL COMMENT 'Life kWh',
						  `last_15min_kwh` double DEFAULT NULL COMMENT 'Last 15 min kWh',
						  `timestamp_15minutes` double DEFAULT NULL COMMENT 'Timestamp 15 minutes (1970 + sec)',
						  `last_restart` double DEFAULT NULL COMMENT 'Last restart (1970 + sec)',
						  `uptime` double DEFAULT NULL COMMENT 'Uptime (seconds)',
						  `ac_power` double DEFAULT NULL COMMENT 'AC Power (kW)',
						  `ac_frequency` float DEFAULT NULL COMMENT 'AC Frequency (Hz)',
						  `pv_voltage` float DEFAULT NULL COMMENT 'PV Voltage (VDC)',
						  `pv_current` float DEFAULT NULL COMMENT 'PV Current (ADC)',
						  `common_mode` float DEFAULT NULL COMMENT 'Common mode (Vrms)',
						  `ambient_temperature` float DEFAULT NULL COMMENT 'Ambient temperature (degrees C)',
						  `coolant_temperature` float DEFAULT NULL COMMENT 'Coolant temperature (degrees C)',
						  `reactor_temperature` float DEFAULT NULL COMMENT 'Reactor temperature (degrees C)',
						  `cabinet_temperature` float DEFAULT NULL COMMENT 'Cabinet temperature (degrees C)',
						  `bus_voltage` float DEFAULT NULL COMMENT 'Bus voltage (V)',
						  `ground_current` float DEFAULT NULL COMMENT 'Ground current (A)',
						  `reactive_power` float DEFAULT NULL COMMENT 'Reactive Power (kVAr)',
						  `active_faults1` float DEFAULT NULL COMMENT 'Active Faults 1 (int bitmap)',
						  `active_faults2` float DEFAULT NULL COMMENT 'Active Faults 2 (int bitmap)',
						  `active_faults3` float DEFAULT NULL COMMENT 'Active Faults 3 (int bitmap)',
						  `status` float DEFAULT NULL COMMENT 'Status (int bitmap)',
						  `warnings1` float DEFAULT NULL COMMENT 'Warnings 1 (int bitmap)',
						  `warnings2_reserved` float DEFAULT NULL COMMENT 'Warnings 2 (reserved) (int bitmap)',
						  `warnings3_reserved` float DEFAULT NULL COMMENT 'Warnings 3 (reserved) (int bitmap)',
						  `limits` float DEFAULT NULL COMMENT 'Limits',
						  `year` float DEFAULT NULL COMMENT 'Year',
						  `month` float DEFAULT NULL COMMENT 'Month',
						  `day` float DEFAULT NULL COMMENT 'Day',
						  `hour` float DEFAULT NULL COMMENT 'Hour',
						  `minutes` float DEFAULT NULL COMMENT 'Minutes',
						  `seconds` float DEFAULT NULL COMMENT 'Seconds',
						  `current_time` double DEFAULT NULL COMMENT 'Current time (1970 + sec)',
						  `ac_current` double DEFAULT NULL COMMENT 'AC Current (Arms)',
						  `requset_set_ac_power_limit` float DEFAULT NULL COMMENT 'Requset/Set AC Power Limit',
						  `request_set_instantaneous_reactive_power_set_point` float DEFAULT NULL COMMENT 'Request/Set Instantaneous Reactive Power Set Point',
						  `autostart_status` float DEFAULT NULL COMMENT 'Autostart Status',
						  `set_read_reactive_power_mode` float DEFAULT NULL COMMENT 'Set/Read Reactive Power Mode',
						  `set_read_p_ac_limit` float DEFAULT NULL COMMENT 'Set/Read P AC Limit',
						  `set_read_instantaneous_reactive_power_set_point` float DEFAULT NULL COMMENT 'Set/Read Instantaneous Reactive Power Set Point',
						  `set_read_power_factor_set_point` float DEFAULT NULL COMMENT 'Set/Read Power Factor Set Point',
						  `ac_power_ramp_rate` float DEFAULT NULL COMMENT 'AC Power Ramp Rate',
						  `reactive_power_ramp_rate` float DEFAULT NULL COMMENT 'Reactive Power Ramp Rate',
						  `power_factor_ramp_rate` float DEFAULT NULL COMMENT 'Power Factor Ramp Rate',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 4">
	                CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int(11) NOT NULL,
						  `error` int(10) unsigned DEFAULT '0',
						  `low_alarm` int(10) unsigned DEFAULT '0',
						  `high_alarm` int(10) unsigned DEFAULT '0',
						  `total_kwh_delivered` double DEFAULT NULL COMMENT 'Total kWh Delivered',
						  `volts_a_l_n` double DEFAULT NULL COMMENT 'Volts A L-N',
						  `volts_b_l_n` double DEFAULT NULL COMMENT 'Volts B L-N',
						  `volts_c_l_n` double DEFAULT NULL COMMENT 'Volts C L-N',
						  `current_a` double DEFAULT NULL COMMENT 'Current A',
						  `current_b` double DEFAULT NULL COMMENT 'Current B',
						  `current_c` double DEFAULT NULL COMMENT 'Current C',
						  `dc_output_voltage` double DEFAULT NULL COMMENT 'DC Input Voltage',
						  `dc_output_current` double DEFAULT NULL COMMENT 'DC Input Current',
						  `line_frenquency` double DEFAULT NULL COMMENT 'Line Frequency',
						  `line_kw` double DEFAULT NULL COMMENT 'Line kW',
						  `inverter_operating_status` varchar(60) DEFAULT NULL COMMENT 'Inverter Operating Status (State)',
						  `inverter_fault_word0` double DEFAULT NULL COMMENT 'Inverter Fault Word 0',
						  `inverter_fault_word1` double DEFAULT NULL COMMENT 'Inverter Fault Word 1',
						  `inverter_fault_word2` double DEFAULT NULL COMMENT 'Inverter Fault Word 2',
						  `data_comm_status` varchar(60) DEFAULT NULL COMMENT 'Data Comm Status',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>   

	            <when test="id_device_group == 5">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `irradiance` double DEFAULT NULL COMMENT 'Trradiance',
						  `tcell` double DEFAULT NULL COMMENT 'Tcell',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT '0',
						  `nvm_panel_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 6">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `today_kwh` double DEFAULT NULL COMMENT 'Today kWh',
						  `ytd_kwh_total` double DEFAULT NULL COMMENT 'YTD kWh Total',
						  `life_kwh_total` double DEFAULT NULL COMMENT 'Life kWh Total',
						  `ytd_kwh` double DEFAULT NULL COMMENT 'YTD kWh',
						  `life_kwh` double DEFAULT NULL COMMENT 'Life kWh',
						  `last_15min_kwh` double DEFAULT NULL COMMENT 'Last 15 min kWh',
						  `timestamp_15minutes` double DEFAULT NULL COMMENT 'Timestamp 15 minutes (1970 + sec)',
						  `last_restart` double DEFAULT NULL COMMENT 'Last restart (1970 + sec)',
						  `uptime` double DEFAULT NULL COMMENT 'Uptime (seconds)',
						  `ac_power` double DEFAULT NULL COMMENT 'AC Power (kW)',
						  `ac_frequency` double DEFAULT NULL COMMENT 'AC Frequency (Hz)',
						  `pv_voltage` double DEFAULT NULL COMMENT 'PV Voltage (VDC)',
						  `pv_current` double DEFAULT NULL COMMENT 'PV Current (ADC)',
						  `common_mode` double DEFAULT NULL COMMENT 'Common mode (Vrms)',
						  `ambient_temperature` double DEFAULT NULL COMMENT 'Ambient temperature (degrees C)',
						  `coolant_temperature` double DEFAULT NULL COMMENT 'Coolant temperature (degrees C)',
						  `reactor_temperature` double DEFAULT NULL COMMENT 'Reactor temperature (degrees C)',
						  `cabinet_temperature` double DEFAULT NULL COMMENT 'Cabinet temperature (degrees C)',
						  `bus_voltage` double DEFAULT NULL COMMENT 'Bus voltage (V)',
						  `ground_current` double DEFAULT NULL COMMENT 'Ground current (A)',
						  `reactive_power` double DEFAULT NULL COMMENT 'Reactive Power (kVAr)',
						  `active_faults1` double DEFAULT NULL COMMENT 'Active Faults 1 (int bitmap)',
						  `active_faults2` double DEFAULT NULL COMMENT 'Active Faults 2 (int bitmap)',
						  `active_faults3` double DEFAULT NULL COMMENT 'Active Faults 3 (int bitmap)',
						  `status` double DEFAULT NULL COMMENT 'Status (int bitmap)',
						  `warnings1` double DEFAULT NULL COMMENT 'Warnings 1 (int bitmap)',
						  `warnings2_reserved` double DEFAULT NULL COMMENT 'Warnings 2 (reserved) (int bitmap)',
						  `warnings3_reserved` double DEFAULT NULL COMMENT 'Warnings 3 (reserved) (int bitmap)',
						  `limits` double DEFAULT NULL COMMENT 'Limits',
						  `year` double DEFAULT NULL COMMENT 'Year',
						  `month` double DEFAULT NULL COMMENT 'Month',
						  `day` double DEFAULT NULL COMMENT 'Day',
						  `hour` double DEFAULT NULL COMMENT 'Hour',
						  `minutes` double DEFAULT NULL COMMENT 'Minutes',
						  `seconds` double DEFAULT NULL COMMENT 'Seconds',
						  `current_time` double DEFAULT NULL COMMENT 'Current time (1970 + sec)',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 8">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `device_type` float DEFAULT NULL COMMENT 'Device Type',
						  `data_model_version` float DEFAULT NULL COMMENT 'Data Model Version',
						  `operational_mode` float DEFAULT NULL COMMENT 'Operational Mode',
						  `status_flags` float DEFAULT NULL COMMENT 'Status Flags',
						  `sensor1_data` double DEFAULT NULL COMMENT 'Sensor1 Data (W/m^2)',
						  `panel_temperature` float DEFAULT NULL COMMENT 'Panel Temperature (C)',
						  `external_power_sensor` float DEFAULT NULL COMMENT 'External Power Sensor (V)',
						  `calibration_date` double DEFAULT NULL COMMENT 'Calibration Date (yymmdd)',
						  `error_code` float DEFAULT NULL COMMENT 'Error Code',
						  `protocol_error` float DEFAULT NULL COMMENT 'Protocol Error',
						  `batch_number` float DEFAULT NULL COMMENT 'Batch Number',
						  `serial_number` float DEFAULT NULL COMMENT 'Serial Number',
						  `software_version` float DEFAULT NULL COMMENT 'Software Version',
						  `hardware_version` float DEFAULT NULL COMMENT 'Hardware Version',
						  `node_id` float DEFAULT NULL COMMENT 'Node ID',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT '0',
						  `nvm_panel_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 9">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int DEFAULT NULL,
						  `low_alarm` int DEFAULT NULL,
						  `high_alarm` int DEFAULT NULL,
						  `PowerOnOff` double DEFAULT NULL,
						  `PActiveSet` double DEFAULT NULL,
						  `PFactorSet` double DEFAULT NULL,
						  `PReactiveSet` double DEFAULT NULL,
						  `GridVMax` double DEFAULT NULL,
						  `GridVmaxTripT` double DEFAULT NULL,
						  `GridVMin` double DEFAULT NULL,
						  `GridVminTripT` double DEFAULT NULL,
						  `GridFMax` double DEFAULT NULL,
						  `GridFMin` double DEFAULT NULL,
						  `GridFTripT` double DEFAULT NULL,
						  `ActivePower` double DEFAULT NULL,
						  `PowerFactor` double DEFAULT NULL,
						  `StartDelayTime` double DEFAULT NULL,
						  `Risomin` double DEFAULT NULL,
						  `PVStartVol` double DEFAULT NULL,
						  `DCIMax` double DEFAULT NULL,
						  `TambientMax` double DEFAULT NULL,
						  `TmoduleMax` double DEFAULT NULL,
						  `OffsetDiffMax` double DEFAULT NULL,
						  `GridVolUnbalance` double DEFAULT NULL,
						  `SoftPowerStep` double DEFAULT NULL,
						  `TotalEnergyToEnergy` double DEFAULT NULL,
						  `TotalEnergyToday` double DEFAULT NULL,
						  `InverterEfficiency` double DEFAULT NULL,
						  `PowerFactor1` double DEFAULT NULL,
						  `MaxActivePowerToday` double DEFAULT NULL,
						  `RunTimeToGrid` double DEFAULT NULL,
						  `AC_ActivePower` double DEFAULT NULL,
						  `AC_ApparentPower` double DEFAULT NULL,
						  `GridVoltageUab` double DEFAULT NULL,
						  `GridVoltageUbc` double DEFAULT NULL,
						  `GridVoltageUca` double DEFAULT NULL,
						  `GridA_PhaseCurrent` double DEFAULT NULL,
						  `GridB_PhaseCurrent` double DEFAULT NULL,
						  `GridC_PhaseCurrent` double DEFAULT NULL,
						  `PV1_Voltage` double DEFAULT NULL,
						  `PV1_Current` double DEFAULT NULL,
						  `PV2_Voltage` double DEFAULT NULL,
						  `PV2_Current` double DEFAULT NULL,
						  `PV3_Voltage` double DEFAULT NULL,
						  `PV3_Current` double DEFAULT NULL,
						  `Grid_Frequency` double DEFAULT NULL,
						  `ModuleTemp` double DEFAULT NULL,
						  `InternalTemp` double DEFAULT NULL,
						  `TransformerTemp` double DEFAULT NULL,
						  `InverterModeCode` double DEFAULT NULL,
						  `PermanentFaultCode` double DEFAULT NULL,
						  `WarnCode` double DEFAULT NULL,
						  `FaultCode0` double DEFAULT NULL,
						  `FaultCode1` double DEFAULT NULL,
						  `FaultCode2` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  `SerialNumber` varchar(200) DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 10">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `AccumulatedRealEnergyNet` double DEFAULT NULL COMMENT 'Accumulated Real Energy Net',
						  `RealEnergyQuadrants14Import` double DEFAULT NULL COMMENT 'Real Energy Quadrants 1 and 4, Import',
						  `RealEnergyQuadrants23Export` double DEFAULT NULL COMMENT 'Real Energy Quadrants 2 and 3, Export',
						  `ReactiveEnergyQuadrant1` double DEFAULT NULL COMMENT 'Reactive Energy Quadrant 1',
						  `ReactiveEnergyQuadrant2` double DEFAULT NULL COMMENT 'Reactive Energy Quadrant 2',
						  `ReactiveEnergyQuadrant3` double DEFAULT NULL COMMENT 'Reactive Energy Quadrant 3',
						  `ReactiveEnergyQuadrant4` double DEFAULT NULL COMMENT 'Reactive Energy Quadrant 4',
						  `ApparentEnergyNet` double DEFAULT NULL COMMENT 'Apparent Energy Net',
						  `ApparentEnergyQuadrants14` double DEFAULT NULL COMMENT 'Apparent Energy Quadrants 1 and 4',
						  `ApparentEnergyQuadrants23` double DEFAULT NULL COMMENT 'Apparent Energy Quadrants 2 and 3',
						  `TotalNetInstantaneousRealPower` double DEFAULT NULL COMMENT 'Total Net Instantaneous Real Power',
						  `TotalNetInstantaneousReactivePower` double DEFAULT NULL COMMENT 'Total Net Instantaneous Reactive Power',
						  `TotalNetInstantaneousApparentPower` double DEFAULT NULL COMMENT 'Total Net Instantaneous Apparent Power',
						  `TotalPowerFactor` double DEFAULT NULL COMMENT 'Total Power Factor',
						  `VoltageLL3pAve` double DEFAULT NULL COMMENT 'Voltage, L-L, 3p Ave',
						  `VoltageLN3pAve` double DEFAULT NULL COMMENT 'Voltage, L-N, 3p Ave',
						  `Current3pAve` double DEFAULT NULL COMMENT 'Current, 3p Ave',
						  `Frequency` double DEFAULT NULL COMMENT 'Frequency',
						  `TotalRealPowerPresentDemand` double DEFAULT NULL COMMENT 'Total Real Power Present Demand',
						  `TotalReactivePowerPresentDemand` double DEFAULT NULL COMMENT 'Total Reactive Power Present Demand',
						  `TotalApparentPowerPresentDemand` double DEFAULT NULL COMMENT 'Total Apparent Power Present Demand',
						  `TotalRealPowerMaxDemandImport` double DEFAULT NULL COMMENT 'Total Real Power Max Demand, Import',
						  `TotalReactivePowerMaxDemandImport` double DEFAULT NULL COMMENT 'Total Reactive Power Max Demand, Import',
						  `TotalApparentPowerMaxDemandImport` double DEFAULT NULL COMMENT 'Total Apparent Power Max Demand, Import',
						  `TotalRealPowerMaxDemandExport` double DEFAULT NULL COMMENT 'Total Real Power Max Demand, Export',
						  `TotalReactivePowerMaxDemandExport` double DEFAULT NULL COMMENT 'Total Reactive Power Max Demand, Export',
						  `TotalApparentPowerMaxDemandExport` double DEFAULT NULL COMMENT 'Total Apparent Power Max Demand, Export',
						  `AccumulatedRealEnergyPhaseAImport` double DEFAULT NULL COMMENT 'Accumulated Real Energy, Phase A, Import',
						  `AccumulatedRealEnergyPhaseBImport` double DEFAULT NULL COMMENT 'Accumulated Real Energy, Phase B, Import',
						  `AccumulatedRealEnergyPhaseCImport` double DEFAULT NULL COMMENT 'Accumulated Real Energy, Phase C, Import',
						  `AccumulatedRealEnergyPhaseAExport` double DEFAULT NULL COMMENT 'Accumulated Real Energy, Phase A, Export',
						  `AccumulatedRealEnergyPhaseBExport` double DEFAULT NULL COMMENT 'Accumulated Real Energy, Phase B, Export',
						  `AccumulatedRealEnergyPhaseCExport` double DEFAULT NULL COMMENT 'Accumulated Real Energy, Phase C, Export',
						  `AccumulatedQ1ReactiveEnergyPhaseAImport` double DEFAULT NULL COMMENT 'Accumulated Q1 Reactive Energy, Phase A, Import',
						  `AccumulatedQ1ReactiveEnergyPhaseBImport` double DEFAULT NULL COMMENT 'Accumulated Q1 Reactive Energy, Phase B, Import',
						  `AccumulatedQ1ReactiveEnergyPhaseCImport` double DEFAULT NULL COMMENT 'Accumulated Q1 Reactive Energy, Phase C, Import',
						  `AccumulatedQ2ReactiveEnergyPhaseAImport` double DEFAULT NULL COMMENT 'Accumulated Q2 Reactive Energy, Phase A, Import',
						  `AccumulatedQ2ReactiveEnergyPhaseBImport` double DEFAULT NULL COMMENT 'Accumulated Q2 Reactive Energy, Phase B, Import',
						  `AccumulatedQ2ReactiveEnergyPhaseCImport` double DEFAULT NULL COMMENT 'Accumulated Q2 Reactive Energy, Phase C, Import',
						  `AccumulatedQ3ReactiveEnergyPhaseAExport` double DEFAULT NULL COMMENT 'Accumulated Q3 Reactive Energy, Phase A, Export',
						  `AccumulatedQ3ReactiveEnergyPhaseBExport` double DEFAULT NULL COMMENT 'Accumulated Q3 Reactive Energy, Phase B, Export',
						  `AccumulatedQ3ReactiveEnergyPhaseCExport` double DEFAULT NULL COMMENT 'Accumulated Q3 Reactive Energy, Phase C, Export',
						  `AccumulatedQ4ReactiveEnergyPhaseAExport` double DEFAULT NULL COMMENT 'Accumulated Q4 Reactive Energy, Phase A, Export',
						  `AccumulatedQ4ReactiveEnergyPhaseBExport` double DEFAULT NULL COMMENT 'Accumulated Q4 Reactive Energy, Phase B, Export',
						  `AccumulatedQ4ReactiveEnergyPhaseCExport` double DEFAULT NULL COMMENT 'Accumulated Q4 Reactive Energy, Phase C, Export',
						  `AccumulatedApparentEnergyPhaseAImport` double DEFAULT NULL COMMENT 'Accumulated Apparent Energy, Phase A, Import',
						  `AccumulatedApparentEnergyPhaseBImport` double DEFAULT NULL COMMENT 'Accumulated Apparent Energy, Phase B, Import',
						  `AccumulatedApparentEnergyPhaseCImport` double DEFAULT NULL COMMENT 'Accumulated Apparent Energy, Phase C, Import',
						  `AccumulatedApparentEnergyPhaseAExport` double DEFAULT NULL COMMENT 'Accumulated Apparent Energy, Phase A, Export',
						  `AccumulatedApparentEnergyPhaseBExport` double DEFAULT NULL COMMENT 'Accumulated Apparent Energy, Phase B, Export',
						  `AccumulatedApparentEnergyPhaseCExport` double DEFAULT NULL COMMENT 'Accumulated Apparent Energy, Phase C, Export',
						  `RealPowerPhaseA` double DEFAULT NULL COMMENT 'Real Power, Phase A',
						  `RealPowerPhaseB` double DEFAULT NULL COMMENT 'Real Power, Phase B',
						  `RealPowerPhaseC` double DEFAULT NULL COMMENT 'Real Power, Phase C',
						  `ReactivePowerPhaseA` double DEFAULT NULL COMMENT 'Reactive Power, Phase A',
						  `ReactivePowerPhaseB` double DEFAULT NULL COMMENT 'Reactive Power, Phase B',
						  `ReactivePowerPhaseC` double DEFAULT NULL COMMENT 'Reactive Power, Phase C',
						  `ApparentPowerPhaseA` double DEFAULT NULL COMMENT 'Apparent Power, Phase A',
						  `ApparentPowerPhaseB` double DEFAULT NULL COMMENT 'Apparent Power, Phase B',
						  `ApparentPowerPhaseC` double DEFAULT NULL COMMENT 'Apparent Power, Phase C',
						  `PowerFactorPhaseA` double DEFAULT NULL COMMENT 'Power Factor, Phase A',
						  `PowerFactorPhaseB` double DEFAULT NULL COMMENT 'Power Factor, Phase B',
						  `PowerFactorPhaseC` double DEFAULT NULL COMMENT 'Power Factor, Phase C',
						  `VoltagePhaseAB` double DEFAULT NULL COMMENT 'Voltage, Phase A-B',
						  `VoltagePhaseBC` double DEFAULT NULL COMMENT 'Voltage, Phase B-C',
						  `VoltagePhaseAC` double DEFAULT NULL COMMENT 'Voltage, Phase A-C',
						  `VoltagePhaseAN` double DEFAULT NULL COMMENT 'Voltage, Phase A-N',
						  `VoltagePhaseBN` double DEFAULT NULL COMMENT 'Voltage, Phase B-N',
						  `VoltagePhaseCN` double DEFAULT NULL COMMENT 'Voltage, Phase C-N',
						  `CurrentPhaseA` double DEFAULT NULL COMMENT 'Current, Phase A',
						  `CurrentPhaseB` double DEFAULT NULL COMMENT 'Current, Phase B',
						  `CurrentPhaseC` double DEFAULT NULL COMMENT 'Current, Phase C',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>

	            <when test="id_device_group == 12">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Software_Identification_Number` double DEFAULT NULL,
						  `Fault_Word1` double DEFAULT NULL,
						  `Fault_Word2` double DEFAULT NULL,
						  `Fault_Word3` double DEFAULT NULL,
						  `Fault_Word4` double DEFAULT NULL,
						  `Fault_Word5` double DEFAULT NULL,
						  `Fault_Word6` double DEFAULT NULL,
						  `Fault_Word7` double DEFAULT NULL,
						  `Number_of_Faults` double DEFAULT NULL,
						  `Program_Checksum` double DEFAULT NULL,
						  `Parameter_Checksum` double DEFAULT NULL,
						  `DC_Input_Volts` double DEFAULT NULL,
						  `DC_Link_Volts` double DEFAULT NULL,
						  `DC_Link_Amps` double DEFAULT NULL,
						  `DC_Ground_Current` double DEFAULT NULL,
						  `Line_Amps_A` double DEFAULT NULL,
						  `Line_Amps_B` double DEFAULT NULL,
						  `Line_Amps_C` double DEFAULT NULL,
						  `Line_Amps_Average` double DEFAULT NULL,
						  `Neutral_Current` double DEFAULT NULL,
						  `Line_Volts_A` double DEFAULT NULL,
						  `Line_Volts_B` double DEFAULT NULL,
						  `Line_Volts_C` double DEFAULT NULL,
						  `Line_Volts_Average` double DEFAULT NULL,
						  `Line_Voltage_Unbalance` double DEFAULT NULL,
						  `Line_Current_Unbalance` double DEFAULT NULL,
						  `Input_kW` double DEFAULT NULL,
						  `Output_kw` double DEFAULT NULL,
						  `Output_kvar` double DEFAULT NULL,
						  `Output_kva` double DEFAULT NULL,
						  `Power_Factor` double DEFAULT NULL,
						  `Ground_Impedance` double DEFAULT NULL,
						  `String_Amps1` double DEFAULT NULL,
						  `String_Amps2` double DEFAULT NULL,
						  `String_Amps3` double DEFAULT NULL,
						  `String_Amps4` double DEFAULT NULL,
						  `String_Amps5` double DEFAULT NULL,
						  `String_Amps6` double DEFAULT NULL,
						  `String_Amps7` double DEFAULT NULL,
						  `String_Amps8` double DEFAULT NULL,
						  `String_Amps9` double DEFAULT NULL,
						  `String_Amps10` double DEFAULT NULL,
						  `String_Amps11` double DEFAULT NULL,
						  `String_Amps12` double DEFAULT NULL,
						  `String_Amps13` double DEFAULT NULL,
						  `String_Amps14` double DEFAULT NULL,
						  `String_Amps15` double DEFAULT NULL,
						  `String_Amps16` double DEFAULT NULL,
						  `String_Amps17` double DEFAULT NULL,
						  `String_Amps18` double DEFAULT NULL,
						  `String_Amps19` double DEFAULT NULL,
						  `String_Amps20` double DEFAULT NULL,
						  `String_Amps21` double DEFAULT NULL,
						  `String_Amps22` double DEFAULT NULL,
						  `String_Amps23` double DEFAULT NULL,
						  `String_Amps24` double DEFAULT NULL,
						  `String_Amps25` double DEFAULT NULL,
						  `String_Amps26` double DEFAULT NULL,
						  `String_Amps27` double DEFAULT NULL,
						  `String_Amps28` double DEFAULT NULL,
						  `String_Amps29` double DEFAULT NULL,
						  `String_Amps30` double DEFAULT NULL,
						  `String_Amps31` double DEFAULT NULL,
						  `String_Amps32` double DEFAULT NULL,
						  `String_Amps_Average` double DEFAULT NULL,
						  `String_kwh1` double DEFAULT NULL,
						  `String_kwh2` double DEFAULT NULL,
						  `String_kwh3` double DEFAULT NULL,
						  `String_kwh4` double DEFAULT NULL,
						  `String_kwh5` double DEFAULT NULL,
						  `String_kwh6` double DEFAULT NULL,
						  `String_kwh7` double DEFAULT NULL,
						  `String_kwh8` double DEFAULT NULL,
						  `String_kwh9` double DEFAULT NULL,
						  `String_kwh10` double DEFAULT NULL,
						  `String_kwh11` double DEFAULT NULL,
						  `String_kwh12` double DEFAULT NULL,
						  `String_kwh13` double DEFAULT NULL,
						  `String_kwh14` double DEFAULT NULL,
						  `String_kwh15` double DEFAULT NULL,
						  `String_kwh16` double DEFAULT NULL,
						  `String_kwh17` double DEFAULT NULL,
						  `String_kwh18` double DEFAULT NULL,
						  `String_kwh19` double DEFAULT NULL,
						  `String_kwh20` double DEFAULT NULL,
						  `String_kwh21` double DEFAULT NULL,
						  `String_kwh22` double DEFAULT NULL,
						  `String_kwh23` double DEFAULT NULL,
						  `String_kwh24` double DEFAULT NULL,
						  `String_kwh25` double DEFAULT NULL,
						  `String_kwh26` double DEFAULT NULL,
						  `String_kwh27` double DEFAULT NULL,
						  `String_kwh28` double DEFAULT NULL,
						  `String_kwh29` double DEFAULT NULL,
						  `String_kwh30` double DEFAULT NULL,
						  `String_kwh31` double DEFAULT NULL,
						  `String_kwh32` double DEFAULT NULL,
						  `String_kwh_Average` double DEFAULT NULL,
						  `Total_kwh` double DEFAULT NULL,
						  `Total_mwh` double DEFAULT NULL,
						  `kwh_Today` double DEFAULT NULL,
						  `kwh_Yesterday` double DEFAULT NULL,
						  `Total_kwh7_days` double DEFAULT NULL,
						  `Total_kwh30_days` double DEFAULT NULL,
						  `Average_kwh7_days` double DEFAULT NULL,
						  `Average_kwh30_Days` double DEFAULT NULL,
						  `Average_Line_Frequency` double DEFAULT NULL,
						  `Average_Line_Frequency_Error` double DEFAULT NULL,
						  `FPGA_Identification_Number` double DEFAULT NULL,
						  `DC_Input_Voltage_Timer` double DEFAULT NULL,
						  `AC_Line_Voltage_Timer` double DEFAULT NULL,
						  `Operating_State` double DEFAULT NULL,
						  `Internal_Air_Temperature` double DEFAULT NULL,
						  `Inverter_Air_Temperature` double DEFAULT NULL,
						  `Heatsink_Temperature1` double DEFAULT NULL,
						  `Heatsink_Temperature2` double DEFAULT NULL,
						  `Heatsink_Temperature3` double DEFAULT NULL,
						  `Heatsink_Temperature4` double DEFAULT NULL,
						  `Heatsink_Temperature5` double DEFAULT NULL,
						  `Heatsink_Temperature6` double DEFAULT NULL,
						  `Heatsink_Maximum_Temparature1` double DEFAULT NULL,
						  `Fan_Speed_Command1` double DEFAULT NULL,
						  `Heatsink_Maximum_Temperature2` double DEFAULT NULL,
						  `Fan_Speed_Command2` double DEFAULT NULL,
						  `Number_of_Temperature_Feedbacks` double DEFAULT NULL,
						  `Serial_number_word1` double DEFAULT NULL,
						  `Serial_number_word2` double DEFAULT NULL,
						  `Serial_number_word3` double DEFAULT NULL,
						  `Serial_number_word4` double DEFAULT NULL,
						  `Number_of_Strings` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 13">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `TotalEnergyConsumption` double DEFAULT NULL COMMENT 'Total Energy Consumption',
						  `TotalRealPower` double DEFAULT NULL COMMENT 'Total Real Power',
						  `TotalReactivePower` double DEFAULT NULL COMMENT 'Total Reactive Power',
						  `TotalApparentPower` double DEFAULT NULL COMMENT 'Total Apparent Power',
						  `AverageVoltageLN` double DEFAULT NULL COMMENT 'Average Voltage (L-N)',
						  `AverageVoltageLL` double DEFAULT NULL COMMENT 'Average Voltage (L-L)',
						  `AverageCurrent` double DEFAULT '0' COMMENT 'Average Current',
						  `TotalSystemPowerFactor` double DEFAULT NULL COMMENT 'Total System Power Factor',
						  `Frequency` double DEFAULT NULL COMMENT 'Frequency',
						  `SlidingWindowRealPowerDemand` double DEFAULT NULL COMMENT 'Sliding Window Real Power Demand',
						  `VoltageAN` double DEFAULT NULL COMMENT 'Voltage A-N',
						  `VoltageBN` double DEFAULT NULL COMMENT 'Voltage B-N',
						  `VoltageCN` double DEFAULT NULL COMMENT 'Voltage C-N',
						  `VoltageAB` double DEFAULT NULL COMMENT 'Voltage A-B',
						  `VoltageBC` double DEFAULT NULL COMMENT 'Voltage B-C',
						  `VoltageAC` double DEFAULT NULL COMMENT 'Voltage A-C',
						  `CurrentA` double DEFAULT NULL COMMENT 'Current A',
						  `CurrentB` double DEFAULT NULL COMMENT 'Current B',
						  `CurrentC` double DEFAULT NULL COMMENT 'Current C',
						  `RealPowerA` double DEFAULT NULL COMMENT 'Real Power A',
						  `RealPowerB` double DEFAULT NULL COMMENT 'Real Power B',
						  `RealPowerC` double DEFAULT NULL COMMENT 'Real Power C',
						  `ReactivePowerA` double DEFAULT NULL COMMENT 'Reactive Power A',
						  `ReactivePowerB` double DEFAULT NULL COMMENT 'Reactive Power B',
						  `ReactivePowerC` double DEFAULT NULL COMMENT 'Reactive Power C',
						  `ApparentPowerA` double DEFAULT NULL COMMENT 'Apparent Power A',
						  `ApparentPowerB` double DEFAULT NULL COMMENT 'Apparent Power B',
						  `ApparentPowerC` double DEFAULT NULL COMMENT 'Apparent Power C',
						  `PowerFactorA` double DEFAULT NULL COMMENT 'Power Factor A',
						  `PowerFactorB` double DEFAULT NULL COMMENT 'Power Factor B',
						  `PowerFactorC` double DEFAULT NULL COMMENT 'Power Factor C',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 14">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `DeviceType` double DEFAULT NULL COMMENT 'Device Type',
						  `DataModelVersion` double DEFAULT NULL COMMENT 'Data Model Version',
						  `OperationalMode` double DEFAULT NULL COMMENT 'Operational Mode',
						  `StatusFlags` double DEFAULT NULL COMMENT 'Status Flags',
						  `SunPOATempComp` double DEFAULT NULL COMMENT 'Sun (POA Temp Comp)',
						  `PanelTemperature` double DEFAULT NULL COMMENT 'Panel Temperature (C)',
						  `ExtPowerSensor` double DEFAULT NULL COMMENT 'Ext Power Sensor',
						  `BatchNumber` double DEFAULT NULL COMMENT 'Batch Number',
						  `SerialNumber` double DEFAULT NULL COMMENT 'Serial Number',
						  `CalibrationDateYYMMDD` double DEFAULT NULL COMMENT 'Calibration Date YYMMDD',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT '0',
						  `nvm_panel_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 15">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `ActivePowerTotal` double DEFAULT NULL COMMENT 'Active Power Total',
						  `ReactivePowerTotal` double DEFAULT NULL COMMENT 'Reactive Power Total',
						  `ApparentPowerTotal` double DEFAULT NULL COMMENT 'Apparent Power Total',
						  `VoltageAverage` double DEFAULT NULL COMMENT 'Voltage Average',
						  `VoltageLLAverage` double DEFAULT NULL COMMENT 'Voltage (L-L) Average',
						  `CurrentAverage` double DEFAULT NULL COMMENT 'Current Average',
						  `SystemPowerFactor` double DEFAULT '0' COMMENT 'System Power Factor',
						  `SystemFrequency` double DEFAULT NULL COMMENT 'System Frequency',
						  `VoltageAverageAngle` double DEFAULT NULL COMMENT 'Voltage Average Angle',
						  `SystemQuadrant` double DEFAULT NULL COMMENT 'System Quadrant',
						  `VoltageA` double DEFAULT NULL COMMENT 'Voltage A',
						  `VoltageB` double DEFAULT NULL COMMENT 'Voltage B',
						  `VoltageC` double DEFAULT NULL COMMENT 'Voltage C',
						  `VoltageAB` double DEFAULT NULL COMMENT 'Voltage A-B',
						  `VoltageBC` double DEFAULT NULL COMMENT 'Voltage B-C',
						  `VoltageAC` double DEFAULT NULL COMMENT 'Voltage A-C',
						  `CurrentA` double DEFAULT NULL COMMENT 'Current A',
						  `CurrentB` double DEFAULT NULL COMMENT 'Current B',
						  `CurrentC` double DEFAULT NULL COMMENT 'Current C',
						  `ActivePowerA` double DEFAULT NULL COMMENT 'Active Power A',
						  `ActivePowerB` double DEFAULT NULL COMMENT 'Active Power B',
						  `ActivePowerC` double DEFAULT NULL COMMENT 'Active Power C',
						  `ReactivePowerA` double DEFAULT NULL COMMENT 'Reactive Power A',
						  `ReactivePowerB` double DEFAULT NULL COMMENT 'Reactive Power B',
						  `ReactivePowerC` double DEFAULT NULL COMMENT 'Reactive Power C',
						  `ApparentPowerA` double DEFAULT NULL COMMENT 'Apparent Power A',
						  `ApparentPowerB` double DEFAULT NULL COMMENT 'Apparent Power B',
						  `ApparentPowerC` double DEFAULT NULL COMMENT 'Apparent Power C',
						  `PowerFactorA` double DEFAULT NULL COMMENT 'Power Factor A',
						  `PowerFactorB` double DEFAULT NULL COMMENT 'Power Factor B',
						  `PowerFactorC` double DEFAULT NULL COMMENT 'Power Factor C',
						  `VoltageAngleAB` double DEFAULT NULL COMMENT 'Voltage Angle AB',
						  `VoltageAngleBC` double DEFAULT NULL COMMENT 'Voltage Angle BC',
						  `VoltageAngleCA` double DEFAULT NULL COMMENT 'Voltage Angle CA',
						  `QuadrantA` double DEFAULT NULL COMMENT 'Quadrant A',
						  `QuadrantB` double DEFAULT NULL COMMENT 'Quadrant B',
						  `QuadrantC` double DEFAULT NULL COMMENT 'Quadrant C',
						  `SlidingWindowPower` double DEFAULT NULL COMMENT 'Sliding Window Power',
						  `NetTotalEnergy` double DEFAULT NULL COMMENT 'Net Total Energy (Revenue)',
						  `TotalNetApparentEnergy` double DEFAULT NULL COMMENT 'Total Net Apparent Energy (Revenue)',
						  `TotalImportEnergy` double DEFAULT NULL COMMENT 'Total Import Energy (Revenue)',
						  `TotalExportEnergy` double DEFAULT NULL COMMENT 'Total Export Energy (Revenue)',
						  `TotalImportApparentEnergy` double DEFAULT NULL COMMENT 'Total Import Apparent Energy (Revenue)',
						  `TotalExportApparentEnergy` double DEFAULT NULL COMMENT 'Total Export Apparent Energy (Revenue)',
						  `Q1TotalReactiveEnergy` double DEFAULT NULL COMMENT 'Q1 Total Reactive Energy (Revenue)',
						  `Q2TotalReactiveEnergy` double DEFAULT NULL COMMENT 'Q2 Total Reactive Energy (Revenue)',
						  `Q3TotalReactiveEnergy` double DEFAULT NULL COMMENT 'Q3 Total Reactive Energy (Revenue)',
						  `Q4TotalReactiveEnergy` double DEFAULT NULL COMMENT 'Q4 Total Reactive Energy (Revenue)',
						  `Q1Q2TotalInductiveReactiveEnergy` double DEFAULT NULL COMMENT 'Q1+Q2 Total Inductive Reactive Energy (Revenue)',
						  `Q3Q4TotalCapacitiveReactiveEnergy` double DEFAULT NULL COMMENT 'Q3+Q4 Total Capacitive Reactive Energy (Revenue)',
						  `NetEnergyA` double DEFAULT NULL COMMENT 'Net Energy (Revenue) A',
						  `NetEnergyB` double DEFAULT NULL COMMENT 'Net Energy (Revenue) B',
						  `NetEnergyC` double DEFAULT NULL COMMENT 'Net Energy (Revenue) C',
						  `NetApparentEnergyA` double DEFAULT NULL COMMENT 'Net Apparent Energy (Revenue) A',
						  `NetApparentEnergyB` double DEFAULT NULL COMMENT 'Net Apparent Energy (Revenue) B',
						  `NetApparentEnergyC` double DEFAULT NULL COMMENT 'Net Apparent Energy (Revenue) C',
						  `ImportEnergyA` double DEFAULT NULL COMMENT 'Import Energy (Revenue) A',
						  `ImportEnergyB` double DEFAULT NULL COMMENT 'Import Energy (Revenue) B',
						  `ImportEnergyC` double DEFAULT NULL COMMENT 'Import Energy (Revenue) C',
						  `ExportEnergyA` double DEFAULT NULL COMMENT 'Export Energy (Revenue) A',
						  `ExportEnergyB` double DEFAULT NULL COMMENT 'Export Energy (Revenue) B',
						  `ExportEnergyC` double DEFAULT NULL COMMENT 'Export Energy (Revenue) C',
						  `ImportApparentEnergyA` double DEFAULT NULL COMMENT 'Import Apparent Energy (Revenue) A',
						  `ImportApparentEnergyB` double DEFAULT NULL COMMENT 'Import Apparent Energy (Revenue) B',
						  `ImportApparentEnergyC` double DEFAULT NULL COMMENT 'Import Apparent Energy (Revenue) C',
						  `ExportApparentEnergyA` double DEFAULT NULL COMMENT 'Export Apparent Energy (Revenue) A',
						  `ExportApparentEnergyB` double DEFAULT NULL COMMENT 'Export Apparent Energy (Revenue) B',
						  `ExportApparentEnergyC` double DEFAULT NULL COMMENT 'Export Apparent Energy (Revenue) C',
						  `Q1ReactiveEnergyA` double DEFAULT NULL COMMENT 'Q1 Reactive Energy (Revenue) A',
						  `Q1ReactiveEnergyB` double DEFAULT NULL COMMENT 'Q1 Reactive Energy (Revenue) B',
						  `Q1ReactiveEnergyC` double DEFAULT NULL COMMENT 'Q1 Reactive Energy (Revenue) C',
						  `Q2ReactiveEnergyA` double DEFAULT NULL COMMENT 'Q2 Reactive Energy (Revenue) A',
						  `Q2ReactiveEnergyB` double DEFAULT NULL COMMENT 'Q2 Reactive Energy (Revenue) B',
						  `Q2ReactiveEnergyC` double DEFAULT NULL COMMENT 'Q2 Reactive Energy (Revenue) C',
						  `Q3ReactiveEnergyA` double DEFAULT NULL COMMENT 'Q3 Reactive Energy (Revenue) A',
						  `Q3ReactiveEnergyB` double DEFAULT NULL COMMENT 'Q3 Reactive Energy (Revenue) B',
						  `Q3ReactiveEnergyC` double DEFAULT NULL COMMENT 'Q3 Reactive Energy (Revenue) C',
						  `Q4ReactiveEnergyA` double DEFAULT NULL COMMENT 'Q4 Reactive Energy (Revenue) A',
						  `Q4ReactiveEnergyB` double DEFAULT NULL COMMENT 'Q4 Reactive Energy (Revenue) B',
						  `Q4ReactiveEnergyC` double DEFAULT NULL COMMENT 'Q4 Reactive Energy (Revenue) C',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            
	            <when test="id_device_group == 17">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `AuroraType` double DEFAULT NULL COMMENT 'AuroraType',
						  `GridType` double DEFAULT NULL COMMENT 'GridType',
						  `TransformerType` double DEFAULT NULL COMMENT 'TransformerType',
						  `StatesByte0` double DEFAULT NULL COMMENT 'StatesByte0',
						  `StatesByte1` double DEFAULT NULL COMMENT 'StatesByte1',
						  `StatesByte2` double DEFAULT NULL COMMENT 'StatesByte2',
						  `StatesByte3` double DEFAULT NULL COMMENT 'StatesByte3',
						  `StatesByte4` double DEFAULT NULL COMMENT 'StatesByte4',
						  `TotalEnergy` double DEFAULT NULL COMMENT 'Total Energy',
						  `GridVoltage` double DEFAULT NULL COMMENT 'Grid Voltage',
						  `GridCurrent` double DEFAULT NULL COMMENT 'Grid Current',
						  `GridPower` double DEFAULT NULL COMMENT 'Grid Power',
						  `Frequency` double DEFAULT NULL COMMENT 'Frequency',
						  `Input1Power` double DEFAULT NULL COMMENT 'Input 1 Power',
						  `Input1Voltage` double DEFAULT NULL COMMENT 'Input 1 Voltage',
						  `Input1Current` double DEFAULT NULL COMMENT 'Input 1 Current',
						  `Input2Power` double DEFAULT NULL COMMENT 'Input 2 Power',
						  `Input2Voltage` double DEFAULT NULL COMMENT 'Input 2 Voltage',
						  `Input2Current` double DEFAULT NULL COMMENT 'Input 2 Current',
						  `InverterTemperature` double DEFAULT NULL COMMENT 'Inverter Temperature',
						  `BooseterTemperature` double DEFAULT NULL COMMENT 'Booseter Temperature',
						  `IslolationResistance` double DEFAULT NULL COMMENT 'Islolation Resistance',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 18">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `RelativeHumidityActual` double DEFAULT NULL COMMENT 'Relative Humidity (Actual)',
						  `RelativeHumidityMin` double DEFAULT NULL COMMENT 'Relative Humidity (Min)',
						  `RelativeHumidityMax` double DEFAULT NULL COMMENT 'Relative Humidity (Max)',
						  `RelativeHumidityAvg` double DEFAULT NULL COMMENT 'Relative Humidity (Avg)',
						  `RelativeAirPressureActual` double DEFAULT NULL COMMENT 'Relative Air Pressure (Actual)',
						  `RelativeAirPressureMin` double DEFAULT NULL COMMENT 'Relative Air Pressure (Min)',
						  `RelativeAirPressureMax` double DEFAULT NULL COMMENT 'Relative Air Pressure (Max)',
						  `RelativeAirPressureAvg` double DEFAULT NULL COMMENT 'Relative Air Pressure (Avg)',
						  `WindDirectionActual` double DEFAULT NULL COMMENT 'Wind Direction (Actual)',
						  `WindDirectionMin` double DEFAULT NULL COMMENT 'Wind Direction (Min)',
						  `WindDirectionMax` double DEFAULT NULL COMMENT 'Wind Direction (Max)',
						  `WindDirectionVct` double DEFAULT NULL COMMENT 'Wind Direction (Vct)',
						  `WindDirectionFast` double DEFAULT NULL COMMENT 'Wind Direction Fast',
						  `WindDirectionCompassCorrected` double DEFAULT NULL COMMENT 'Wind Direction Compass Corrected',
						  `Compass` double DEFAULT NULL COMMENT 'Compass',
						  `PrecipitationType` double DEFAULT NULL COMMENT 'Precipitation Type',
						  `WindMeasurementQuality` double DEFAULT NULL COMMENT 'Wind Measurement Quality',
						  `IrradianceActual` double DEFAULT NULL COMMENT 'Irradiance (Actual)',
						  `IrradianceMin` double DEFAULT NULL COMMENT 'Irradiance (Min)',
						  `IrradianceMax` double DEFAULT NULL COMMENT 'Irradiance (Max)',
						  `IrradianceAvg` double DEFAULT NULL COMMENT 'Irradiance (Avg)',
						  `AirTemperatureActual` double DEFAULT NULL COMMENT 'Air Temperature Actual',
						  `AirTemperatureMin` double DEFAULT NULL COMMENT 'Air Temperature (Min)',
						  `AirTemperatureMax` double DEFAULT NULL COMMENT 'Air Temperature (Max)',
						  `AirTemperatureAvg` double DEFAULT NULL COMMENT 'Air Temperature (Avg)',
						  `DewPointActual` double DEFAULT NULL COMMENT 'Dew Point (Actual)',
						  `DewPointMin` double DEFAULT NULL COMMENT 'Dew Point (Min)',
						  `DewPointMax` double DEFAULT NULL COMMENT 'Dew Point (Max)',
						  `DewPointAvg` double DEFAULT NULL COMMENT 'Dew Point (Avg)',
						  `WindChillTemperature` double DEFAULT NULL COMMENT 'Wind Chill-Temperature',
						  `HeatingTemperatureWind` double DEFAULT NULL COMMENT 'Heating Temperature Wind',
						  `HeatingTemperatureR2S` double DEFAULT NULL COMMENT 'Heating Temperature R2S',
						  `WindSpeedActual` double DEFAULT NULL COMMENT 'Wind Speed (Actual)',
						  `WindSpeedMin` double DEFAULT NULL COMMENT 'Wind Speed (Min)',
						  `WindSpeedMax` double DEFAULT NULL COMMENT 'Wind Speed (Max)',
						  `WindSpeedAvg` double DEFAULT NULL COMMENT 'Wind Speed (Avg)',
						  `WindSpeedVct` double DEFAULT NULL COMMENT 'Wind Speed (Vct)',
						  `WindSpeedFast` double DEFAULT NULL COMMENT 'Wind Speed Fast',
						  `PrecipitationQuantityAbsolute` double DEFAULT NULL COMMENT 'Precipitation Quantity Absolute',
						  `PrecipitationQuantityDifferential` double DEFAULT NULL COMMENT 'Precipitation Quantity Differential',
						  `PrecipitationIntensity` double DEFAULT NULL COMMENT 'Precipitation Intensity',
						  `AbsoluteHumidityActual` double DEFAULT NULL COMMENT 'Absolute Humidity (Actual)',
						  `AbsoluteHumidityMin` double DEFAULT NULL COMMENT 'Absolute Humidity (Min)',
						  `AbsoluteHumidityMax` double DEFAULT NULL COMMENT 'Absolute Humidity (Max)',
						  `AbsoluteHumidityAvg` double DEFAULT NULL COMMENT 'Absolute Humidity (Avg)',
						  `MixingRatioActual` double DEFAULT NULL COMMENT 'Mixing Ratio (Actual)',
						  `MixingRatioMin` double DEFAULT NULL COMMENT 'Mixing Ratio (Min)',
						  `MixingRatioMax` double DEFAULT NULL COMMENT 'Mixing Ratio (Max)',
						  `MixingRatioAvg` double DEFAULT NULL COMMENT 'Mixing Ratio (Avg)',
						  `AbsoluteAirPressureActual` double DEFAULT NULL COMMENT 'Absolute Air Pressure (Actual)',
						  `AbsoluteAirPressureMin` double DEFAULT NULL COMMENT 'Absolute Air Pressure (Min)',
						  `AbsoluteAirPressureMax` double DEFAULT NULL COMMENT 'Absolute Air Pressure (Max)',
						  `AbsoluteAirPressureAvg` double DEFAULT NULL COMMENT 'Absolute Air Pressure (Avg)',
						  `WindSpeedStandardDeviation` double DEFAULT NULL COMMENT 'Wind Speed Standard Deviation',
						  `WindDirectionStandardDeviation` double DEFAULT NULL COMMENT 'Wind Direction Standard Deviation',
						  `WetBulbTemperature` double DEFAULT NULL COMMENT 'Wet Bulb Temperature',
						  `SpecificEnthalpy` double DEFAULT NULL COMMENT 'Specific Enthalpy',
						  `AirDensityActual` double DEFAULT NULL COMMENT 'Air Density (Actual)',
						  `LeafWetnessActual` double DEFAULT NULL COMMENT 'Leaf Wetness (Actual)',
						  `LeafWetnessMin` double DEFAULT NULL COMMENT 'Leaf Wetness (Min)',
						  `LeafWetnessMax` double DEFAULT NULL COMMENT 'Leaf Wetness (Max)',
						  `LeafWetnessAvg` double DEFAULT NULL COMMENT 'Leaf Wetness (Avg)',
						  `LeafWetnessState` double DEFAULT NULL COMMENT 'Leaf Wetness State',
						  `ExternalTemperature` double DEFAULT NULL COMMENT 'External Temperature',
						  `WindValueQualityFast` double DEFAULT NULL COMMENT 'Wind Value Quality (Fast)',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 19">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `id_device` int NOT NULL,
						  `time` datetime NOT NULL,
						  `serialnumber` varchar(60) DEFAULT NULL,
						  `loopname` varchar(200) DEFAULT NULL,
						  `modbusip` varchar(60) DEFAULT NULL,
						  `modbusport` varchar(20) DEFAULT NULL,
						  `modbusdevice` varchar(20) DEFAULT NULL,
						  `modbusdevicename` varchar(200) DEFAULT NULL,
						  `modbusdevicetype` varchar(200) DEFAULT NULL,
						  `modbusdevicetypenumber` varchar(20) DEFAULT NULL,
						  `modbusdeviceclass` varchar(20) DEFAULT NULL,
						  `MemTotal` double DEFAULT NULL,
						  `MemFree` double DEFAULT NULL,
						  `ipaddr` varchar(200) DEFAULT NULL,
						  `dns1` varchar(200) DEFAULT NULL,
						  `dns2` varchar(200) DEFAULT NULL,
						  `gateway` varchar(200) DEFAULT NULL,
						  `netmask` varchar(200) DEFAULT NULL,
						  `network` varchar(200) DEFAULT NULL,
						  PRIMARY KEY (`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 20">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `InverterIDASCIICHAR0001` varchar(100) DEFAULT NULL COMMENT 'AuroraType',
						  `InverterIDASCIICHAR0203` varchar(100) DEFAULT NULL COMMENT '	Inverter ID #: ASCII CHAR 02 03',
						  `InverterIDASCIICHAR0405` varchar(100) DEFAULT NULL COMMENT 'Inverter ID #: ASCII CHAR 04 05',
						  `InverterIDASCIICHAR0607` varchar(100) DEFAULT NULL COMMENT 'Inverter ID #: ASCII CHAR 06 07',
						  `InverterIDASCIICHAR0809` varchar(100) DEFAULT NULL COMMENT 'Inverter ID #: ASCII CHAR 08 09',
						  `InverterIDASCIICHAR1011` varchar(100) DEFAULT NULL COMMENT 'Inverter ID #: ASCII CHAR 10 11',
						  `InverterIDASCIICHAR1213` varchar(100) DEFAULT NULL COMMENT 'Inverter ID #: ASCII CHAR 12 13',
						  `InverterIDASCIICHAR1415` varchar(100) DEFAULT NULL COMMENT 'Inverter ID #: ASCII CHAR 14 15',
						  `FirmwareVersionASCIICHAR0001` varchar(100) DEFAULT NULL COMMENT 'Firmware Version: ASCII CHAR 00 01',
						  `FirmwareVersionASCIICHAR0203` varchar(100) DEFAULT NULL COMMENT 'Firmware Version: ASCII CHAR 02 03',
						  `FirmwareVersionASCIICHAR0405` varchar(100) DEFAULT NULL COMMENT 'Firmware Version: ASCII CHAR 04 05',
						  `FirmwareVersionASCIICHAR0607` varchar(100) DEFAULT NULL COMMENT 'Firmware Version: ASCII CHAR 06 07',
						  `MapVersion` varchar(100) DEFAULT NULL COMMENT 'Map version',
						  `InverterConfiguration` varchar(100) DEFAULT NULL COMMENT 'Inverter configuration',
						  `InverterSerialASCIICHAR0001` varchar(100) DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 00 01',
						  `InverterSerialASCIICHAR0203` varchar(100) DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 02 03',
						  `InverterSerialASCIICHAR0405` varchar(100) DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 04 05',
						  `InverterSerialASCIICHAR0607` varchar(100) DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 06 07',
						  `InverterSerialASCIICHAR0809` varchar(100) DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 08 09',
						  `InverterSerialASCIICHAR1011` varchar(100) DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 10 11',
						  `InverterSerialASCIICHAR1213` varchar(100) DEFAULT NULL COMMENT ' Inverter serial: ASCII CHAR 12 13',
						  `InverterSerialASCIICHAR1415` varchar(100) DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 14 15',
						  `InverterSerialASCIICHAR1617` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 16 17',
						  `InverterSerialASCIICHAR1819` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL COMMENT 'Inverter serial: ASCII CHAR 18 19',
						  `VoltageAN` double DEFAULT NULL COMMENT 'Voltage A-N',
						  `VoltageBN` double DEFAULT NULL COMMENT 'Voltage B-N',
						  `VoltageCN` double DEFAULT NULL COMMENT 'Voltage C-N',
						  `CurrentA` double DEFAULT NULL COMMENT 'Current A',
						  `CurrentB` double DEFAULT NULL COMMENT 'Current B',
						  `CurrentC` double DEFAULT NULL COMMENT 'Current C',
						  `DCInputVoltage` double DEFAULT NULL COMMENT 'DC input voltage',
						  `DCInputCurrent` double DEFAULT NULL COMMENT 'DC input current',
						  `LineFrequency` double DEFAULT NULL COMMENT 'Line Frequency',
						  `OutputGeneration` double DEFAULT NULL COMMENT 'Output Generation',
						  `TotalEnergyGeneration` double DEFAULT NULL COMMENT 'Total Energy Generation',
						  `PVInputVoltage` double DEFAULT NULL COMMENT 'PV Input Voltage',
						  `InputGenerationCalculated` double DEFAULT NULL COMMENT 'Input Generation (calculated)',
						  `InverterOperatingStatus` double DEFAULT NULL COMMENT 'Inverter operating status (state)',
						  `MainFault` double DEFAULT NULL COMMENT 'Main fault',
						  `DriveFault` double DEFAULT NULL COMMENT 'Drive fault',
						  `VoltageFault` double DEFAULT NULL COMMENT 'Voltage fault',
						  `GridFault` double DEFAULT NULL COMMENT 'Grid fault',
						  `TemperatureFault` double DEFAULT NULL COMMENT 'Temperature fault',
						  `SystemFault` double DEFAULT NULL COMMENT 'System fault',
						  `SystemWarnings` double DEFAULT NULL COMMENT 'System warnings',
						  `PVMStatusCodes` double DEFAULT NULL COMMENT 'PVM status codes',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>     
	            <when test="id_device_group == 21">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `DCVoltage` double DEFAULT NULL COMMENT 'DC Voltage',
						  `ACPowerOutput` double DEFAULT NULL COMMENT 'AC Power Output',
						  `ACGridFrequency` double DEFAULT NULL COMMENT 'AC Grid Frequency',
						  `ACPowerStageCurrent` double DEFAULT NULL COMMENT 'AC Power Stage Current',
						  `L1toL2ACVoltage` double DEFAULT NULL COMMENT 'L1-to-L2 AC Voltage',
						  `L2toL3ACVoltage` double DEFAULT NULL COMMENT 'L2-to-L3 AC Voltage',
						  `L1toL3ACVoltage` double DEFAULT NULL COMMENT 'L1-to-L3 AC Voltage',
						  `PhaseSequence` double DEFAULT NULL COMMENT 'Phase Sequence',
						  `CumulativeACEnergy` double DEFAULT NULL COMMENT 'Cumulative AC Energy',
						  `CumulativeOngridHours` double DEFAULT NULL COMMENT 'Cumulative On-grid Hours',
						  `FanOntimeHours` double DEFAULT NULL COMMENT 'Fan On-time Hours',
						  `ACContactorCycles` double DEFAULT NULL COMMENT 'AC Contactor Cycles',
						  `SlaveID` double DEFAULT NULL COMMENT 'Slave ID',
						  `CriticalAlarms` double DEFAULT NULL COMMENT 'Critical Alarms',
						  `InformativeAlarms` double DEFAULT NULL COMMENT 'Informative Alarms',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 22">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Mode` double DEFAULT NULL COMMENT 'Mode',
						  `SubMode` double DEFAULT NULL COMMENT 'Sub Mode',
						  `MotorStatus` double DEFAULT NULL COMMENT 'Motor Status',
						  `ReadAngle` double DEFAULT NULL COMMENT 'Read Angle',
						  `SetAngle` double DEFAULT NULL COMMENT 'Set Angle',
						  `OptimalAngle` double DEFAULT NULL COMMENT 'Optimal Angle',
						  `WindSpeed` double DEFAULT NULL COMMENT 'Wind Speed',
						  `TTiTime` double DEFAULT NULL COMMENT 'Time',
						  `MotorFault` double DEFAULT NULL COMMENT 'Motor Fault',
						  `RemoteInterfaceFault` double DEFAULT NULL COMMENT 'Remote Interface Fault',
						  `InclinometerFault` double DEFAULT NULL COMMENT 'Inclinometer Fault',
						  `ModbusAddress` double DEFAULT NULL COMMENT 'Modbus Address',
						  `FirmwareVersion` double DEFAULT NULL COMMENT 'Firmware Version',
						  `Units` double DEFAULT NULL COMMENT 'Units',
						  `InclinometerOffset` double DEFAULT NULL COMMENT 'Inclinometer Offset',
						  `MotorStopDelay` double DEFAULT NULL COMMENT 'Motor Stop Delay',
						  `CoastAngle` double DEFAULT NULL COMMENT 'Coast Angle',
						  `MaxRotationWest` double DEFAULT NULL COMMENT 'Max Rotation West',
						  `MaxRotationEast` double DEFAULT NULL COMMENT 'Max Rotation East',
						  `SoftAngleLimitsEnabled` double DEFAULT NULL COMMENT 'Soft Angle Limits Enabled',
						  `MotorMonitorSampleTime` double DEFAULT NULL COMMENT 'Motor Monitor Sample Time',
						  `MotorMonitorMinAngle` double DEFAULT NULL COMMENT 'Motor Monitor Min Angle',
						  `EnableMotorMonitor` double DEFAULT NULL COMMENT 'Enable Motor Monitor',
						  `DeadBand` double DEFAULT NULL COMMENT 'Dead Band',
						  `NightTimeStowAltitude` double DEFAULT NULL COMMENT 'Night Time Stow Altitude',
						  `NightTimeStowAngle` double DEFAULT NULL COMMENT 'Night Time Stow Angle',
						  `PoleSpacing` double DEFAULT NULL COMMENT 'Pole Spacing',
						  `ModuleWidth` double DEFAULT NULL COMMENT 'Module Width',
						  `MotorPolarity` double DEFAULT NULL COMMENT 'Motor Polarity',
						  `InclinometerPolarity` double DEFAULT NULL COMMENT 'Inclinometer Polarity',
						  `Latitude` double DEFAULT NULL COMMENT 'Latitude',
						  `Longitude` double DEFAULT NULL COMMENT 'Longitude',
						  `LoggingInterval` double DEFAULT NULL COMMENT 'Logging Interval',
						  `HelicalVarationAngle` double DEFAULT NULL COMMENT 'Helical Varation Angle',
						  `DriveArmSlope` double DEFAULT NULL COMMENT 'Drive Arm Slope',
						  `WindConstant` double DEFAULT NULL COMMENT 'Wind Constant',
						  `WindStowSpeed` double DEFAULT NULL COMMENT 'Wind Stow Speed',
						  `WindStowTime` double DEFAULT NULL COMMENT 'Wind Stow Time',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 23">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `VAB` double DEFAULT NULL COMMENT 'VAB',
						  `VBC` double DEFAULT NULL COMMENT 'VBC',
						  `VCA` double DEFAULT NULL COMMENT 'VCA',
						  `CurrentA` double DEFAULT NULL COMMENT 'Current A',
						  `CurrentB` double DEFAULT NULL COMMENT 'Current B',
						  `CurrentC` double DEFAULT NULL COMMENT 'Current C',
						  `ReadPower` double DEFAULT NULL COMMENT 'Read Power',
						  `PVVoltage` double DEFAULT NULL COMMENT 'PV Voltage',
						  `PVCurrent` double DEFAULT NULL COMMENT 'PV Current',
						  `PVPower` double DEFAULT NULL COMMENT 'PV Power',
						  `GridFrequency` double DEFAULT NULL COMMENT 'Grid Frequency',
						  `SystemState` double DEFAULT NULL COMMENT 'System State',
						  `GoalState` double DEFAULT NULL COMMENT 'Goal State',
						  `FaultCode` double DEFAULT NULL COMMENT 'Fault Code',
						  `AccumulatedEnergy` double DEFAULT NULL COMMENT 'Accumulated Energy',
						  `RMatrixTemp` double DEFAULT NULL COMMENT 'R Matrix Temp',
						  `LMatrixTemp` double DEFAULT NULL COMMENT 'L Matrix Temp',
						  `IntakeAirTemperature` double DEFAULT NULL COMMENT 'Intake Air Temperature',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 24">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int DEFAULT NULL,
						  `low_alarm` int DEFAULT NULL,
						  `high_alarm` int DEFAULT NULL,
						  `ModuleTemperature` double DEFAULT NULL COMMENT 'Module Temperature',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT NULL,
						  `nvm_panel_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 25">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int DEFAULT NULL,
						  `low_alarm` int DEFAULT NULL,
						  `high_alarm` int DEFAULT NULL,
						  `IrradianceTcs` double DEFAULT NULL COMMENT 'Irradiance (temperature compensated signal)',
						  `IrradianceUs` double DEFAULT NULL COMMENT 'Irradiance (uncompensated signal)',
						  `SensorBodyTemperature` double DEFAULT NULL COMMENT 'Sensor body temperature',
						  `SensorElectricalResistance` double DEFAULT NULL COMMENT 'Sensor Electrical Resistance',
						  `ScalingFactorIrradiance` double DEFAULT NULL COMMENT 'Scaling Factor Irradiance',
						  `ScalingFactorTemperature` double DEFAULT NULL COMMENT 'Scaling Factor Temperature',
						  `SensorSerialNumber` double DEFAULT NULL COMMENT 'Sensor Serial Number',
						  `SensorSensitivity` double DEFAULT NULL COMMENT 'Sensor Sensitivity',
						  `SensorCalibrationDate` double DEFAULT NULL COMMENT 'Sensor Calibration Date',
						  `InternalHumidity` double DEFAULT NULL COMMENT 'Internal Humidity',
						  `TiltAngle` double DEFAULT NULL COMMENT 'Tilt Angle',
						  `TiltAngleaverage` double DEFAULT NULL COMMENT 'Tilt Angleaverage',
						  `FanSpeedRPM` double DEFAULT NULL COMMENT 'Fan Speed RPM',
						  `HeaterCurrent` double DEFAULT NULL COMMENT 'Heater Current',
						  `FanCurrent` double DEFAULT NULL COMMENT 'Fan Current',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 27">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					   	  `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `E_DAY` double DEFAULT NULL,
						  `E_TOTAL` double DEFAULT NULL,
						  `E_YEAR` double DEFAULT NULL,
						  `OT_AC_TOTAL` double DEFAULT NULL,
						  `T_WR` double DEFAULT NULL,
						  `U_DC1` double DEFAULT NULL,
						  `I_DC1` double DEFAULT NULL,
						  `U_DC2` double DEFAULT NULL,
						  `I_DC2` double DEFAULT NULL,
						  `U_DC3` double DEFAULT NULL,
						  `I_DC3` double DEFAULT NULL,
						  `U_DC4` double DEFAULT NULL,
						  `I_DC4` double DEFAULT NULL,
						  `U_DC5` double DEFAULT NULL,
						  `I_DC5` double DEFAULT NULL,
						  `U_DC6` double DEFAULT NULL,
						  `I_DC6` double DEFAULT NULL,
						  `U_DC7` double DEFAULT NULL,
						  `I_DC7` double DEFAULT NULL,
						  `U_DC8` double DEFAULT NULL,
						  `I_DC8` double DEFAULT NULL,
						  `U_DC9` double DEFAULT NULL,
						  `I_DC9` double DEFAULT NULL,
						  `U_STR1` double DEFAULT NULL,
						  `I_STR1` double DEFAULT NULL,
						  `U_STR2` double DEFAULT NULL,
						  `I_STR2` double DEFAULT NULL,
						  `U_STR3` double DEFAULT NULL,
						  `I_STR3` double DEFAULT NULL,
						  `U_STR4` double DEFAULT NULL,
						  `I_STR4` double DEFAULT NULL,
						  `U_STR5` double DEFAULT NULL,
						  `I_STR5` double DEFAULT NULL,
						  `U_STR6` double DEFAULT NULL,
						  `I_STR6` double DEFAULT NULL,
						  `U_STR7` double DEFAULT NULL,
						  `I_STR7` double DEFAULT NULL,
						  `U_STR8` double DEFAULT NULL,
						  `I_STR8` double DEFAULT NULL,
						  `U_STR9` double DEFAULT NULL,
						  `I_STR9` double DEFAULT NULL,
						  `U_STR10` double DEFAULT NULL,
						  `I_STR10` double DEFAULT NULL,
						  `U_STR11` double DEFAULT NULL,
						  `I_STR11` double DEFAULT NULL,
						  `U_STR12` double DEFAULT NULL,
						  `I_STR12` double DEFAULT NULL,
						  `U_STR13` double DEFAULT NULL,
						  `I_STR13` double DEFAULT NULL,
						  `U_STR14` double DEFAULT NULL,
						  `I_STR14` double DEFAULT NULL,
						  `U_STR15` double DEFAULT NULL,
						  `I_STR15` double DEFAULT NULL,
						  `U_STR16` double DEFAULT NULL,
						  `I_STR16` double DEFAULT NULL,
						  `U_STR17` double DEFAULT NULL,
						  `I_STR17` double DEFAULT NULL,
						  `U_STR18` double DEFAULT NULL,
						  `I_STR18` double DEFAULT NULL,
						  `P_DC` double DEFAULT NULL,
						  `U_AC1` double DEFAULT NULL,
						  `U_AC2` double DEFAULT NULL,
						  `U_AC3` double DEFAULT NULL,
						  `I_AC1` double DEFAULT NULL,
						  `I_AC2` double DEFAULT NULL,
						  `I_AC3` double DEFAULT NULL,
						  `S_AC` double DEFAULT NULL,
						  `P_AC` double DEFAULT NULL,
						  `Q_AC` double DEFAULT NULL,
						  `COS_PHI` double DEFAULT NULL,
						  `F_AC` double DEFAULT NULL,
						  `FT_AC_DAY` double DEFAULT NULL,
						  `R_ISO` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,   
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 28">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `M_AC_U1` double DEFAULT NULL,
						  `M_AC_U2` double DEFAULT NULL,
						  `M_AC_U3` double DEFAULT NULL,
						  `M_AC_U_L1L2` double DEFAULT NULL,
						  `M_AC_U_L2L3` double DEFAULT NULL,
						  `M_AC_U_L3L1` double DEFAULT NULL,
						  `M_AC_I1` double DEFAULT NULL,
						  `M_AC_I2` double DEFAULT NULL,
						  `M_AC_I3` double DEFAULT NULL,
						  `M_AC_P1` double DEFAULT NULL,
						  `M_AC_P2` double DEFAULT NULL,
						  `M_AC_P3` double DEFAULT NULL,
						  `M_AC_P` double DEFAULT NULL,
						  `M_AC_E_M1` double DEFAULT NULL,
						  `M_AC_Q1` double DEFAULT NULL,
						  `M_AC_Q2` double DEFAULT NULL,
						  `M_AC_Q3` double DEFAULT NULL,
						  `M_AC_Q` double DEFAULT NULL,
						  `M_AC_S1` double DEFAULT NULL,
						  `M_AC_S2` double DEFAULT NULL,
						  `M_AC_S3` double DEFAULT NULL,
						  `M_AC_S` double DEFAULT NULL,
						  `M_AC_PF` double DEFAULT NULL,
						  `M_AC_F` double DEFAULT NULL,
						  `M_AC_E_EXP` double DEFAULT NULL,
						  `M_AC_E_IMP` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 29">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `E_DAY` double DEFAULT NULL,
						  `E_TOTAL` double DEFAULT NULL,
						  `E_YEAR` double DEFAULT NULL,
						  `OT_AC_TOTAL` double DEFAULT NULL,
						  `T_WR` double DEFAULT NULL,
						  `U_DC1` double DEFAULT NULL,
						  `I_DC1` double DEFAULT NULL,
						  `U_DC2` double DEFAULT NULL,
						  `I_DC2` double DEFAULT NULL,
						  `U_DC3` double DEFAULT NULL,
						  `I_DC3` double DEFAULT NULL,
						  `U_DC4` double DEFAULT NULL,
						  `I_DC4` double DEFAULT NULL,
						  `U_DC5` double DEFAULT NULL,
						  `I_DC5` double DEFAULT NULL,
						  `U_DC6` double DEFAULT NULL,
						  `I_DC6` double DEFAULT NULL,
						  `U_DC7` double DEFAULT NULL,
						  `I_DC7` double DEFAULT NULL,
						  `U_DC8` double DEFAULT NULL,
						  `I_DC8` double DEFAULT NULL,
						  `U_DC9` double DEFAULT NULL,
						  `I_DC9` double DEFAULT NULL,
						  `U_DC10` double DEFAULT NULL,
						  `I_DC10` double DEFAULT NULL,
						  `U_DC11` double DEFAULT NULL,
						  `I_DC11` double DEFAULT NULL,
						  `U_DC12` double DEFAULT NULL,
						  `I_DC12` double DEFAULT NULL,
						  `U_DC13` double DEFAULT NULL,
						  `I_DC13` double DEFAULT NULL,
						  `U_DC14` double DEFAULT NULL,
						  `I_DC14` double DEFAULT NULL,
						  `U_DC15` double DEFAULT NULL,
						  `I_DC15` double DEFAULT NULL,
						  `U_DC16` double DEFAULT NULL,
						  `I_DC16` double DEFAULT NULL,
						  `U_DC17` double DEFAULT NULL,
						  `I_DC17` double DEFAULT NULL,
						  `U_DC18` double DEFAULT NULL,
						  `I_DC18` double DEFAULT NULL,
						  `U_DC19` double DEFAULT NULL,
						  `I_DC19` double DEFAULT NULL,
						  `U_DC20` double DEFAULT NULL,
						  `I_DC20` double DEFAULT NULL,
						  `U_STR1` double DEFAULT NULL,
						  `I_STR1` double DEFAULT NULL,
						  `U_STR2` double DEFAULT NULL,
						  `I_STR2` double DEFAULT NULL,
						  `U_STR3` double DEFAULT NULL,
						  `I_STR3` double DEFAULT NULL,
						  `U_STR4` double DEFAULT NULL,
						  `I_STR4` double DEFAULT NULL,
						  `U_STR5` double DEFAULT NULL,
						  `I_STR5` double DEFAULT NULL,
						  `U_STR6` double DEFAULT NULL,
						  `I_STR6` double DEFAULT NULL,
						  `U_STR7` double DEFAULT NULL,
						  `I_STR7` double DEFAULT NULL,
						  `U_STR8` double DEFAULT NULL,
						  `I_STR8` double DEFAULT NULL,
						  `U_STR9` double DEFAULT NULL,
						  `I_STR9` double DEFAULT NULL,
						  `U_STR10` double DEFAULT NULL,
						  `I_STR10` double DEFAULT NULL,
						  `I_STR11` double DEFAULT NULL,
						  `I_STR12` double DEFAULT NULL,
						  `I_STR13` double DEFAULT NULL,
						  `I_STR14` double DEFAULT NULL,
						  `I_STR15` double DEFAULT NULL,
						  `I_STR16` double DEFAULT NULL,
						  `I_STR17` double DEFAULT NULL,
						  `I_STR18` double DEFAULT NULL,
						  `I_STR19` double DEFAULT NULL,
						  `I_STR20` double DEFAULT NULL,
						  `I_STR21` double DEFAULT NULL,
						  `I_STR22` double DEFAULT NULL,
						  `P_DC` double DEFAULT NULL,
						  `U_AC1` double DEFAULT NULL,
						  `U_AC2` double DEFAULT NULL,
						  `U_AC3` double DEFAULT NULL,
						  `I_AC1` double DEFAULT NULL,
						  `I_AC2` double DEFAULT NULL,
						  `I_AC3` double DEFAULT NULL,
						  `S_AC` double DEFAULT NULL,
						  `P_AC` double DEFAULT NULL,
						  `Q_AC` double DEFAULT NULL,
						  `COS_PHI` double DEFAULT NULL,
						  `F_AC` double DEFAULT NULL,
						  `FT_AC_DAY` double DEFAULT NULL,
						  `R_ISO` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 30">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `SRAD_D_H` double DEFAULT NULL,
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT NULL,
						  `nvm_panel_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 31">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Metering_TotWhOut` double DEFAULT NULL,
						  `Operation_GriSwCnt` double DEFAULT NULL,
						  `Metering_TotOpTms` double DEFAULT NULL,
						  `Metering_TotFeedTms` double DEFAULT NULL,
						  `Metering_GridMs_TotWhOut` double DEFAULT NULL,
						  `GridMs_TotW` double DEFAULT NULL,
						  `GridMs_Hz` double DEFAULT NULL,
						  `Isolation_FltA` double DEFAULT NULL,
						  `Isolation_LeakRis` double DEFAULT NULL,
						  `DcMs_VolA` double DEFAULT NULL,
						  `DcMs_VolB` double DEFAULT NULL,
						  `DcMs_AmpA` double DEFAULT NULL,
						  `DcMs_AmpB` double DEFAULT NULL,
						  `DcMs_AmpA1` double DEFAULT NULL,
						  `GridMs_PhV_phsA` double DEFAULT NULL,
						  `GridMs_PhV_phsB` double DEFAULT NULL,
						  `GridMs_PhV_phsC` double DEFAULT NULL,
						  `GridMs_A_phsA` double DEFAULT NULL,
						  `GridMs_A_phsB` double DEFAULT NULL,
						  `GridMs_A_phsC` double DEFAULT NULL,
						  `DcMs_WattA` double DEFAULT NULL,
						  `DcMs_WattB` double DEFAULT NULL,
						  `Operation_Health` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Prio` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Msg` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Dsc` varchar(255) DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 32">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Metering_TotWhOut` double DEFAULT NULL,
						  `Operation_GriSwCnt` double DEFAULT NULL,
						  `Metering_TotOpTms` double DEFAULT NULL,
						  `Metering_TotFeedTms` double DEFAULT NULL,
						  `Metering_GridMs_TotWhOut` double DEFAULT NULL,
						  `GridMs_TotW` double DEFAULT NULL,
						  `GridMs_Hz` double DEFAULT NULL,
						  `Isolation_FltA` double DEFAULT NULL,
						  `Isolation_LeakRis` double DEFAULT NULL,
						  `DcMs_VolA` double DEFAULT NULL,
						  `DcMs_VolB` double DEFAULT NULL,
						  `DcMs_AmpA` double DEFAULT NULL,
						  `DcMs_AmpB` double DEFAULT NULL,
						  `GridMs_PhV_phsA` double DEFAULT NULL,
						  `GridMs_PhV_phsB` double DEFAULT NULL,
						  `GridMs_PhV_phsC` double DEFAULT NULL,
						  `GridMs_A_phsA` double DEFAULT NULL,
						  `GridMs_A_phsB` double DEFAULT NULL,
						  `GridMs_A_phsC` double DEFAULT NULL,
						  `DcMs_WattA` double DEFAULT NULL,
						  `DcMs_WattB` double DEFAULT NULL,
						  `Operation_Health` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Prio` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Msg` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Dsc` varchar(255) DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 33">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Metering_TotWhOut` double DEFAULT NULL,
						  `Operation_GriSwCnt` double DEFAULT NULL,
						  `Metering_TotOpTms` double DEFAULT NULL,
						  `Metering_TotFeedTms` double DEFAULT NULL,
						  `GridMs_TotW` double DEFAULT NULL,
						  `GridMs_Hz` double DEFAULT NULL,
						  `Isolation_FltA` double DEFAULT NULL,
						  `Isolation_LeakRis` double DEFAULT NULL,
						  `DcMs_VolA` double DEFAULT NULL,
						  `DcMs_VolB` double DEFAULT NULL,
						  `DcMs_AmpA` double DEFAULT NULL,
						  `DcMs_AmpB` double DEFAULT NULL,
						  `GridMs_PhV_phsA` double DEFAULT NULL,
						  `GridMs_PhV_phsB` double DEFAULT NULL,
						  `GridMs_PhV_phsC` double DEFAULT NULL,
						  `GridMs_A_phsA` double DEFAULT NULL,
						  `GridMs_A_phsB` double DEFAULT NULL,
						  `GridMs_A_phsC` double DEFAULT NULL,
						  `DcMs_WattA` double DEFAULT NULL,
						  `DcMs_WattB` double DEFAULT NULL,
						  `Operation_Health` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Prio` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Msg` varchar(255) DEFAULT NULL,
						  `Operation_Evt_Dsc` varchar(255) DEFAULT NULL,
						  `InOut_AnInA1` double DEFAULT NULL,
						  `InOut_AnInA2` double DEFAULT NULL,
						  `InOut_AnInA3` double DEFAULT NULL,
						  `InOut_AnInVol4` double DEFAULT NULL,
						  `Env_ExInsol` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 34">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `C_DeviceAddress` double DEFAULT NULL,
						  `C_SunSpec_DID` double DEFAULT NULL,
						  `C_SunSpec_Length` double DEFAULT NULL,
						  `I_AC_Current` double DEFAULT NULL,
						  `I_AC_CurrentA` double DEFAULT NULL,
						  `I_AC_CurrentB` double DEFAULT NULL,
						  `I_AC_CurrentC` double DEFAULT NULL,
						  `I_AC_Current_SF` double DEFAULT NULL,
						  `I_AC_VoltageAB` double DEFAULT NULL,
						  `I_AC_VoltageBC` double DEFAULT NULL,
						  `I_AC_VoltageCA` double DEFAULT NULL,
						  `I_AC_VoltageAN` double DEFAULT NULL,
						  `I_AC_VoltageBN` double DEFAULT NULL,
						  `I_AC_VoltageCN` double DEFAULT NULL,
						  `I_AC_Voltage_SF` double DEFAULT NULL,
						  `I_AC_Power` double DEFAULT NULL,
						  `I_AC_Power_SF` double DEFAULT NULL,
						  `I_AC_Frequency` double DEFAULT NULL,
						  `I_AC_Frequency_SF` double DEFAULT NULL,
						  `I_AC_VA` double DEFAULT NULL,
						  `I_AC_VA_SF` double DEFAULT NULL,
						  `I_AC_VAR` double DEFAULT NULL,
						  `I_AC_VAR_SF` double DEFAULT NULL,
						  `I_AC_PF` double DEFAULT NULL,
						  `I_AC_PF_SF` double DEFAULT NULL,
						  `I_AC_Energy_WH` double DEFAULT NULL,
						  `I_AC_Energy_WH_SF` double DEFAULT NULL,
						  `I_DC_Current` double DEFAULT NULL,
						  `I_DC_Current_SF` double DEFAULT NULL,
						  `I_DC_Voltage` double DEFAULT NULL,
						  `I_DC_Voltage_SF` double DEFAULT NULL,
						  `I_DC_Power` double DEFAULT NULL,
						  `I_DC_Power_SF` double DEFAULT NULL,
						  `I_Temp_Sink` double DEFAULT NULL,
						  `I_Temp_SF` double DEFAULT NULL,
						  `I_Status` double DEFAULT NULL,
						  `I_Status_Vendor` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 35">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Meter1_ACPower` double DEFAULT NULL COMMENT 'Meter1_ACPower',
						  `Total_Energy` double DEFAULT NULL COMMENT 'Total_Energy',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 36">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `AmbientTemp` double DEFAULT NULL COMMENT 'Ambient Temp',
						  `PVPanelTemp` double DEFAULT NULL COMMENT 'PV Panel Temp',
						  `PVPanelTemp1` double DEFAULT NULL COMMENT 'PV Panel Temp (not used)',
						  `WindSpeed` double DEFAULT NULL COMMENT 'Wind Speed (not used)',
						  `POACMP11` double DEFAULT NULL COMMENT 'POA (CMP11)',
						  `IrradiancePOA` double DEFAULT NULL COMMENT 'Irradiance POA',
						  `IMTInternalTemp` double DEFAULT NULL COMMENT 'IMT Internal Temp',
						  `PVPanelTemp2` double DEFAULT NULL COMMENT 'PV Panel Temp 2',
						  `code_ch0` double DEFAULT NULL COMMENT 'code_ch0',
						  `code_ch1` double DEFAULT NULL COMMENT 'code_ch1',
						  `code_ch2` double DEFAULT NULL COMMENT 'code_ch2',
						  `code_ch3` double DEFAULT NULL COMMENT 'code_ch3',
						  `code_ch4` double DEFAULT NULL COMMENT 'code_ch4',
						  `code_ch5` double DEFAULT NULL COMMENT 'code_ch5',
						  `code_ch6` double DEFAULT NULL COMMENT 'code_ch6',
						  `code_ch7` double DEFAULT NULL COMMENT 'code_ch7',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT NULL,
						  `nvm_panel_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 37">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Meter2_ACPower` double DEFAULT NULL COMMENT 'Meter2_ACPower',
						  `Total_Energy` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 38">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Meter3_ACPower` double DEFAULT NULL COMMENT 'Meter3_ACPower',
						  `Total_Energy` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 39">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Meter4_ACPower` double DEFAULT NULL COMMENT 'Meter4_ACPower',
						  `Total_Energy` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 40">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `id_device` int NOT NULL,
						  `time` datetime NOT NULL,
						  `SerialNumber` varchar(200) DEFAULT NULL,
						  `ConnectionName` varchar(200) DEFAULT NULL,
						  `ConnectionStatus` varchar(200) DEFAULT NULL,
						  `ConnectionType` varchar(200) DEFAULT NULL,
						  `ConnectionMethod` varchar(200) DEFAULT NULL,
						  `IPAddress` varchar(200) DEFAULT NULL,
						  `DefaultGateway` varchar(200) DEFAULT NULL,
						  `DNSServers` varchar(200) DEFAULT NULL,
						  `MTU` varchar(200) DEFAULT NULL,
						  `IMEI` varchar(200) DEFAULT NULL,
						  `IMSI` varchar(200) DEFAULT NULL,
						  `ICCID` varchar(200) DEFAULT NULL,
						  `SIMSLOT` varchar(200) DEFAULT NULL,
						  `RSSI4` double DEFAULT NULL,
						  `SINR4` double DEFAULT NULL,
						  `RSRP4` double DEFAULT NULL,
						  `RSRQ4` double DEFAULT NULL,
						  `Channel4` double DEFAULT NULL,
						  `RSSI3` double DEFAULT NULL,
						  `SINR3` double DEFAULT NULL,
						  `RSRP3` double DEFAULT NULL,
						  `RSRQ3` double DEFAULT NULL,
						  `Channel3` double DEFAULT NULL,
						  `CPULoad` double DEFAULT NULL,
						  `ALLDownload` varchar(200) DEFAULT NULL,
						  `ALLUpload` varchar(200) DEFAULT NULL,
						  `ALLTotal` varchar(200) DEFAULT NULL,
						  `CellularDownload` varchar(200) DEFAULT NULL,
						  `CellularUpload` varchar(200) DEFAULT NULL,
						  `CellularTotal` varchar(200) DEFAULT NULL,
						  `DeviceName` varchar(200) DEFAULT NULL,
						  `ProductModel` varchar(200) DEFAULT NULL,
						  `HardwareRevision` varchar(200) DEFAULT NULL,
						  `FirmwareVersion` varchar(200) DEFAULT NULL,
						  `Uptime` varchar(200) DEFAULT NULL,
						  `Mode` varchar(200) DEFAULT NULL,
						  `SystemMode` varchar(200) DEFAULT NULL,
						  `Temperature` double DEFAULT NULL,
						  `SlotA` varchar(200) DEFAULT NULL,
						  `SlotB` varchar(200) DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>    
	            <when test="id_device_group == 41">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int DEFAULT NULL,
						  `low_alarm` int DEFAULT NULL,
						  `high_alarm` int DEFAULT NULL,
						  `Fault1` double DEFAULT NULL,
						  `Fault2` double DEFAULT NULL,
						  `Fault3` double DEFAULT NULL,
						  `Fault4` double DEFAULT NULL,
						  `GridStatus` double DEFAULT NULL,
						  `Status6` double DEFAULT NULL,
						  `Status7` double DEFAULT NULL,
						  `PCSState` double DEFAULT NULL,
						  `DCInputPower` double DEFAULT NULL,
						  `DC_Link_Volts` double DEFAULT NULL,
						  `DCInputVoltage` double DEFAULT NULL,
						  `DCInputCurrent` double DEFAULT NULL,
						  `OutputKVAR` double DEFAULT NULL,
						  `OutputKW` double DEFAULT NULL,
						  `OutputKVA` double DEFAULT NULL,
						  `Line_Volts_A_TEST` double DEFAULT NULL,
						  `Line_Volts_B_TEST` double DEFAULT NULL,
						  `Line_Volts_C_TEST` double DEFAULT NULL,
						  `Line_Amps_A_TEST` double DEFAULT NULL,
						  `Line_Amps_B_TEST` double DEFAULT NULL,
						  `Line_Amps_C_TEST` double DEFAULT NULL,
						  `NeutralCurrent` double DEFAULT NULL,
						  `StopCode` double DEFAULT NULL,
						  `KWHlow` double DEFAULT NULL,
						  `KWH` double DEFAULT NULL,
						  `PowerFactor` double DEFAULT NULL,
						  `LineFreq` double DEFAULT NULL,
						  `OutputPowerLimit` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 42">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int DEFAULT NULL,
						  `low_alarm` int DEFAULT NULL,
						  `high_alarm` int DEFAULT NULL,
						  `Fault` double DEFAULT NULL,
						  `OperatingState` double DEFAULT NULL,
						  `Status` double DEFAULT NULL,
						  `EventNumber` double DEFAULT NULL,
						  `LifekWhTotal` double DEFAULT NULL,
						  `PVCurrent` double DEFAULT NULL,
						  `PVVoltage` double DEFAULT NULL,
						  `PVPower` double DEFAULT NULL,
						  `ACPower` double DEFAULT NULL,
						  `ACVoltageAB` double DEFAULT NULL,
						  `ACVoltageBC` double DEFAULT NULL,
						  `ACVoltageCA` double DEFAULT NULL,
						  `ACCurrent` double DEFAULT NULL,
						  `ACCurrentL1` double DEFAULT NULL,
						  `ACCurrentL2` double DEFAULT NULL,
						  `ACCurrentL3` double DEFAULT NULL,
						  `ACFrequency` double DEFAULT NULL,
						  `ReactivePower` double DEFAULT NULL,
						  `ApparentPower` double DEFAULT NULL,
						  `PowerFactor` double DEFAULT NULL,
						  `ReactivePowerMode` double DEFAULT NULL,
						  `PowerFactorFeedback` double DEFAULT NULL,
						  `OperatingMode` double DEFAULT NULL,
						  `ACPowerLimit` double DEFAULT NULL,
						  `ACVoltage` double DEFAULT NULL,
						  `HeatSinkTemp` double DEFAULT NULL,
						  `InteriorTemperature` double DEFAULT NULL,
						  `ExternalTemperature` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 43">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `RealEnergyConsumption` double DEFAULT NULL COMMENT 'Real Energy Consumption',
						  `TotalInstantaneousRealPower` double DEFAULT NULL COMMENT 'Total Instantaneous Real Power',
						  `TotalInstantaneousReactivePower` double DEFAULT NULL COMMENT 'Total Instantaneous Reactive Power',
						  `TotalInstantaneousApparentPower` double DEFAULT NULL COMMENT 'Total Instantaneous Apparent Power',
						  `TotalPowerFactor` double DEFAULT NULL COMMENT 'Total Power Factor',
						  `VoltageLL3pAve` double DEFAULT NULL COMMENT 'Voltage L-L 3p Ave',
						  `VoltageLN3pAve` double DEFAULT NULL COMMENT 'Voltage L-N 3p Ave',
						  `Current3pAve` double DEFAULT NULL COMMENT 'Current 3p Ave',
						  `RealPowerPhaseA` double DEFAULT NULL COMMENT 'Real Power Phase A',
						  `RealPowerPhaseB` double DEFAULT NULL COMMENT 'Real Power Phase B',
						  `RealPowerPhaseC` double DEFAULT NULL COMMENT 'Real Power Phase C',
						  `PowerFactorPhaseA` double DEFAULT NULL COMMENT 'Power Factor Phase A',
						  `PowerFactorPhaseB` double DEFAULT NULL COMMENT 'Power Factor Phase B',
						  `PowerFactorPhaseC` double DEFAULT NULL COMMENT 'Power Factor Phase C',
						  `VoltagePhaseAB` double DEFAULT NULL COMMENT 'Voltage Phase A-B',
						  `VoltagePhaseBC` double DEFAULT NULL COMMENT 'Voltage Phase B-C',
						  `VoltagePhaseAC` double DEFAULT NULL COMMENT 'Voltage Phase A-C',
						  `VoltagePhaseAN` double DEFAULT NULL COMMENT 'Voltage Phase A-N',
						  `VoltagePhaseBN` double DEFAULT NULL COMMENT 'Voltage Phase B-N',
						  `VoltagePhaseCN` double DEFAULT NULL COMMENT 'Voltage Phase C-N',
						  `CurrentInstantaneousPhaseA` double DEFAULT NULL COMMENT 'Current Instantaneous Phase A',
						  `CurrentInstantaneousPhaseB` double DEFAULT NULL COMMENT 'Current Instantaneous Phase B',
						  `CurrentInstantaneousPhaseC` double DEFAULT NULL COMMENT 'Current Instantaneous Phase C',
						  `Frequency` double DEFAULT NULL COMMENT 'Frequency',
						  `ApparentEnergyConsumption` double DEFAULT NULL COMMENT 'Apparent Energy Consumption',
						  `ReactiveEnergyConsumption` double DEFAULT NULL COMMENT 'Reactive Energy Consumption',
						  `ApparentPowerPhaseA` double DEFAULT NULL COMMENT 'Apparent Power Phase A',
						  `ApparentPowerPhaseB` double DEFAULT NULL COMMENT 'Apparent Power Phase B',
						  `ApparentPowerPhaseC` double DEFAULT NULL COMMENT 'Apparent Power Phase C',
						  `ReactivePowerPhaseA` double DEFAULT NULL COMMENT 'Reactive Power Phase A',
						  `ReactivePowerPhaseB` double DEFAULT NULL COMMENT 'Reactive Power Phase B',
						  `ReactivePowerPhaseC` double DEFAULT NULL COMMENT 'Reactive Power Phase C',
						  `TotalRealPowerPresentDemand` double DEFAULT NULL COMMENT 'Total Real Power Present Demand',
						  `TotalReactivePowerPresentDemand` double DEFAULT NULL COMMENT 'Total Reactive Power Present Demand',
						  `TotalApparentPowerPresentDemand` double DEFAULT NULL COMMENT 'Total Apparent Power Present Demand',
						  `TotalRealPowerMaxDemand` double DEFAULT NULL COMMENT 'Total Real Power Max Demand',
						  `TotalReactivePowerMaxDemand` double DEFAULT NULL COMMENT 'Total Reactive Power Max Demand',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 44">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `id_device` int NOT NULL,
						  `time` datetime NOT NULL,
						  `SerialNumber` varchar(200) DEFAULT NULL,
						  `NETIP` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `DNS1` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `DNS2` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `ETHSTATE` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `ICCID` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `INTSTATE` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `INTSTATE_RAW` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `LTERSRQ` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `LTERSRP` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `NETCHAN` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
						  `ACTIVESIM` varchar(200) DEFAULT NULL,
						  `BANDMODE` varchar(200) DEFAULT NULL,
						  `CIMI` varchar(200) DEFAULT NULL,
						  `NETOP` varchar(255) DEFAULT NULL,
						  `NETPHONE` varchar(255) DEFAULT NULL,
						  `NETRSSI` varchar(255) DEFAULT NULL,
						  `NETSERV` varchar(255) DEFAULT NULL,
						  `NETSERVICE_RAW` varchar(255) DEFAULT NULL,
						  `NETSTATE` varchar(255) DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 45">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `RelativeHumidityActual` double DEFAULT NULL COMMENT 'Relative Humidity (Actual)',
						  `RelativeHumidityMin` double DEFAULT NULL COMMENT 'Relative Humidity (Min)',
						  `RelativeHumidityMax` double DEFAULT NULL COMMENT 'Relative Humidity (Max)',
						  `RelativeHumidityAvg` double DEFAULT NULL COMMENT 'Relative Humidity (Avg)',
						  `RelativeAirPressureActual` double DEFAULT NULL COMMENT 'Relative Air Pressure (Actual)',
						  `RelativeAirPressureMin` double DEFAULT NULL COMMENT 'Relative Air Pressure (Min)',
						  `RelativeAirPressureMax` double DEFAULT NULL COMMENT 'Relative Air Pressure (Max)',
						  `RelativeAirPressureAvg` double DEFAULT NULL COMMENT 'Relative Air Pressure (Avg)',
						  `WindDirectionActual` double DEFAULT NULL COMMENT 'Wind Direction (Actual)',
						  `WindDirectionMin` double DEFAULT NULL COMMENT 'Wind Direction (Min)',
						  `WindDirectionMax` double DEFAULT NULL COMMENT 'Wind Direction (Max)',
						  `WindDirectionVct` double DEFAULT NULL COMMENT 'Wind Direction (Vct)',
						  `WindDirectionFast` double DEFAULT NULL COMMENT 'Wind Direction Fast',
						  `WindDirectionCompassCorrected` double DEFAULT NULL COMMENT 'Wind Direction Compass Corrected',
						  `Compass` double DEFAULT NULL COMMENT 'Compass',
						  `WindMeasurementQuality` double DEFAULT NULL COMMENT 'Wind Measurement Quality',
						  `PrecipitationType` double DEFAULT NULL COMMENT 'Precipitation Type',
						  `GlobalRadiation` double DEFAULT NULL COMMENT 'Global Radiation',
						  `GlobalRadiation2` double DEFAULT NULL COMMENT 'Global Radiation 2',
						  `GlobalRadiation3` double DEFAULT NULL COMMENT 'Global Radiation 3',
						  `GlobalRadiation4` double DEFAULT NULL COMMENT 'Global Radiation 4',
						  `AirTemperatureCActual` double DEFAULT NULL COMMENT 'Air Temperature Deg.C Actual',
						  `AirTemperatureCMin` double DEFAULT NULL COMMENT 'Air Temperature Deg.C (Min)',
						  `AirTemperatureCMax` double DEFAULT NULL COMMENT 'Air Temperature Deg.C (Max)',
						  `AirTemperatureCAvg` double DEFAULT NULL COMMENT 'Air Temperature Deg.C (Avg)',
						  `DewPointActual` double DEFAULT NULL COMMENT 'Dew Point (Actual)',
						  `DewPointMin` double DEFAULT NULL COMMENT 'Dew Point (Min)',
						  `DewPointMax` double DEFAULT NULL COMMENT 'Dew Point (Max)',
						  `DewPointAvg` double DEFAULT NULL COMMENT 'Dew Point (Avg)',
						  `WindChillTemperature` double DEFAULT NULL COMMENT 'Wind Chill-Temperature',
						  `HeatingTemperatureWind` double DEFAULT NULL COMMENT 'Heating Temperature Wind',
						  `HeatingTemperatureR2S` double DEFAULT NULL COMMENT 'Heating Temperature R2S',
						  `WindSpeedActual` double DEFAULT NULL COMMENT 'Wind Speed (Actual)',
						  `WindSpeedMin` double DEFAULT NULL COMMENT 'Wind Speed (Min)',
						  `WindSpeedMax` double DEFAULT NULL COMMENT 'Wind Speed (Max)',
						  `WindSpeedAvg` double DEFAULT NULL COMMENT 'Wind Speed (Avg)',
						  `WindSpeedVct` double DEFAULT NULL COMMENT 'Wind Speed (Vct)',
						  `WindSpeedFast` double DEFAULT NULL COMMENT 'Wind Speed Fast',
						  `PrecipitationAbsolute` double DEFAULT NULL COMMENT 'Precipitation Absolute',
						  `PrecipitationDifferential` double DEFAULT NULL COMMENT 'Precipitation Differential',
						  `PrecipitationIntensity` double DEFAULT NULL COMMENT 'Precipitation Intensity',
						  `AirTemperatureFActual` double DEFAULT NULL COMMENT 'Air Temperature Deg.F Actual',
						  `AirTemperatureFMin` double DEFAULT NULL COMMENT 'Air Temperature Deg.F (Min)',
						  `AirTemperatureFMax` double DEFAULT NULL COMMENT 'Air Temperature Deg.F (Max)',
						  `AirTemperatureFAvg` double DEFAULT NULL COMMENT 'Air Temperature Deg.F (Avg)',
						  `ExternalTemperatureC` double DEFAULT NULL COMMENT 'External Temperature Deg.C',
						  `ExternalTemperatureF` double DEFAULT NULL COMMENT 'External Temperature Deg.F',
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT '0',
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 46">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `GridMs_TotVAr` double DEFAULT NULL,
						  `DcMs_Watt0` double DEFAULT NULL,
						  `DcMs_Watt1` double DEFAULT NULL,
						  `W_phsA` double DEFAULT NULL,
						  `W_phsB` double DEFAULT NULL,
						  `W_phsC` double DEFAULT NULL,
						  `GridMs_TotW` double DEFAULT NULL,
						  `GridMs_TotVA` double DEFAULT NULL,
						  `A_phsA` double DEFAULT NULL,
						  `A_phsB` double DEFAULT NULL,
						  `A_phsC` double DEFAULT NULL,
						  `GridMs_Hz` double DEFAULT NULL,
						  `Isolation_LeakRis` double DEFAULT NULL,
						  `DcMs_Vol0` double DEFAULT NULL,
						  `DcMs_Vol1` double DEFAULT NULL,
						  `PhV_phsA` double DEFAULT NULL,
						  `PhV_phsB` double DEFAULT NULL,
						  `PhV_phsC` double DEFAULT NULL,
						  `DcMs_Amp0` double DEFAULT NULL,
						  `DcMs_Amp1` double DEFAULT NULL,
						  `TotVAr_Pv` double DEFAULT NULL,
						  `VAr_phsA` double DEFAULT NULL,
						  `VAr_phsB` double DEFAULT NULL,
						  `VAr_phsC` double DEFAULT NULL,
						  `VA_phsA` double DEFAULT NULL,
						  `VA_phsB` double DEFAULT NULL,
						  `VA_phsC` double DEFAULT NULL,
						  `TotW_Pv` double DEFAULT NULL,
						  `Metering_TotFeedTms` double DEFAULT NULL,
						  `Operation_GriSwCnt` double DEFAULT NULL,
						  `Metering_TotOpTms` double DEFAULT NULL,
						  `Operation_Health` varchar(4) DEFAULT NULL,
						  `Metering_TotWhOut` double DEFAULT NULL,
						  `TotWhOut_Pv` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 47">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `LastRestart` double DEFAULT NULL COMMENT 'Last Restart',
						  `Uptime` double DEFAULT NULL COMMENT 'Uptime',
						  `Year` double DEFAULT NULL COMMENT 'Year',
						  `Month` double DEFAULT NULL COMMENT 'Month',
						  `Day` double DEFAULT NULL COMMENT 'Day',
						  `Hour` double DEFAULT NULL COMMENT 'Hour',
						  `Minutes` double DEFAULT NULL COMMENT 'Minutes',
						  `Seconds` double DEFAULT NULL COMMENT 'Seconds',
						  `CurrentTime` double DEFAULT NULL COMMENT 'Current Time',
						  `ACPower` double DEFAULT NULL COMMENT 'AC Power',
						  `ACFrequency` double DEFAULT NULL COMMENT 'AC Frequency',
						  `PVVoltage` double DEFAULT NULL COMMENT 'PV Voltage',
						  `PVCurrent` double DEFAULT NULL COMMENT 'PV Current',
						  `CommonMode` double DEFAULT NULL COMMENT 'Common Mode',
						  `AmbientTemperature` double DEFAULT NULL COMMENT 'Ambient Temperature',
						  `CoolantTemperature` double DEFAULT NULL COMMENT 'Coolant Temperature',
						  `ReactorTemperature` double DEFAULT NULL COMMENT 'Reactor Temperature',
						  `CabinetTemperature` double DEFAULT NULL COMMENT 'Cabinet Temperature',
						  `BusVoltage` double DEFAULT NULL COMMENT 'Bus Voltage',
						  `GroundCurrent` double DEFAULT NULL COMMENT 'Ground Current',
						  `ReactivePower` double DEFAULT NULL COMMENT 'Reactive Power',
						  `ACCurrent` double DEFAULT NULL COMMENT 'AC Current',
						  `TodaykWh` double DEFAULT NULL COMMENT 'Today kWh',
						  `YTDkWhTotal` double DEFAULT NULL COMMENT 'YTD kWh Total',
						  `LifekWhTotal` double DEFAULT NULL COMMENT 'Life kWh Total',
						  `YTDkWh` double DEFAULT NULL COMMENT 'YTD kWh',
						  `LifekWh` double DEFAULT NULL COMMENT 'Life kWh',
						  `Last15MinkWh` double DEFAULT NULL COMMENT 'Last 15Min kWh',
						  `TimeStamp15Minutes` double DEFAULT NULL COMMENT 'Time Stamp 15 Minutes',
						  `State` double DEFAULT NULL COMMENT 'State',
						  `Limits` double DEFAULT NULL COMMENT 'Limits',
						  `MasterFault` double DEFAULT NULL COMMENT 'Master Fault',
						  `MasterWarning` double DEFAULT NULL COMMENT 'Master Warning',
						  `ArrayFault` double DEFAULT NULL COMMENT 'Array Fault',
						  `ArrayWarning` double DEFAULT NULL COMMENT 'Array Warning',
						  `GridFault` double DEFAULT NULL COMMENT 'Grid Fault',
						  `GridWarning` double DEFAULT NULL COMMENT 'Grid Warning',
						  `SystemFault` double DEFAULT NULL COMMENT 'System Fault',
						  `SystemWarning` double DEFAULT NULL COMMENT 'System Warning',
						  `DriveFault` double DEFAULT NULL COMMENT 'Drive Fault',
						  `DriveWarning` double DEFAULT NULL COMMENT 'Drive Warning',
						  `TemperatureFault` double DEFAULT NULL COMMENT 'Temperature Fault',
						  `TemperatureWarning` double DEFAULT NULL COMMENT 'Temperature Warning',
						  `CoolingSystemFault` double DEFAULT NULL COMMENT 'Cooling System Fault',
						  `CoolingSystemWarning` double DEFAULT NULL COMMENT 'Cooling System Warning',
						  `ElectricInterlockFault` double DEFAULT NULL COMMENT 'Electric Interlock Fault',
						  `ElectricInterlockWarning` double DEFAULT NULL COMMENT 'Electric Interlock Warning',
						  `PowerSupplyFault` double DEFAULT NULL COMMENT 'Power Supply Fault',
						  `PowerSupplyWarning` double DEFAULT NULL COMMENT 'Power Supply Warning',
						  `RequestSetACPowerLimit` double DEFAULT NULL COMMENT 'Request/Set AC Power Limit',
						  `LowerRangeOfACPowerLimit` double DEFAULT NULL COMMENT 'Lower Range of AC Power Limit',
						  `UpperRangeOfACPowerLimit` double DEFAULT NULL COMMENT 'Upper Range of AC Power Limit',
						  `RequestSetInstantaneousReactivePowerSetPoint` double DEFAULT NULL COMMENT 'Request/Set Instantaneous Reactive Power Set Point',
						  `LowerRangeOfInstantaneousReactivePowerSetPoint` double DEFAULT NULL COMMENT 'Lower Range of Instantaneous Reactive Power Set Point',
						  `UpperRangeOfInstantaneousReactivePowerSetPoint` double DEFAULT NULL COMMENT 'Upper Range of Instantaneous Reactive Power Set Point',
						  `EnableDisableTheUnit` double DEFAULT NULL COMMENT 'Enable/Disable the Unit',
						  `SetReadReactivePowerMode` double DEFAULT NULL COMMENT 'Set/Read Reactive Power Mode',
						  `SetReadPACLimit` double DEFAULT NULL COMMENT 'Set/Read P AC Limit',
						  `SetReadInstantaneousReactivePowerSetPoint` double DEFAULT NULL COMMENT 'Set/Read Instantaneous Reactive Power Set Point',
						  `SetReadPowerFactorSetPoint` double DEFAULT NULL COMMENT 'Set/Read Power Factor Set Point',
						  `ACPowerRampRate` double DEFAULT NULL COMMENT 'AC Power Ramp Rate',
						  `ReactivePowerRampRate` double DEFAULT NULL COMMENT 'Reactive Power Ramp Rate',
						  `PowerFactorRampRate` double DEFAULT NULL COMMENT 'Power Factor Ramp Rate',
						  `ReactivePowerSignConvention` double DEFAULT NULL COMMENT 'Reactive Power Sign Convention',
						  `DCS_N` double DEFAULT NULL COMMENT 'DCS_N',
						  `DCS_StCtcr` double DEFAULT NULL COMMENT 'DCS_StCtcr',
						  `DCS_StCpt` double DEFAULT NULL COMMENT 'DCS_StCpt',
						  `DCS_EvtFlt` double DEFAULT NULL COMMENT 'DCS_EvtFlt',
						  `DCS_EvtWrn` double DEFAULT NULL COMMENT 'DCS_EvtWrn',
						  `DCS_StVnd` double DEFAULT NULL COMMENT 'DCS_StVnd',
						  `DCS_DCA` double DEFAULT NULL COMMENT 'DCS_DCA',
						  `DCS_DCADif` double DEFAULT NULL COMMENT 'DCS_DCADif',
						  `DCS_DCV` double DEFAULT NULL COMMENT 'DCS_DCV',
						  `DCS_Tmp` double DEFAULT NULL COMMENT 'DCS_Tmp',
						  `DCS_InId01` double DEFAULT NULL COMMENT 'DCS_InId01',
						  `DCS_InFlt01` double DEFAULT NULL COMMENT 'DCS_InFlt01',
						  `DCS_InWrn01` double DEFAULT NULL COMMENT 'DCS_InWrn01',
						  `DCS_InPDCA01` double DEFAULT NULL COMMENT 'DCS_InPDCA01',
						  `DCS_InNDCA01` double DEFAULT NULL COMMENT 'DCS_InNDCA01',
						  `DCS_InId02` double DEFAULT NULL COMMENT 'DCS_InId02',
						  `DCS_InFlt02` double DEFAULT NULL COMMENT 'DCS_InFlt02',
						  `DCS_InWrn02` double DEFAULT NULL COMMENT 'DCS_InWrn02',
						  `DCS_InPDCA02` double DEFAULT NULL COMMENT 'DCS_InPDCA02',
						  `DCS_InNDCA02` double DEFAULT NULL COMMENT 'DCS_InNDCA02',
						  `DCS_InId03` double DEFAULT NULL COMMENT 'DCS_InId03',
						  `DCS_InFlt03` double DEFAULT NULL COMMENT 'DCS_InFlt03',
						  `DCS_InWrn03` double DEFAULT NULL COMMENT 'DCS_InWrn03',
						  `DCS_InPDCA03` double DEFAULT NULL COMMENT 'DCS_InPDCA03',
						  `DCS_InNDCA03` double DEFAULT NULL COMMENT 'DCS_InNDCA03',
						  `DCS_InId04` double DEFAULT NULL COMMENT 'DCS_InId04',
						  `DCS_InFlt04` double DEFAULT NULL COMMENT 'DCS_InFlt04',
						  `DCS_InWrn04` double DEFAULT NULL COMMENT 'DCS_InWrn04',
						  `DCS_InPDCA04` double DEFAULT NULL COMMENT 'DCS_InPDCA04',
						  `DCS_InNDCA04` double DEFAULT NULL COMMENT 'DCS_InNDCA04',
						  `DCS_InId05` double DEFAULT NULL COMMENT 'DCS_InId05',
						  `DCS_InFlt05` double DEFAULT NULL COMMENT 'DCS_InFlt05',
						  `DCS_InWrn05` double DEFAULT NULL COMMENT 'DCS_InWrn05',
						  `DCS_InPDCA05` double DEFAULT NULL COMMENT 'DCS_InPDCA05',
						  `DCS_InNDCA05` double DEFAULT NULL COMMENT 'DCS_InNDCA05',
						  `DCS_InId06` double DEFAULT NULL COMMENT 'DCS_InId06',
						  `DCS_InFlt06` double DEFAULT NULL COMMENT 'DCS_InFlt06',
						  `DCS_InWrn06` double DEFAULT NULL COMMENT 'DCS_InWrn06',
						  `DCS_InPDCA06` double DEFAULT NULL COMMENT 'DCS_InPDCA06',
						  `DCS_InNDCA06` double DEFAULT NULL COMMENT 'DCS_InNDCA06',
						  `DCS_InId07` double DEFAULT NULL COMMENT 'DCS_InId07',
						  `DCS_InFlt07` double DEFAULT NULL COMMENT 'DCS_InFlt07',
						  `DCS_InWrn07` double DEFAULT NULL COMMENT 'DCS_InWrn07',
						  `DCS_InPDCA07` double DEFAULT NULL COMMENT 'DCS_InPDCA07',
						  `DCS_InNDCA07` double DEFAULT NULL COMMENT 'DCS_InNDCA07',
						  `DCS_InId08` double DEFAULT NULL COMMENT 'DCS_InId08',
						  `DCS_InFlt08` double DEFAULT NULL COMMENT 'DCS_InFlt08',
						  `DCS_InWrn08` double DEFAULT NULL COMMENT 'DCS_InWrn08',
						  `DCS_InPDCA08` double DEFAULT NULL COMMENT 'DCS_InPDCA08',
						  `DCS_InNDCA08` double DEFAULT NULL COMMENT 'DCS_InNDCA08',
						  `DCS_InId09` double DEFAULT NULL COMMENT 'DCS_InId09',
						  `DCS_InFlt09` double DEFAULT NULL COMMENT 'DCS_InFlt09',
						  `DCS_InWrn09` double DEFAULT NULL COMMENT 'DCS_InWrn09',
						  `DCS_InPDCA09` double DEFAULT NULL COMMENT 'DCS_InPDCA09',
						  `DCS_InNDCA09` double DEFAULT NULL COMMENT 'DCS_InNDCA09',
						  `DCS_InId10` double DEFAULT NULL COMMENT 'DCS_InId10',
						  `DCS_InFlt10` double DEFAULT NULL COMMENT 'DCS_InFlt10',
						  `DCS_InWrn10` double DEFAULT NULL COMMENT 'DCS_InWrn10',
						  `DCS_InPDCA10` double DEFAULT NULL COMMENT 'DCS_InPDCA10',
						  `DCS_InNDCA10` double DEFAULT NULL COMMENT 'DCS_InNDCA10',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 48">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `VA_phsA` double DEFAULT NULL,
						  `VA_phsB` double DEFAULT NULL,
						  `DcMs_Vol0` double DEFAULT NULL,
						  `DcMs_Vol1` double DEFAULT NULL,
						  `DcMs_Vol2` double DEFAULT NULL,
						  `DcMs_Vol3` double DEFAULT NULL,
						  `DcMs_Vol4` double DEFAULT NULL,
						  `DcMs_Vol5` double DEFAULT NULL,
						  `TotW_Pv` double DEFAULT NULL,
						  `Isolation_LeakRis` double DEFAULT NULL,
						  `PhV_phsC` double DEFAULT NULL,
						  `GridMs_Hz` double DEFAULT NULL,
						  `W_phsB` double DEFAULT NULL,
						  `GridMs_TotW` double DEFAULT NULL,
						  `W_phsC` double DEFAULT NULL,
						  `VAr_phsC` double DEFAULT NULL,
						  `DcMs_Watt0` double DEFAULT NULL,
						  `DcMs_Watt1` double DEFAULT NULL,
						  `DcMs_Watt2` double DEFAULT NULL,
						  `DcMs_Watt3` double DEFAULT NULL,
						  `DcMs_Watt4` double DEFAULT NULL,
						  `DcMs_Watt5` double DEFAULT NULL,
						  `W_phsA` double DEFAULT NULL,
						  `VAr_phsB` double DEFAULT NULL,
						  `TotVAr_Pv` double DEFAULT NULL,
						  `PhV_phsA2B` double DEFAULT NULL,
						  `VAr_phsA` double DEFAULT NULL,
						  `GridMs_TotVA` double DEFAULT NULL,
						  `GridMs_TotVAr` double DEFAULT NULL,
						  `DcMs_Amp0` double DEFAULT NULL,
						  `DcMs_Amp1` double DEFAULT NULL,
						  `DcMs_Amp2` double DEFAULT NULL,
						  `DcMs_Amp3` double DEFAULT NULL,
						  `DcMs_Amp4` double DEFAULT NULL,
						  `DcMs_Amp5` double DEFAULT NULL,
						  `PhV_phsB2C` double DEFAULT NULL,
						  `PhV_phsB` double DEFAULT NULL,
						  `A_phsA` double DEFAULT NULL,
						  `PhV_phsC2A` double DEFAULT NULL,
						  `A_phsB` double DEFAULT NULL,
						  `PhV_phsA` double DEFAULT NULL,
						  `VA_phsC` double DEFAULT NULL,
						  `A_phsC` double DEFAULT NULL,
						  `Metering_TotWhOut` double DEFAULT NULL,
						  `Operation_Health` varchar(10) DEFAULT NULL,
						  `Operation_GriSwCnt` double DEFAULT NULL,
						  `TotWhOut_Pv` double DEFAULT NULL,
						  `Metering_TotFeedTms` double DEFAULT NULL,
						  `Metering_TotOpTms` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 49">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `nvm_irradiance` double DEFAULT NULL,
						  `nvm_temperature` double DEFAULT NULL,
						  `expected_power_dc` double DEFAULT NULL,
						  `expected_power_ac` double DEFAULT NULL,
						  `expected_energy` double DEFAULT NULL,
						  `r_irradiance` double DEFAULT NULL,
						  `total_poa` double DEFAULT NULL,
						  `panel_temp` double DEFAULT NULL,
						  `ambient_temp` double DEFAULT NULL,
						  `calculation_poa` double DEFAULT NULL,
						  `calculation_temp` double DEFAULT NULL,
						  `calculation_clipping` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 50">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `pt0` varchar(100) DEFAULT NULL,
						  `pt1` varchar(100) DEFAULT NULL,
						  `pt2` varchar(100) DEFAULT NULL,
						  `pt3` varchar(100) DEFAULT NULL,
						  `pt4` varchar(100) DEFAULT NULL,
						  `pt5` varchar(100) DEFAULT NULL,
						  `pt6` varchar(100) DEFAULT NULL,
						  `pt7` varchar(100) DEFAULT NULL,
						  `pt8` varchar(100) DEFAULT NULL,
						  `pt9` varchar(100) DEFAULT NULL,
						  `pt10` varchar(100) DEFAULT NULL,
						  `pt11` varchar(100) DEFAULT NULL,
						  `pt12` varchar(100) DEFAULT NULL,
						  `pt13` varchar(100) DEFAULT NULL,
						  `pt14` varchar(100) DEFAULT NULL,
						  `pt15` varchar(100) DEFAULT NULL,
						  `pt16` varchar(100) DEFAULT NULL,
						  `pt17` varchar(100) DEFAULT NULL,
						  `pt18` varchar(100) DEFAULT NULL,
						  `pt19` varchar(100) DEFAULT NULL,
						  `pt20` varchar(100) DEFAULT NULL,
						  `pt21` varchar(100) DEFAULT NULL,
						  `pt22` varchar(100) DEFAULT NULL,
						  `pt23` varchar(100) DEFAULT NULL,
						  `pt24` double DEFAULT NULL,
						  `pt25` double DEFAULT NULL,
						  `pt26` double DEFAULT NULL,
						  `pt27` double DEFAULT NULL,
						  `pt28` double DEFAULT NULL,
						  `pt29` double DEFAULT NULL,
						  `pt30` double DEFAULT NULL,
						  `pt31` double DEFAULT NULL,
						  `pt32` double DEFAULT NULL,
						  `pt33` double DEFAULT NULL,
						  `pt34` double DEFAULT NULL,
						  `pt35` double DEFAULT NULL,
						  `pt36` double DEFAULT NULL,
						  `pt37` double DEFAULT NULL,
						  `pt38` double DEFAULT NULL,
						  `pt39` double DEFAULT NULL,
						  `pt40` double DEFAULT NULL,
						  `pt41` double DEFAULT NULL,
						  `pt42` double DEFAULT NULL,
						  `pt43` double DEFAULT NULL,
						  `pt44` double DEFAULT NULL,
						  `pt45` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>    
	            <when test="id_device_group == 51">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int DEFAULT NULL,
						  `low_alarm` int DEFAULT NULL,
						  `high_alarm` int DEFAULT NULL,
						  `VlnA` double DEFAULT NULL,
						  `VlnB` double DEFAULT NULL,
						  `VlnC` double DEFAULT NULL,
						  `VlnAve` double DEFAULT NULL,
						  `VllAb` double DEFAULT NULL,
						  `VllAc` double DEFAULT NULL,
						  `VllCa` double DEFAULT NULL,
						  `IA` double DEFAULT NULL,
						  `IB` double DEFAULT NULL,
						  `IC` double DEFAULT NULL,
						  `IAve` double DEFAULT NULL,
						  `VUnbal` double DEFAULT NULL,
						  `IUnbal` double DEFAULT NULL,
						  `Freq` double DEFAULT NULL,
						  `I4` double DEFAULT NULL,
						  `kWA` double DEFAULT NULL,
						  `kWB` double DEFAULT NULL,
						  `kWC` double DEFAULT NULL,
						  `kWTot` double DEFAULT NULL,
						  `kVARA` double DEFAULT NULL,
						  `kVARB` double DEFAULT NULL,
						  `kVARC` double DEFAULT NULL,
						  `kVARTot` double DEFAULT NULL,
						  `KVAA` double DEFAULT NULL,
						  `KVAB` double DEFAULT NULL,
						  `KVAC` double DEFAULT NULL,
						  `KVATot` double DEFAULT NULL,
						  `PFSignA` double DEFAULT NULL,
						  `PFSignB` double DEFAULT NULL,
						  `PFSignC` double DEFAULT NULL,
						  `PFSignTot` double DEFAULT NULL,
						  `VIIAveMx` double DEFAULT NULL,
						  `IAveMx` double DEFAULT NULL,
						  `kWTotMx` double DEFAULT NULL,
						  `kVARTotMx` double DEFAULT NULL,
						  `kVATotMx` double DEFAULT NULL,
						  `FreqMx` double DEFAULT NULL,
						  `VIIAveMn` double DEFAULT NULL,
						  `IAveMn` double DEFAULT NULL,
						  `FreqMn` double DEFAULT NULL,
						  `kWSdDelRec` double DEFAULT NULL,
						  `kVASdDelRec` double DEFAULT NULL,
						  `kVARSdDelRec` double DEFAULT NULL,
						  `kWSdMxDR` double DEFAULT NULL,
						  `kVASdMxDR` double DEFAULT NULL,
						  `kVARSdMxDR` double DEFAULT NULL,
						  `PhaseRev` double DEFAULT NULL,
						  `kWhDel` double DEFAULT NULL,
						  `kWhRec` double DEFAULT NULL,
						  `kWhDelRec` double DEFAULT NULL,
						  `kWhDel_Rec` double DEFAULT NULL,
						  `kVARhDel` double DEFAULT NULL,
						  `kVARhRec` double DEFAULT NULL,
						  `kVARhDelRec` double DEFAULT NULL,
						  `kVARhDel_Rec` double DEFAULT NULL,
						  `kVAhDelRec` double DEFAULT NULL,
						  `V1THDMx` double DEFAULT NULL,
						  `V2THDMx` double DEFAULT NULL,
						  `V3THDMx` double DEFAULT NULL,
						  `I1THDMx` double DEFAULT NULL,
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 52">
	            	CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `Ia` double DEFAULT NULL COMMENT 'Ia',
						  `Ib` double DEFAULT NULL COMMENT 'Ib',
						  `Ic` double DEFAULT NULL COMMENT 'Ic',
						  `I4` double DEFAULT NULL COMMENT 'I4',
						  `I5` double DEFAULT NULL COMMENT 'I5',
						  `IAvg` double DEFAULT NULL COMMENT 'I avg',
						  `IAvgMn` double DEFAULT NULL COMMENT 'I avg mn',
						  `IAvgMx` double DEFAULT NULL COMMENT 'I avg mx',
						  `IAvgMean` double DEFAULT NULL COMMENT 'I avg mean',
						  `Freq` double DEFAULT NULL COMMENT 'Freq',
						  `FreqMn` double DEFAULT NULL COMMENT 'Freq mn',
						  `FreqMx` double DEFAULT NULL COMMENT 'Freq mx',
						  `FreqMean` double DEFAULT NULL COMMENT 'Freq mean',
						  `VUnbal` double DEFAULT NULL COMMENT 'V unbal',
						  `IUnbal` double DEFAULT NULL COMMENT 'I unbal',
						  `PhaseRev` double DEFAULT NULL COMMENT 'Phase Rev',
						  `VInA` double DEFAULT NULL COMMENT 'VIn a',
						  `VInB` double DEFAULT NULL COMMENT 'VIn b',
						  `VInC` double DEFAULT NULL COMMENT 'VIn c',
						  `VInAvg` double DEFAULT NULL COMMENT 'VIn avg',
						  `VInAvgMx` double DEFAULT NULL COMMENT 'VIn avg mx',
						  `unused1` double DEFAULT NULL COMMENT '(unused)',
						  `VIIAb` double DEFAULT NULL COMMENT 'VII ab',
						  `VIIBc` double DEFAULT NULL COMMENT 'VII bc',
						  `VIICa` double DEFAULT NULL COMMENT 'VII ca',
						  `VIIAvg` double DEFAULT NULL COMMENT 'VII avg',
						  `VIIAvgMx` double DEFAULT NULL COMMENT 'VII avg mx',
						  `VIIAvgMean` double DEFAULT NULL COMMENT 'VII avg mean',
						  `unused2` double DEFAULT NULL COMMENT '(unused)',
						  `unused3` double DEFAULT NULL COMMENT '(unused)',
						  `unused4` double DEFAULT NULL COMMENT '(unused)',
						  `unused5` double DEFAULT NULL COMMENT '(unused)',
						  `kWA` double DEFAULT NULL COMMENT 'kW a',
						  `kWB` double DEFAULT NULL COMMENT 'kW b',
						  `kWC` double DEFAULT NULL COMMENT 'kW c',
						  `kWTot` double DEFAULT NULL COMMENT 'kW tot',
						  `kWTotMax` double DEFAULT NULL COMMENT 'kW tot max',
						  `kVARA` double DEFAULT NULL COMMENT 'kVAR a',
						  `kVARB` double DEFAULT NULL COMMENT 'kVAR b',
						  `kVARC` double DEFAULT NULL COMMENT 'kVAR c',
						  `kVARTot` double DEFAULT NULL COMMENT 'kVAR tot',
						  `kVARTotMax` double DEFAULT NULL COMMENT 'kVAR tot max',
						  `kVAA` double DEFAULT NULL COMMENT 'kVA a',
						  `kVAB` double DEFAULT NULL COMMENT 'kVA b',
						  `kVAC` double DEFAULT NULL COMMENT 'kVA c',
						  `kVATot` double DEFAULT NULL COMMENT 'kVA tot',
						  `kVATotMax` double DEFAULT NULL COMMENT 'kVA tot max',
						  `unused6` double DEFAULT NULL COMMENT '(unused)',
						  `kWhDel` double DEFAULT NULL COMMENT 'kWh del',
						  `kWhRec` double DEFAULT NULL COMMENT 'kWh rec',
						  `kVARhDel` double DEFAULT NULL COMMENT 'kVARh del',
						  `kVARhRec` double DEFAULT NULL COMMENT 'kVARh rec',
						  `kVARhDelRec` double DEFAULT NULL COMMENT 'kVARh del+rec',
						  `unused7` double DEFAULT NULL COMMENT '(unused)',
						  `unused8` double DEFAULT NULL COMMENT '(unused)',
						  `unused9` double DEFAULT NULL COMMENT '(unused)',
						  `unused10` double DEFAULT NULL COMMENT '(unused)',
						  `unused11` double DEFAULT NULL COMMENT '(unused)',
						  `unused12` double DEFAULT NULL COMMENT '(unused)',
						  `unused13` double DEFAULT NULL COMMENT '(unused)',
						  `unused14` double DEFAULT NULL COMMENT '(unused)',
						  `unused15` double DEFAULT NULL COMMENT '(unused)',
						  `unused16` double DEFAULT NULL COMMENT '(unused)',
						  `unused17` double DEFAULT NULL COMMENT '(unused)',
						  `PFSignA` double DEFAULT NULL COMMENT 'PF Sign A',
						  `PFSignB` double DEFAULT NULL COMMENT 'PF Sign B',
						  `PFSignC` double DEFAULT NULL COMMENT 'PF Sign C',
						  `PFSignTot` double DEFAULT NULL COMMENT 'PF Sign Tot',
						  `V1THDMx` double DEFAULT NULL COMMENT 'V1 THD mx',
						  `V2THDMx` double DEFAULT NULL COMMENT 'V2 THD mx',
						  `V3THDMx` double DEFAULT NULL COMMENT 'V3 THD mx',
						  `I1THDMx` double DEFAULT NULL COMMENT 'I1 THD mx',
						  `I2THDMx` double DEFAULT NULL COMMENT 'I2 THD mx',
						  `I3THDMx` double DEFAULT NULL COMMENT 'I3 THD mx',
						  `I1KFactor` double DEFAULT NULL COMMENT 'I1 K Factor',
						  `I2KFactor` double DEFAULT NULL COMMENT 'I2 K Factor',
						  `I3KFactor` double DEFAULT NULL COMMENT 'I3 K Factor',
						  `I1CrestFactor` double DEFAULT NULL COMMENT 'I1 Crest Factor',
						  `I2CrestFactor` double DEFAULT NULL COMMENT 'I2 Crest Factor',
						  `I3CrestFactor` double DEFAULT NULL COMMENT 'I3 Crest Factor',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	            <when test="id_device_group == 53">
	           CREATE TABLE IF NOT EXISTS `data${id}_${device_group_table}` 
					  (
					      `time` datetime NOT NULL,
						  `id_device` int NOT NULL,
						  `error` int unsigned DEFAULT '0',
						  `low_alarm` int unsigned DEFAULT '0',
						  `high_alarm` int unsigned DEFAULT '0',
						  `VAB` double DEFAULT NULL COMMENT 'VAB',
						  `VBC` double DEFAULT NULL COMMENT 'VBC',
						  `VCA` double DEFAULT NULL COMMENT 'VCA',
						  `CurrentA` double DEFAULT NULL COMMENT 'Current A',
						  `CurrentB` double DEFAULT NULL COMMENT 'Current B',
						  `CurrentC` double DEFAULT NULL COMMENT 'Current C',
						  `ReadPower` double DEFAULT NULL COMMENT 'Read Power',
						  `PVVoltage` double DEFAULT NULL COMMENT 'PV Voltage',
						  `PVCurrent` double DEFAULT NULL COMMENT 'PV Current',
						  `PVPower` double DEFAULT NULL COMMENT 'PV Power',
						  `GridFrequency` double DEFAULT NULL COMMENT 'Grid Frequency',
						  `SystemState` double DEFAULT NULL COMMENT 'System State',
						  `GoalState` double DEFAULT NULL COMMENT 'Goal State',
						  `FaultCode` double DEFAULT NULL COMMENT 'Fault Code',
						  `kWh` double DEFAULT NULL COMMENT 'kWh',
						  `nvmActivePower` double DEFAULT NULL,
						  `nvmActiveEnergy` double DEFAULT NULL,
						  `MeasuredProduction` double DEFAULT NULL,
						  PRIMARY KEY (`time`,`id_device`) USING BTREE,
						  KEY `id_device` (`id_device`),
						  CONSTRAINT `fk_data${id}_${device_group_table}` FOREIGN KEY (`id_device`) REFERENCES `device` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
					  )
					  ENGINE=InnoDB DEFAULT CHARSET=utf8;
	            </when>
	                                                          
	        </choose> 
	        
		
	</insert>
	
	
	<insert id="createViewThreeMonthData">
		CREATE OR REPLACE VIEW `View${id}_${device_group_table}` AS
		  	SELECT
				* 
			FROM
				`data${id}_${device_group_table}` AS dv
			WHERE
				( dv.`time` > ( now() + INTERVAL -( 3 ) MONTH )) 
			ORDER BY dv.`time` DESC;
	</insert>
	
	
	<insert id="createBJobData">
		CREATE OR REPLACE VIEW `BJob${id}_${device_group_table}` AS
		  	SELECT
				* 
			FROM
				`data${id}_${device_group_table}` AS dv
			WHERE
				( dv.`time` > ( now() + INTERVAL -( 1 ) DAY ))
			ORDER BY dv.`time` DESC;
	</insert>
	
	<update id="updateTableDevice">
		UPDATE `device`
		SET
			datatablename = #{datatablename},
			view_tablename = #{view_tablename},
			job_tablename = #{job_tablename}
		WHERE
			`id` = #{id}
	</update>
	
	
	
	<insert id="insertDataToNewTableName">
		<choose>  
	            <when test="id_device_group == 1">
	            	<!-- model_shark100 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `volts_a_n`, `volts_b_n`, `volts_c_n`, `volts_a_b`, `volts_b_c`, `volts_c_a`, `amps_a`, `amps_b`, `amps_c`, `watts_3ph_total`, `vars_3ph_total`, `vas_3ph_total`, `power_factor_3ph_total`, `frequency`, `neutral_current`, `w_hours_received`, `w_hours_delivered`, `w_hours_net`, `w_hours_total`, `var_hours_positive`, `var_hours_negative`, `var_hours_net`, `var_hours_total`, `va_hours_total`, `amps_a_average`, `amps_b_average`, `amps_c_average`, `positive_watts_3ph_average`, `positive_vars_3ph_average`, `negative_watts_3ph_average`, `negative_vars_3ph_average`, `vas_3ph_average`, `positive_pf_3ph_average`, `negative_pf_3ph_average`, `volts_a_n_min`, `volts_b_n_min`, `volts_c_n_min`, `volts_a_b_min`, `volts_b_c_min`, `volts_c_a_min`, `amps_a_min_avg_demand`, `amps_b_min_avg_demand`, `amps_c_min_avg_demand`, `positive_watts_3ph_min_avg_demand`, `positive_vars_3ph_min_avg_demand`, `negative_watts_3ph_min_avg_demand`, `negative_vars_3ph_min_avg_demand`, `vas_3ph_min_avg_demand`, `positive_pf_3ph_min_avg_demand`, `negative_pf_3ph_min_avg_demand`, `frequency_min`, `volts_a_n_max`, `volts_b_n_max`, `volts_c_n_max`, `volts_a_b_max`, `volts_b_c_max`, `volts_c_a_max`, `amps_a_max_avg_demand`, `amps_b_max_avg_demand`, `amps_c_max_avg_demand`, `positive_watts_3ph_max_avg_demand`, `positive_vars_3ph_max_avg_demand`, `negative_watts_3ph_max_avg_demand`, `negative_vars_3ph_max_avg_demand`, `vas_3ph_max_avg_demand`, `positive_pf_3ph_max_avg_demand`, `negative_pf_3ph_max_avg_demand`, `frequency_max`, `volts_a_n_thd`, `volts_b_n_thd`, `volts_c_n_thd`, `amps_a_thd`, `amps_b_thd`, `amps_c_thd`, `phase_a_current_0th`, `phase_a_current_1st`, `phase_a_current_2nd`, `phase_a_current_3rd`, `phase_a_current_4th`, `phase_a_current_5th`, `phase_a_current_6th`, `phase_a_current_7th`, `phase_a_voltage_0th`, `phase_a_voltage_1st`, `phase_a_voltage_2nd`, `phase_a_voltage_3rd`, `phase_b_current_0th`, `phase_b_current_1st`, `phase_b_current_2nd`, `phase_b_current_3rd`, `phase_b_current_4th`, `phase_b_current_5th`, `phase_b_current_6th`, `phase_b_current_7th`, `phase_b_voltage_0th`, `phase_b_voltage_1st`, `phase_b_voltage_2nd`, `phase_b_voltage_3rd`, `phase_c_current_0th`, `phase_c_current_1st`, `phase_c_current_2nd`, `phase_c_current_3rd`, `phase_c_current_4th`, `phase_c_current_5th`, `phase_c_current_6th`, `phase_c_current_7th`, `phase_c_voltage_0th`, `phase_c_voltage_1st`, `phase_c_voltage_2nd`, `phase_c_voltage_3rd`, `angle_phase_a_current`, `angle_phase_b_current`, `angle_phase_c_current`, `angle_volts_a_b`, `angle_volts_b_c`, `angle_volts_c_a`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `volts_a_n`, `volts_b_n`, `volts_c_n`, `volts_a_b`, `volts_b_c`, `volts_c_a`, `amps_a`, `amps_b`, `amps_c`, `watts_3ph_total`, `vars_3ph_total`, `vas_3ph_total`, `power_factor_3ph_total`, `frequency`, `neutral_current`, `w_hours_received`, `w_hours_delivered`, `w_hours_net`, `w_hours_total`, `var_hours_positive`, `var_hours_negative`, `var_hours_net`, `var_hours_total`, `va_hours_total`, `amps_a_average`, `amps_b_average`, `amps_c_average`, `positive_watts_3ph_average`, `positive_vars_3ph_average`, `negative_watts_3ph_average`, `negative_vars_3ph_average`, `vas_3ph_average`, `positive_pf_3ph_average`, `negative_pf_3ph_average`, `volts_a_n_min`, `volts_b_n_min`, `volts_c_n_min`, `volts_a_b_min`, `volts_b_c_min`, `volts_c_a_min`, `amps_a_min_avg_demand`, `amps_b_min_avg_demand`, `amps_c_min_avg_demand`, `positive_watts_3ph_min_avg_demand`, `positive_vars_3ph_min_avg_demand`, `negative_watts_3ph_min_avg_demand`, `negative_vars_3ph_min_avg_demand`, `vas_3ph_min_avg_demand`, `positive_pf_3ph_min_avg_demand`, `negative_pf_3ph_min_avg_demand`, `frequency_min`, `volts_a_n_max`, `volts_b_n_max`, `volts_c_n_max`, `volts_a_b_max`, `volts_b_c_max`, `volts_c_a_max`, `amps_a_max_avg_demand`, `amps_b_max_avg_demand`, `amps_c_max_avg_demand`, `positive_watts_3ph_max_avg_demand`, `positive_vars_3ph_max_avg_demand`, `negative_watts_3ph_max_avg_demand`, `negative_vars_3ph_max_avg_demand`, `vas_3ph_max_avg_demand`, `positive_pf_3ph_max_avg_demand`, `negative_pf_3ph_max_avg_demand`, `frequency_max`, `volts_a_n_thd`, `volts_b_n_thd`, `volts_c_n_thd`, `amps_a_thd`, `amps_b_thd`, `amps_c_thd`, `phase_a_current_0th`, `phase_a_current_1st`, `phase_a_current_2nd`, `phase_a_current_3rd`, `phase_a_current_4th`, `phase_a_current_5th`, `phase_a_current_6th`, `phase_a_current_7th`, `phase_a_voltage_0th`, `phase_a_voltage_1st`, `phase_a_voltage_2nd`, `phase_a_voltage_3rd`, `phase_b_current_0th`, `phase_b_current_1st`, `phase_b_current_2nd`, `phase_b_current_3rd`, `phase_b_current_4th`, `phase_b_current_5th`, `phase_b_current_6th`, `phase_b_current_7th`, `phase_b_voltage_0th`, `phase_b_voltage_1st`, `phase_b_voltage_2nd`, `phase_b_voltage_3rd`, `phase_c_current_0th`, `phase_c_current_1st`, `phase_c_current_2nd`, `phase_c_current_3rd`, `phase_c_current_4th`, `phase_c_current_5th`, `phase_c_current_6th`, `phase_c_current_7th`, `phase_c_voltage_0th`, `phase_c_voltage_1st`, `phase_c_voltage_2nd`, `phase_c_voltage_3rd`, `angle_phase_a_current`, `angle_phase_b_current`, `angle_phase_c_current`, `angle_volts_a_b`, `angle_volts_b_c`, `angle_volts_c_a`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 2">
	            	<!-- model_kippzonen_rt1_class8009 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `device_type`, `data_model_version`, `operational_mode`, `status_flags`, `sensor1_data`, `panel_temperature`, `external_power_sensor`, `calibration_date`, `error_code`, `protocol_error`, `batch_number`, `serial_number`, `software_version`, `hardware_version`, `node_id`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `device_type`, `data_model_version`, `operational_mode`, `status_flags`, `sensor1_data`, `panel_temperature`, `external_power_sensor`, `calibration_date`, `error_code`, `protocol_error`, `batch_number`, `serial_number`, `software_version`, `hardware_version`, `node_id`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 3">
	            	<!-- model_ivt_solaron_ext -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `today_kwh`, `ytd_kwh_total`, `life_kwh_total`, `ytd_kwh`, `life_kwh`, `last_15min_kwh`, `timestamp_15minutes`, `last_restart`, `uptime`, `ac_power`, `ac_frequency`, `pv_voltage`, `pv_current`, `common_mode`, `ambient_temperature`, `coolant_temperature`, `reactor_temperature`, `cabinet_temperature`, `bus_voltage`, `ground_current`, `reactive_power`, `active_faults1`, `active_faults2`, `active_faults3`, `status`, `warnings1`, `warnings2_reserved`, `warnings3_reserved`, `limits`, `year`, `month`, `day`, `hour`, `minutes`, `seconds`, `current_time`, `ac_current`, `requset_set_ac_power_limit`, `request_set_instantaneous_reactive_power_set_point`, `autostart_status`, `set_read_reactive_power_mode`, `set_read_p_ac_limit`, `set_read_instantaneous_reactive_power_set_point`, `set_read_power_factor_set_point`, `ac_power_ramp_rate`, `reactive_power_ramp_rate`, `power_factor_ramp_rate`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `today_kwh`, `ytd_kwh_total`, `life_kwh_total`, `ytd_kwh`, `life_kwh`, `last_15min_kwh`, `timestamp_15minutes`, `last_restart`, `uptime`, `ac_power`, `ac_frequency`, `pv_voltage`, `pv_current`, `common_mode`, `ambient_temperature`, `coolant_temperature`, `reactor_temperature`, `cabinet_temperature`, `bus_voltage`, `ground_current`, `reactive_power`, `active_faults1`, `active_faults2`, `active_faults3`, `status`, `warnings1`, `warnings2_reserved`, `warnings3_reserved`, `limits`, `year`, `month`, `day`, `hour`, `minutes`, `seconds`, `current_time`, `ac_current`, `requset_set_ac_power_limit`, `request_set_instantaneous_reactive_power_set_point`, `autostart_status`, `set_read_reactive_power_mode`, `set_read_p_ac_limit`, `set_read_instantaneous_reactive_power_set_point`, `set_read_power_factor_set_point`, `ac_power_ramp_rate`, `reactive_power_ramp_rate`, `power_factor_ramp_rate`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 4">
	                <!-- model_pvp_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `total_kwh_delivered`, `volts_a_l_n`, `volts_b_l_n`, `volts_c_l_n`, `current_a`, `current_b`, `current_c`, `dc_output_voltage`, `dc_output_current`, `line_frenquency`, `line_kw`, `inverter_operating_status`, `inverter_fault_word0`, `inverter_fault_word1`, `inverter_fault_word2`, `data_comm_status`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					  `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `total_kwh_delivered`, `volts_a_l_n`, `volts_b_l_n`, `volts_c_l_n`, `current_a`, `current_b`, `current_c`, `dc_output_voltage`, `dc_output_current`, `line_frenquency`, `line_kw`, `inverter_operating_status`, `inverter_fault_word0`, `inverter_fault_word1`, `inverter_fault_word2`, `data_comm_status`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction` 
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>   

	            <when test="id_device_group == 5">
	            	<!-- model_imtsolar_class8000 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `irradiance`, `tcell`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `irradiance`, `tcell`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 6">
	            	<!-- model_advanced_energy_solaron -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `today_kwh`, `ytd_kwh_total`, `life_kwh_total`, `ytd_kwh`, `life_kwh`, `last_15min_kwh`, `timestamp_15minutes`, `last_restart`, `uptime`, `ac_power`, `ac_frequency`, `pv_voltage`, `pv_current`, `common_mode`, `ambient_temperature`, `coolant_temperature`, `reactor_temperature`, `cabinet_temperature`, `bus_voltage`, `ground_current`, `reactive_power`, `active_faults1`, `active_faults2`, `active_faults3`, `status`, `warnings1`, `warnings2_reserved`, `warnings3_reserved`, `limits`, `year`, `month`, `day`, `hour`, `minutes`, `seconds`, `current_time`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `today_kwh`, `ytd_kwh_total`, `life_kwh_total`, `ytd_kwh`, `life_kwh`, `last_15min_kwh`, `timestamp_15minutes`, `last_restart`, `uptime`, `ac_power`, `ac_frequency`, `pv_voltage`, `pv_current`, `common_mode`, `ambient_temperature`, `coolant_temperature`, `reactor_temperature`, `cabinet_temperature`, `bus_voltage`, `ground_current`, `reactive_power`, `active_faults1`, `active_faults2`, `active_faults3`, `status`, `warnings1`, `warnings2_reserved`, `warnings3_reserved`, `limits`, `year`, `month`, `day`, `hour`, `minutes`, `seconds`, `current_time`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 8">
	            	<!-- model_rt1_class30000 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `device_type`, `data_model_version`, `operational_mode`, `status_flags`, `sensor1_data`, `panel_temperature`, `external_power_sensor`, `calibration_date`, `error_code`, `protocol_error`, `batch_number`, `serial_number`, `software_version`, `hardware_version`, `node_id`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `device_type`, `data_model_version`, `operational_mode`, `status_flags`, `sensor1_data`, `panel_temperature`, `external_power_sensor`, `calibration_date`, `error_code`, `protocol_error`, `batch_number`, `serial_number`, `software_version`, `hardware_version`, `node_id`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 9">
	            	<!-- model_chint_solectria_inverter_class9725 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `PowerOnOff`, `PActiveSet`, `PFactorSet`, `PReactiveSet`, `GridVMax`, `GridVmaxTripT`, `GridVMin`, `GridVminTripT`, `GridFMax`, `GridFMin`, `GridFTripT`, `ActivePower`, `PowerFactor`, `StartDelayTime`, `Risomin`, `PVStartVol`, `DCIMax`, `TambientMax`, `TmoduleMax`, `OffsetDiffMax`, `GridVolUnbalance`, `SoftPowerStep`, `TotalEnergyToEnergy`, `TotalEnergyToday`, `InverterEfficiency`, `PowerFactor1`, `MaxActivePowerToday`, `RunTimeToGrid`, `AC_ActivePower`, `AC_ApparentPower`, `GridVoltageUab`, `GridVoltageUbc`, `GridVoltageUca`, `GridA_PhaseCurrent`, `GridB_PhaseCurrent`, `GridC_PhaseCurrent`, `PV1_Voltage`, `PV1_Current`, `PV2_Voltage`, `PV2_Current`, `PV3_Voltage`, `PV3_Current`, `Grid_Frequency`, `ModuleTemp`, `InternalTemp`, `TransformerTemp`, `InverterModeCode`, `PermanentFaultCode`, `WarnCode`, `FaultCode0`, `FaultCode1`, `FaultCode2`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`, `SerialNumber`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `PowerOnOff`, `PActiveSet`, `PFactorSet`, `PReactiveSet`, `GridVMax`, `GridVmaxTripT`, `GridVMin`, `GridVminTripT`, `GridFMax`, `GridFMin`, `GridFTripT`, `ActivePower`, `PowerFactor`, `StartDelayTime`, `Risomin`, `PVStartVol`, `DCIMax`, `TambientMax`, `TmoduleMax`, `OffsetDiffMax`, `GridVolUnbalance`, `SoftPowerStep`, `TotalEnergyToEnergy`, `TotalEnergyToday`, `InverterEfficiency`, `PowerFactor1`, `MaxActivePowerToday`, `RunTimeToGrid`, `AC_ActivePower`, `AC_ApparentPower`, `GridVoltageUab`, `GridVoltageUbc`, `GridVoltageUca`, `GridA_PhaseCurrent`, `GridB_PhaseCurrent`, `GridC_PhaseCurrent`, `PV1_Voltage`, `PV1_Current`, `PV2_Voltage`, `PV2_Current`, `PV3_Voltage`, `PV3_Current`, `Grid_Frequency`, `ModuleTemp`, `InternalTemp`, `TransformerTemp`, `InverterModeCode`, `PermanentFaultCode`, `WarnCode`, `FaultCode0`, `FaultCode1`, `FaultCode2`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`, `SerialNumber`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 10">
	            	<!-- model_veris_industries_e51c2_power_meter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AccumulatedRealEnergyNet`, `RealEnergyQuadrants14Import`, `RealEnergyQuadrants23Export`, `ReactiveEnergyQuadrant1`, `ReactiveEnergyQuadrant2`, `ReactiveEnergyQuadrant3`, `ReactiveEnergyQuadrant4`, `ApparentEnergyNet`, `ApparentEnergyQuadrants14`, `ApparentEnergyQuadrants23`, `TotalNetInstantaneousRealPower`, `TotalNetInstantaneousReactivePower`, `TotalNetInstantaneousApparentPower`, `TotalPowerFactor`, `VoltageLL3pAve`, `VoltageLN3pAve`, `Current3pAve`, `Frequency`, `TotalRealPowerPresentDemand`, `TotalReactivePowerPresentDemand`, `TotalApparentPowerPresentDemand`, `TotalRealPowerMaxDemandImport`, `TotalReactivePowerMaxDemandImport`, `TotalApparentPowerMaxDemandImport`, `TotalRealPowerMaxDemandExport`, `TotalReactivePowerMaxDemandExport`, `TotalApparentPowerMaxDemandExport`, `AccumulatedRealEnergyPhaseAImport`, `AccumulatedRealEnergyPhaseBImport`, `AccumulatedRealEnergyPhaseCImport`, `AccumulatedRealEnergyPhaseAExport`, `AccumulatedRealEnergyPhaseBExport`, `AccumulatedRealEnergyPhaseCExport`, `AccumulatedQ1ReactiveEnergyPhaseAImport`, `AccumulatedQ1ReactiveEnergyPhaseBImport`, `AccumulatedQ1ReactiveEnergyPhaseCImport`, `AccumulatedQ2ReactiveEnergyPhaseAImport`, `AccumulatedQ2ReactiveEnergyPhaseBImport`, `AccumulatedQ2ReactiveEnergyPhaseCImport`, `AccumulatedQ3ReactiveEnergyPhaseAExport`, `AccumulatedQ3ReactiveEnergyPhaseBExport`, `AccumulatedQ3ReactiveEnergyPhaseCExport`, `AccumulatedQ4ReactiveEnergyPhaseAExport`, `AccumulatedQ4ReactiveEnergyPhaseBExport`, `AccumulatedQ4ReactiveEnergyPhaseCExport`, `AccumulatedApparentEnergyPhaseAImport`, `AccumulatedApparentEnergyPhaseBImport`, `AccumulatedApparentEnergyPhaseCImport`, `AccumulatedApparentEnergyPhaseAExport`, `AccumulatedApparentEnergyPhaseBExport`, `AccumulatedApparentEnergyPhaseCExport`, `RealPowerPhaseA`, `RealPowerPhaseB`, `RealPowerPhaseC`, `ReactivePowerPhaseA`, `ReactivePowerPhaseB`, `ReactivePowerPhaseC`, `ApparentPowerPhaseA`, `ApparentPowerPhaseB`, `ApparentPowerPhaseC`, `PowerFactorPhaseA`, `PowerFactorPhaseB`, `PowerFactorPhaseC`, `VoltagePhaseAB`, `VoltagePhaseBC`, `VoltagePhaseAC`, `VoltagePhaseAN`, `VoltagePhaseBN`, `VoltagePhaseCN`, `CurrentPhaseA`, `CurrentPhaseB`, `CurrentPhaseC`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AccumulatedRealEnergyNet`, `RealEnergyQuadrants14Import`, `RealEnergyQuadrants23Export`, `ReactiveEnergyQuadrant1`, `ReactiveEnergyQuadrant2`, `ReactiveEnergyQuadrant3`, `ReactiveEnergyQuadrant4`, `ApparentEnergyNet`, `ApparentEnergyQuadrants14`, `ApparentEnergyQuadrants23`, `TotalNetInstantaneousRealPower`, `TotalNetInstantaneousReactivePower`, `TotalNetInstantaneousApparentPower`, `TotalPowerFactor`, `VoltageLL3pAve`, `VoltageLN3pAve`, `Current3pAve`, `Frequency`, `TotalRealPowerPresentDemand`, `TotalReactivePowerPresentDemand`, `TotalApparentPowerPresentDemand`, `TotalRealPowerMaxDemandImport`, `TotalReactivePowerMaxDemandImport`, `TotalApparentPowerMaxDemandImport`, `TotalRealPowerMaxDemandExport`, `TotalReactivePowerMaxDemandExport`, `TotalApparentPowerMaxDemandExport`, `AccumulatedRealEnergyPhaseAImport`, `AccumulatedRealEnergyPhaseBImport`, `AccumulatedRealEnergyPhaseCImport`, `AccumulatedRealEnergyPhaseAExport`, `AccumulatedRealEnergyPhaseBExport`, `AccumulatedRealEnergyPhaseCExport`, `AccumulatedQ1ReactiveEnergyPhaseAImport`, `AccumulatedQ1ReactiveEnergyPhaseBImport`, `AccumulatedQ1ReactiveEnergyPhaseCImport`, `AccumulatedQ2ReactiveEnergyPhaseAImport`, `AccumulatedQ2ReactiveEnergyPhaseBImport`, `AccumulatedQ2ReactiveEnergyPhaseCImport`, `AccumulatedQ3ReactiveEnergyPhaseAExport`, `AccumulatedQ3ReactiveEnergyPhaseBExport`, `AccumulatedQ3ReactiveEnergyPhaseCExport`, `AccumulatedQ4ReactiveEnergyPhaseAExport`, `AccumulatedQ4ReactiveEnergyPhaseBExport`, `AccumulatedQ4ReactiveEnergyPhaseCExport`, `AccumulatedApparentEnergyPhaseAImport`, `AccumulatedApparentEnergyPhaseBImport`, `AccumulatedApparentEnergyPhaseCImport`, `AccumulatedApparentEnergyPhaseAExport`, `AccumulatedApparentEnergyPhaseBExport`, `AccumulatedApparentEnergyPhaseCExport`, `RealPowerPhaseA`, `RealPowerPhaseB`, `RealPowerPhaseC`, `ReactivePowerPhaseA`, `ReactivePowerPhaseB`, `ReactivePowerPhaseC`, `ApparentPowerPhaseA`, `ApparentPowerPhaseB`, `ApparentPowerPhaseC`, `PowerFactorPhaseA`, `PowerFactorPhaseB`, `PowerFactorPhaseC`, `VoltagePhaseAB`, `VoltagePhaseBC`, `VoltagePhaseAC`, `VoltagePhaseAN`, `VoltagePhaseBN`, `VoltagePhaseCN`, `CurrentPhaseA`, `CurrentPhaseB`, `CurrentPhaseC`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>

	            <when test="id_device_group == 12">
	            	<!-- model_satcon_pvs357_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Software_Identification_Number`, `Fault_Word1`, `Fault_Word2`, `Fault_Word3`, `Fault_Word4`, `Fault_Word5`, `Fault_Word6`, `Fault_Word7`, `Number_of_Faults`, `Program_Checksum`, `Parameter_Checksum`, `DC_Input_Volts`, `DC_Link_Volts`, `DC_Link_Amps`, `DC_Ground_Current`, `Line_Amps_A`, `Line_Amps_B`, `Line_Amps_C`, `Line_Amps_Average`, `Neutral_Current`, `Line_Volts_A`, `Line_Volts_B`, `Line_Volts_C`, `Line_Volts_Average`, `Line_Voltage_Unbalance`, `Line_Current_Unbalance`, `Input_kW`, `Output_kw`, `Output_kvar`, `Output_kva`, `Power_Factor`, `Ground_Impedance`, `String_Amps1`, `String_Amps2`, `String_Amps3`, `String_Amps4`, `String_Amps5`, `String_Amps6`, `String_Amps7`, `String_Amps8`, `String_Amps9`, `String_Amps10`, `String_Amps11`, `String_Amps12`, `String_Amps13`, `String_Amps14`, `String_Amps15`, `String_Amps16`, `String_Amps17`, `String_Amps18`, `String_Amps19`, `String_Amps20`, `String_Amps21`, `String_Amps22`, `String_Amps23`, `String_Amps24`, `String_Amps25`, `String_Amps26`, `String_Amps27`, `String_Amps28`, `String_Amps29`, `String_Amps30`, `String_Amps31`, `String_Amps32`, `String_Amps_Average`, `String_kwh1`, `String_kwh2`, `String_kwh3`, `String_kwh4`, `String_kwh5`, `String_kwh6`, `String_kwh7`, `String_kwh8`, `String_kwh9`, `String_kwh10`, `String_kwh11`, `String_kwh12`, `String_kwh13`, `String_kwh14`, `String_kwh15`, `String_kwh16`, `String_kwh17`, `String_kwh18`, `String_kwh19`, `String_kwh20`, `String_kwh21`, `String_kwh22`, `String_kwh23`, `String_kwh24`, `String_kwh25`, `String_kwh26`, `String_kwh27`, `String_kwh28`, `String_kwh29`, `String_kwh30`, `String_kwh31`, `String_kwh32`, `String_kwh_Average`, `Total_kwh`, `Total_mwh`, `kwh_Today`, `kwh_Yesterday`, `Total_kwh7_days`, `Total_kwh30_days`, `Average_kwh7_days`, `Average_kwh30_Days`, `Average_Line_Frequency`, `Average_Line_Frequency_Error`, `FPGA_Identification_Number`, `DC_Input_Voltage_Timer`, `AC_Line_Voltage_Timer`, `Operating_State`, `Internal_Air_Temperature`, `Inverter_Air_Temperature`, `Heatsink_Temperature1`, `Heatsink_Temperature2`, `Heatsink_Temperature3`, `Heatsink_Temperature4`, `Heatsink_Temperature5`, `Heatsink_Temperature6`, `Heatsink_Maximum_Temparature1`, `Fan_Speed_Command1`, `Heatsink_Maximum_Temperature2`, `Fan_Speed_Command2`, `Number_of_Temperature_Feedbacks`, `Serial_number_word1`, `Serial_number_word2`, `Serial_number_word3`, `Serial_number_word4`, `Number_of_Strings`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Software_Identification_Number`, `Fault_Word1`, `Fault_Word2`, `Fault_Word3`, `Fault_Word4`, `Fault_Word5`, `Fault_Word6`, `Fault_Word7`, `Number_of_Faults`, `Program_Checksum`, `Parameter_Checksum`, `DC_Input_Volts`, `DC_Link_Volts`, `DC_Link_Amps`, `DC_Ground_Current`, `Line_Amps_A`, `Line_Amps_B`, `Line_Amps_C`, `Line_Amps_Average`, `Neutral_Current`, `Line_Volts_A`, `Line_Volts_B`, `Line_Volts_C`, `Line_Volts_Average`, `Line_Voltage_Unbalance`, `Line_Current_Unbalance`, `Input_kW`, `Output_kw`, `Output_kvar`, `Output_kva`, `Power_Factor`, `Ground_Impedance`, `String_Amps1`, `String_Amps2`, `String_Amps3`, `String_Amps4`, `String_Amps5`, `String_Amps6`, `String_Amps7`, `String_Amps8`, `String_Amps9`, `String_Amps10`, `String_Amps11`, `String_Amps12`, `String_Amps13`, `String_Amps14`, `String_Amps15`, `String_Amps16`, `String_Amps17`, `String_Amps18`, `String_Amps19`, `String_Amps20`, `String_Amps21`, `String_Amps22`, `String_Amps23`, `String_Amps24`, `String_Amps25`, `String_Amps26`, `String_Amps27`, `String_Amps28`, `String_Amps29`, `String_Amps30`, `String_Amps31`, `String_Amps32`, `String_Amps_Average`, `String_kwh1`, `String_kwh2`, `String_kwh3`, `String_kwh4`, `String_kwh5`, `String_kwh6`, `String_kwh7`, `String_kwh8`, `String_kwh9`, `String_kwh10`, `String_kwh11`, `String_kwh12`, `String_kwh13`, `String_kwh14`, `String_kwh15`, `String_kwh16`, `String_kwh17`, `String_kwh18`, `String_kwh19`, `String_kwh20`, `String_kwh21`, `String_kwh22`, `String_kwh23`, `String_kwh24`, `String_kwh25`, `String_kwh26`, `String_kwh27`, `String_kwh28`, `String_kwh29`, `String_kwh30`, `String_kwh31`, `String_kwh32`, `String_kwh_Average`, `Total_kwh`, `Total_mwh`, `kwh_Today`, `kwh_Yesterday`, `Total_kwh7_days`, `Total_kwh30_days`, `Average_kwh7_days`, `Average_kwh30_Days`, `Average_Line_Frequency`, `Average_Line_Frequency_Error`, `FPGA_Identification_Number`, `DC_Input_Voltage_Timer`, `AC_Line_Voltage_Timer`, `Operating_State`, `Internal_Air_Temperature`, `Inverter_Air_Temperature`, `Heatsink_Temperature1`, `Heatsink_Temperature2`, `Heatsink_Temperature3`, `Heatsink_Temperature4`, `Heatsink_Temperature5`, `Heatsink_Temperature6`, `Heatsink_Maximum_Temparature1`, `Fan_Speed_Command1`, `Heatsink_Maximum_Temperature2`, `Fan_Speed_Command2`, `Number_of_Temperature_Feedbacks`, `Serial_number_word1`, `Serial_number_word2`, `Serial_number_word3`, `Serial_number_word4`, `Number_of_Strings`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 13">
	            	<!-- model_elkor_wattson_pv_meter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TotalEnergyConsumption`, `TotalRealPower`, `TotalReactivePower`, `TotalApparentPower`, `AverageVoltageLN`, `AverageVoltageLL`, `AverageCurrent`, `TotalSystemPowerFactor`, `Frequency`, `SlidingWindowRealPowerDemand`, `VoltageAN`, `VoltageBN`, `VoltageCN`, `VoltageAB`, `VoltageBC`, `VoltageAC`, `CurrentA`, `CurrentB`, `CurrentC`, `RealPowerA`, `RealPowerB`, `RealPowerC`, `ReactivePowerA`, `ReactivePowerB`, `ReactivePowerC`, `ApparentPowerA`, `ApparentPowerB`, `ApparentPowerC`, `PowerFactorA`, `PowerFactorB`, `PowerFactorC`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TotalEnergyConsumption`, `TotalRealPower`, `TotalReactivePower`, `TotalApparentPower`, `AverageVoltageLN`, `AverageVoltageLL`, `AverageCurrent`, `TotalSystemPowerFactor`, `Frequency`, `SlidingWindowRealPowerDemand`, `VoltageAN`, `VoltageBN`, `VoltageCN`, `VoltageAB`, `VoltageBC`, `VoltageAC`, `CurrentA`, `CurrentB`, `CurrentC`, `RealPowerA`, `RealPowerB`, `RealPowerC`, `ReactivePowerA`, `ReactivePowerB`, `ReactivePowerC`, `ApparentPowerA`, `ApparentPowerB`, `ApparentPowerC`, `PowerFactorA`, `PowerFactorB`, `PowerFactorC`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 14">
	            	<!-- model_w_kipp_zonen_rt1 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `DeviceType`, `DataModelVersion`, `OperationalMode`, `StatusFlags`, `SunPOATempComp`, `PanelTemperature`, `ExtPowerSensor`, `BatchNumber`, `SerialNumber`, `CalibrationDateYYMMDD`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `DeviceType`, `DataModelVersion`, `OperationalMode`, `StatusFlags`, `SunPOATempComp`, `PanelTemperature`, `ExtPowerSensor`, `BatchNumber`, `SerialNumber`, `CalibrationDateYYMMDD`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 15">
	            	<!-- model_elkor_production_meter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `ActivePowerTotal`, `ReactivePowerTotal`, `ApparentPowerTotal`, `VoltageAverage`, `VoltageLLAverage`, `CurrentAverage`, `SystemPowerFactor`, `SystemFrequency`, `VoltageAverageAngle`, `SystemQuadrant`, `VoltageA`, `VoltageB`, `VoltageC`, `VoltageAB`, `VoltageBC`, `VoltageAC`, `CurrentA`, `CurrentB`, `CurrentC`, `ActivePowerA`, `ActivePowerB`, `ActivePowerC`, `ReactivePowerA`, `ReactivePowerB`, `ReactivePowerC`, `ApparentPowerA`, `ApparentPowerB`, `ApparentPowerC`, `PowerFactorA`, `PowerFactorB`, `PowerFactorC`, `VoltageAngleAB`, `VoltageAngleBC`, `VoltageAngleCA`, `QuadrantA`, `QuadrantB`, `QuadrantC`, `SlidingWindowPower`, `NetTotalEnergy`, `TotalNetApparentEnergy`, `TotalImportEnergy`, `TotalExportEnergy`, `TotalImportApparentEnergy`, `TotalExportApparentEnergy`, `Q1TotalReactiveEnergy`, `Q2TotalReactiveEnergy`, `Q3TotalReactiveEnergy`, `Q4TotalReactiveEnergy`, `Q1Q2TotalInductiveReactiveEnergy`, `Q3Q4TotalCapacitiveReactiveEnergy`, `NetEnergyA`, `NetEnergyB`, `NetEnergyC`, `NetApparentEnergyA`, `NetApparentEnergyB`, `NetApparentEnergyC`, `ImportEnergyA`, `ImportEnergyB`, `ImportEnergyC`, `ExportEnergyA`, `ExportEnergyB`, `ExportEnergyC`, `ImportApparentEnergyA`, `ImportApparentEnergyB`, `ImportApparentEnergyC`, `ExportApparentEnergyA`, `ExportApparentEnergyB`, `ExportApparentEnergyC`, `Q1ReactiveEnergyA`, `Q1ReactiveEnergyB`, `Q1ReactiveEnergyC`, `Q2ReactiveEnergyA`, `Q2ReactiveEnergyB`, `Q2ReactiveEnergyC`, `Q3ReactiveEnergyA`, `Q3ReactiveEnergyB`, `Q3ReactiveEnergyC`, `Q4ReactiveEnergyA`, `Q4ReactiveEnergyB`, `Q4ReactiveEnergyC`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `ActivePowerTotal`, `ReactivePowerTotal`, `ApparentPowerTotal`, `VoltageAverage`, `VoltageLLAverage`, `CurrentAverage`, `SystemPowerFactor`, `SystemFrequency`, `VoltageAverageAngle`, `SystemQuadrant`, `VoltageA`, `VoltageB`, `VoltageC`, `VoltageAB`, `VoltageBC`, `VoltageAC`, `CurrentA`, `CurrentB`, `CurrentC`, `ActivePowerA`, `ActivePowerB`, `ActivePowerC`, `ReactivePowerA`, `ReactivePowerB`, `ReactivePowerC`, `ApparentPowerA`, `ApparentPowerB`, `ApparentPowerC`, `PowerFactorA`, `PowerFactorB`, `PowerFactorC`, `VoltageAngleAB`, `VoltageAngleBC`, `VoltageAngleCA`, `QuadrantA`, `QuadrantB`, `QuadrantC`, `SlidingWindowPower`, `NetTotalEnergy`, `TotalNetApparentEnergy`, `TotalImportEnergy`, `TotalExportEnergy`, `TotalImportApparentEnergy`, `TotalExportApparentEnergy`, `Q1TotalReactiveEnergy`, `Q2TotalReactiveEnergy`, `Q3TotalReactiveEnergy`, `Q4TotalReactiveEnergy`, `Q1Q2TotalInductiveReactiveEnergy`, `Q3Q4TotalCapacitiveReactiveEnergy`, `NetEnergyA`, `NetEnergyB`, `NetEnergyC`, `NetApparentEnergyA`, `NetApparentEnergyB`, `NetApparentEnergyC`, `ImportEnergyA`, `ImportEnergyB`, `ImportEnergyC`, `ExportEnergyA`, `ExportEnergyB`, `ExportEnergyC`, `ImportApparentEnergyA`, `ImportApparentEnergyB`, `ImportApparentEnergyC`, `ExportApparentEnergyA`, `ExportApparentEnergyB`, `ExportApparentEnergyC`, `Q1ReactiveEnergyA`, `Q1ReactiveEnergyB`, `Q1ReactiveEnergyC`, `Q2ReactiveEnergyA`, `Q2ReactiveEnergyB`, `Q2ReactiveEnergyC`, `Q3ReactiveEnergyA`, `Q3ReactiveEnergyB`, `Q3ReactiveEnergyC`, `Q4ReactiveEnergyA`, `Q4ReactiveEnergyB`, `Q4ReactiveEnergyC`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            
	            <when test="id_device_group == 17">
	            	<!-- model_abb_trio_class6210 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AuroraType`, `GridType`, `TransformerType`, `StatesByte0`, `StatesByte1`, `StatesByte2`, `StatesByte3`, `StatesByte4`, `TotalEnergy`, `GridVoltage`, `GridCurrent`, `GridPower`, `Frequency`, `Input1Power`, `Input1Voltage`, `Input1Current`, `Input2Power`, `Input2Voltage`, `Input2Current`, `InverterTemperature`, `BooseterTemperature`, `IslolationResistance`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AuroraType`, `GridType`, `TransformerType`, `StatesByte0`, `StatesByte1`, `StatesByte2`, `StatesByte3`, `StatesByte4`, `TotalEnergy`, `GridVoltage`, `GridCurrent`, `GridPower`, `Frequency`, `Input1Power`, `Input1Voltage`, `Input1Current`, `Input2Power`, `Input2Voltage`, `Input2Current`, `InverterTemperature`, `BooseterTemperature`, `IslolationResistance`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 18">
	            	<!-- model_lufft_class8020 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `RelativeHumidityActual`, `RelativeHumidityMin`, `RelativeHumidityMax`, `RelativeHumidityAvg`, `RelativeAirPressureActual`, `RelativeAirPressureMin`, `RelativeAirPressureMax`, `RelativeAirPressureAvg`, `WindDirectionActual`, `WindDirectionMin`, `WindDirectionMax`, `WindDirectionVct`, `WindDirectionFast`, `WindDirectionCompassCorrected`, `Compass`, `PrecipitationType`, `WindMeasurementQuality`, `IrradianceActual`, `IrradianceMin`, `IrradianceMax`, `IrradianceAvg`, `AirTemperatureActual`, `AirTemperatureMin`, `AirTemperatureMax`, `AirTemperatureAvg`, `DewPointActual`, `DewPointMin`, `DewPointMax`, `DewPointAvg`, `WindChillTemperature`, `HeatingTemperatureWind`, `HeatingTemperatureR2S`, `WindSpeedActual`, `WindSpeedMin`, `WindSpeedMax`, `WindSpeedAvg`, `WindSpeedVct`, `WindSpeedFast`, `PrecipitationQuantityAbsolute`, `PrecipitationQuantityDifferential`, `PrecipitationIntensity`, `AbsoluteHumidityActual`, `AbsoluteHumidityMin`, `AbsoluteHumidityMax`, `AbsoluteHumidityAvg`, `MixingRatioActual`, `MixingRatioMin`, `MixingRatioMax`, `MixingRatioAvg`, `AbsoluteAirPressureActual`, `AbsoluteAirPressureMin`, `AbsoluteAirPressureMax`, `AbsoluteAirPressureAvg`, `WindSpeedStandardDeviation`, `WindDirectionStandardDeviation`, `WetBulbTemperature`, `SpecificEnthalpy`, `AirDensityActual`, `LeafWetnessActual`, `LeafWetnessMin`, `LeafWetnessMax`, `LeafWetnessAvg`, `LeafWetnessState`, `ExternalTemperature`, `WindValueQualityFast`, `nvm_irradiance`, `nvm_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `RelativeHumidityActual`, `RelativeHumidityMin`, `RelativeHumidityMax`, `RelativeHumidityAvg`, `RelativeAirPressureActual`, `RelativeAirPressureMin`, `RelativeAirPressureMax`, `RelativeAirPressureAvg`, `WindDirectionActual`, `WindDirectionMin`, `WindDirectionMax`, `WindDirectionVct`, `WindDirectionFast`, `WindDirectionCompassCorrected`, `Compass`, `PrecipitationType`, `WindMeasurementQuality`, `IrradianceActual`, `IrradianceMin`, `IrradianceMax`, `IrradianceAvg`, `AirTemperatureActual`, `AirTemperatureMin`, `AirTemperatureMax`, `AirTemperatureAvg`, `DewPointActual`, `DewPointMin`, `DewPointMax`, `DewPointAvg`, `WindChillTemperature`, `HeatingTemperatureWind`, `HeatingTemperatureR2S`, `WindSpeedActual`, `WindSpeedMin`, `WindSpeedMax`, `WindSpeedAvg`, `WindSpeedVct`, `WindSpeedFast`, `PrecipitationQuantityAbsolute`, `PrecipitationQuantityDifferential`, `PrecipitationIntensity`, `AbsoluteHumidityActual`, `AbsoluteHumidityMin`, `AbsoluteHumidityMax`, `AbsoluteHumidityAvg`, `MixingRatioActual`, `MixingRatioMin`, `MixingRatioMax`, `MixingRatioAvg`, `AbsoluteAirPressureActual`, `AbsoluteAirPressureMin`, `AbsoluteAirPressureMax`, `AbsoluteAirPressureAvg`, `WindSpeedStandardDeviation`, `WindDirectionStandardDeviation`, `WetBulbTemperature`, `SpecificEnthalpy`, `AirDensityActual`, `LeafWetnessActual`, `LeafWetnessMin`, `LeafWetnessMax`, `LeafWetnessAvg`, `LeafWetnessState`, `ExternalTemperature`, `WindValueQualityFast`, `nvm_irradiance`, `nvm_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 19">
	            	<!-- model_datalogger -->
		           INSERT IGNORE INTO ${newtablename}(
					`id_device`, `time`, `serialnumber`, `loopname`, `modbusip`, `modbusport`, `modbusdevice`, `modbusdevicename`, `modbusdevicetype`, `modbusdevicetypenumber`, `modbusdeviceclass`, `MemTotal`, `MemFree`, `ipaddr`, `dns1`, `dns2`, `gateway`, `netmask`, `network`
					)
					SELECT 
					   `id_device`, `time`, `serialnumber`, `loopname`, `modbusip`, `modbusport`, `modbusdevice`, `modbusdevicename`, `modbusdevicetype`, `modbusdevicetypenumber`, `modbusdeviceclass`, `MemTotal`, `MemFree`, `ipaddr`, `dns1`, `dns2`, `gateway`, `netmask`, `network`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 20">
	            	<!-- model_pv_powered_35_50_260_500kw_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `InverterIDASCIICHAR0001`, `InverterIDASCIICHAR0203`, `InverterIDASCIICHAR0405`, `InverterIDASCIICHAR0607`, `InverterIDASCIICHAR0809`, `InverterIDASCIICHAR1011`, `InverterIDASCIICHAR1213`, `InverterIDASCIICHAR1415`, `FirmwareVersionASCIICHAR0001`, `FirmwareVersionASCIICHAR0203`, `FirmwareVersionASCIICHAR0405`, `FirmwareVersionASCIICHAR0607`, `MapVersion`, `InverterConfiguration`, `InverterSerialASCIICHAR0001`, `InverterSerialASCIICHAR0203`, `InverterSerialASCIICHAR0405`, `InverterSerialASCIICHAR0607`, `InverterSerialASCIICHAR0809`, `InverterSerialASCIICHAR1011`, `InverterSerialASCIICHAR1213`, `InverterSerialASCIICHAR1415`, `InverterSerialASCIICHAR1617`, `InverterSerialASCIICHAR1819`, `VoltageAN`, `VoltageBN`, `VoltageCN`, `CurrentA`, `CurrentB`, `CurrentC`, `DCInputVoltage`, `DCInputCurrent`, `LineFrequency`, `OutputGeneration`, `TotalEnergyGeneration`, `PVInputVoltage`, `InputGenerationCalculated`, `InverterOperatingStatus`, `MainFault`, `DriveFault`, `VoltageFault`, `GridFault`, `TemperatureFault`, `SystemFault`, `SystemWarnings`, `PVMStatusCodes`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `InverterIDASCIICHAR0001`, `InverterIDASCIICHAR0203`, `InverterIDASCIICHAR0405`, `InverterIDASCIICHAR0607`, `InverterIDASCIICHAR0809`, `InverterIDASCIICHAR1011`, `InverterIDASCIICHAR1213`, `InverterIDASCIICHAR1415`, `FirmwareVersionASCIICHAR0001`, `FirmwareVersionASCIICHAR0203`, `FirmwareVersionASCIICHAR0405`, `FirmwareVersionASCIICHAR0607`, `MapVersion`, `InverterConfiguration`, `InverterSerialASCIICHAR0001`, `InverterSerialASCIICHAR0203`, `InverterSerialASCIICHAR0405`, `InverterSerialASCIICHAR0607`, `InverterSerialASCIICHAR0809`, `InverterSerialASCIICHAR1011`, `InverterSerialASCIICHAR1213`, `InverterSerialASCIICHAR1415`, `InverterSerialASCIICHAR1617`, `InverterSerialASCIICHAR1819`, `VoltageAN`, `VoltageBN`, `VoltageCN`, `CurrentA`, `CurrentB`, `CurrentC`, `DCInputVoltage`, `DCInputCurrent`, `LineFrequency`, `OutputGeneration`, `TotalEnergyGeneration`, `PVInputVoltage`, `InputGenerationCalculated`, `InverterOperatingStatus`, `MainFault`, `DriveFault`, `VoltageFault`, `GridFault`, `TemperatureFault`, `SystemFault`, `SystemWarnings`, `PVMStatusCodes`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>     
	            <when test="id_device_group == 21">
	            	<!-- model_solectria_sgi_226ivt -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `DCVoltage`, `ACPowerOutput`, `ACGridFrequency`, `ACPowerStageCurrent`, `L1toL2ACVoltage`, `L2toL3ACVoltage`, `L1toL3ACVoltage`, `PhaseSequence`, `CumulativeACEnergy`, `CumulativeOngridHours`, `FanOntimeHours`, `ACContactorCycles`, `SlaveID`, `CriticalAlarms`, `InformativeAlarms`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `DCVoltage`, `ACPowerOutput`, `ACGridFrequency`, `ACPowerStageCurrent`, `L1toL2ACVoltage`, `L2toL3ACVoltage`, `L1toL3ACVoltage`, `PhaseSequence`, `CumulativeACEnergy`, `CumulativeOngridHours`, `FanOntimeHours`, `ACContactorCycles`, `SlaveID`, `CriticalAlarms`, `InformativeAlarms`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 22">
	            	<!-- model_tti_tracker -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Mode`, `SubMode`, `MotorStatus`, `ReadAngle`, `SetAngle`, `OptimalAngle`, `WindSpeed`, `TTiTime`, `MotorFault`, `RemoteInterfaceFault`, `InclinometerFault`, `ModbusAddress`, `FirmwareVersion`, `Units`, `InclinometerOffset`, `MotorStopDelay`, `CoastAngle`, `MaxRotationWest`, `MaxRotationEast`, `SoftAngleLimitsEnabled`, `MotorMonitorSampleTime`, `MotorMonitorMinAngle`, `EnableMotorMonitor`, `DeadBand`, `NightTimeStowAltitude`, `NightTimeStowAngle`, `PoleSpacing`, `ModuleWidth`, `MotorPolarity`, `InclinometerPolarity`, `Latitude`, `Longitude`, `LoggingInterval`, `HelicalVarationAngle`, `DriveArmSlope`, `WindConstant`, `WindStowSpeed`, `WindStowTime`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Mode`, `SubMode`, `MotorStatus`, `ReadAngle`, `SetAngle`, `OptimalAngle`, `WindSpeed`, `TTiTime`, `MotorFault`, `RemoteInterfaceFault`, `InclinometerFault`, `ModbusAddress`, `FirmwareVersion`, `Units`, `InclinometerOffset`, `MotorStopDelay`, `CoastAngle`, `MaxRotationWest`, `MaxRotationEast`, `SoftAngleLimitsEnabled`, `MotorMonitorSampleTime`, `MotorMonitorMinAngle`, `EnableMotorMonitor`, `DeadBand`, `NightTimeStowAltitude`, `NightTimeStowAngle`, `PoleSpacing`, `ModuleWidth`, `MotorPolarity`, `InclinometerPolarity`, `Latitude`, `Longitude`, `LoggingInterval`, `HelicalVarationAngle`, `DriveArmSlope`, `WindConstant`, `WindStowSpeed`, `WindStowTime`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 23">
	            	<!-- model_xantrex_gt100_250_500 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VAB`, `VBC`, `VCA`, `CurrentA`, `CurrentB`, `CurrentC`, `ReadPower`, `PVVoltage`, `PVCurrent`, `PVPower`, `GridFrequency`, `SystemState`, `GoalState`, `FaultCode`, `AccumulatedEnergy`, `RMatrixTemp`, `LMatrixTemp`, `IntakeAirTemperature`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VAB`, `VBC`, `VCA`, `CurrentA`, `CurrentB`, `CurrentC`, `ReadPower`, `PVVoltage`, `PVCurrent`, `PVPower`, `GridFrequency`, `SystemState`, `GoalState`, `FaultCode`, `AccumulatedEnergy`, `RMatrixTemp`, `LMatrixTemp`, `IntakeAirTemperature`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 24">
	            	<!-- model_imtsolar_tmodul_class8006 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `ModuleTemperature`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `ModuleTemperature`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 25">
	            	<!-- model_hukseflux_sr30d1_deviceclass_v0 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `IrradianceTcs`, `IrradianceUs`, `SensorBodyTemperature`, `SensorElectricalResistance`, `ScalingFactorIrradiance`, `ScalingFactorTemperature`, `SensorSerialNumber`, `SensorSensitivity`, `SensorCalibrationDate`, `InternalHumidity`, `TiltAngle`, `TiltAngleaverage`, `FanSpeedRPM`, `HeaterCurrent`, `FanCurrent`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `IrradianceTcs`, `IrradianceUs`, `SensorBodyTemperature`, `SensorElectricalResistance`, `ScalingFactorIrradiance`, `ScalingFactorTemperature`, `SensorSerialNumber`, `SensorSensitivity`, `SensorCalibrationDate`, `InternalHumidity`, `TiltAngle`, `TiltAngleaverage`, `FanSpeedRPM`, `HeaterCurrent`, `FanCurrent`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 27">
	            	<!-- model_sungrow_sg110cx -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `E_DAY`, `E_TOTAL`, `E_YEAR`, `OT_AC_TOTAL`, `T_WR`, `U_DC1`, `I_DC1`, `U_DC2`, `I_DC2`, `U_DC3`, `I_DC3`, `U_DC4`, `I_DC4`, `U_DC5`, `I_DC5`, `U_DC6`, `I_DC6`, `U_DC7`, `I_DC7`, `U_DC8`, `I_DC8`, `U_DC9`, `I_DC9`, `U_STR1`, `I_STR1`, `U_STR2`, `I_STR2`, `U_STR3`, `I_STR3`, `U_STR4`, `I_STR4`, `U_STR5`, `I_STR5`, `U_STR6`, `I_STR6`, `U_STR7`, `I_STR7`, `U_STR8`, `I_STR8`, `U_STR9`, `I_STR9`, `U_STR10`, `I_STR10`, `U_STR11`, `I_STR11`, `U_STR12`, `I_STR12`, `U_STR13`, `I_STR13`, `U_STR14`, `I_STR14`, `U_STR15`, `I_STR15`, `U_STR16`, `I_STR16`, `U_STR17`, `I_STR17`, `U_STR18`, `I_STR18`, `P_DC`, `U_AC1`, `U_AC2`, `U_AC3`, `I_AC1`, `I_AC2`, `I_AC3`, `S_AC`, `P_AC`, `Q_AC`, `COS_PHI`, `F_AC`, `FT_AC_DAY`, `R_ISO`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `E_DAY`, `E_TOTAL`, `E_YEAR`, `OT_AC_TOTAL`, `T_WR`, `U_DC1`, `I_DC1`, `U_DC2`, `I_DC2`, `U_DC3`, `I_DC3`, `U_DC4`, `I_DC4`, `U_DC5`, `I_DC5`, `U_DC6`, `I_DC6`, `U_DC7`, `I_DC7`, `U_DC8`, `I_DC8`, `U_DC9`, `I_DC9`, `U_STR1`, `I_STR1`, `U_STR2`, `I_STR2`, `U_STR3`, `I_STR3`, `U_STR4`, `I_STR4`, `U_STR5`, `I_STR5`, `U_STR6`, `I_STR6`, `U_STR7`, `I_STR7`, `U_STR8`, `I_STR8`, `U_STR9`, `I_STR9`, `U_STR10`, `I_STR10`, `U_STR11`, `I_STR11`, `U_STR12`, `I_STR12`, `U_STR13`, `I_STR13`, `U_STR14`, `I_STR14`, `U_STR15`, `I_STR15`, `U_STR16`, `I_STR16`, `U_STR17`, `I_STR17`, `U_STR18`, `I_STR18`, `P_DC`, `U_AC1`, `U_AC2`, `U_AC3`, `I_AC1`, `I_AC2`, `I_AC3`, `S_AC`, `P_AC`, `Q_AC`, `COS_PHI`, `F_AC`, `FT_AC_DAY`, `R_ISO`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 28">
	            	<!-- model_sungrow_umg604 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `M_AC_U1`, `M_AC_U2`, `M_AC_U3`, `M_AC_U_L1L2`, `M_AC_U_L2L3`, `M_AC_U_L3L1`, `M_AC_I1`, `M_AC_I2`, `M_AC_I3`, `M_AC_P1`, `M_AC_P2`, `M_AC_P3`, `M_AC_P`, `M_AC_E_M1`, `M_AC_Q1`, `M_AC_Q2`, `M_AC_Q3`, `M_AC_Q`, `M_AC_S1`, `M_AC_S2`, `M_AC_S3`, `M_AC_S`, `M_AC_PF`, `M_AC_F`, `M_AC_E_EXP`, `M_AC_E_IMP`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `M_AC_U1`, `M_AC_U2`, `M_AC_U3`, `M_AC_U_L1L2`, `M_AC_U_L2L3`, `M_AC_U_L3L1`, `M_AC_I1`, `M_AC_I2`, `M_AC_I3`, `M_AC_P1`, `M_AC_P2`, `M_AC_P3`, `M_AC_P`, `M_AC_E_M1`, `M_AC_Q1`, `M_AC_Q2`, `M_AC_Q3`, `M_AC_Q`, `M_AC_S1`, `M_AC_S2`, `M_AC_S3`, `M_AC_S`, `M_AC_PF`, `M_AC_F`, `M_AC_E_EXP`, `M_AC_E_IMP`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 29">
	            	<!-- model_sungrow_sg50cx -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `E_DAY`, `E_TOTAL`, `E_YEAR`, `OT_AC_TOTAL`, `T_WR`, `U_DC1`, `I_DC1`, `U_DC2`, `I_DC2`, `U_DC3`, `I_DC3`, `U_DC4`, `I_DC4`, `U_DC5`, `I_DC5`, `U_DC6`, `I_DC6`, `U_DC7`, `I_DC7`, `U_DC8`, `I_DC8`, `U_DC9`, `I_DC9`, `U_DC10`, `I_DC10`, `U_DC11`, `I_DC11`, `U_DC12`, `I_DC12`, `U_DC13`, `I_DC13`, `U_DC14`, `I_DC14`, `U_DC15`, `I_DC15`, `U_DC16`, `I_DC16`, `U_DC17`, `I_DC17`, `U_DC18`, `I_DC18`, `U_DC19`, `I_DC19`, `U_DC20`, `I_DC20`, `U_STR1`, `I_STR1`, `U_STR2`, `I_STR2`, `U_STR3`, `I_STR3`, `U_STR4`, `I_STR4`, `U_STR5`, `I_STR5`, `U_STR6`, `I_STR6`, `U_STR7`, `I_STR7`, `U_STR8`, `I_STR8`, `U_STR9`, `I_STR9`, `U_STR10`, `I_STR10`, `I_STR11`, `I_STR12`, `I_STR13`, `I_STR14`, `I_STR15`, `I_STR16`, `I_STR17`, `I_STR18`, `I_STR19`, `I_STR20`, `I_STR21`, `I_STR22`, `P_DC`, `U_AC1`, `U_AC2`, `U_AC3`, `I_AC1`, `I_AC2`, `I_AC3`, `S_AC`, `P_AC`, `Q_AC`, `COS_PHI`, `F_AC`, `FT_AC_DAY`, `R_ISO`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `E_DAY`, `E_TOTAL`, `E_YEAR`, `OT_AC_TOTAL`, `T_WR`, `U_DC1`, `I_DC1`, `U_DC2`, `I_DC2`, `U_DC3`, `I_DC3`, `U_DC4`, `I_DC4`, `U_DC5`, `I_DC5`, `U_DC6`, `I_DC6`, `U_DC7`, `I_DC7`, `U_DC8`, `I_DC8`, `U_DC9`, `I_DC9`, `U_DC10`, `I_DC10`, `U_DC11`, `I_DC11`, `U_DC12`, `I_DC12`, `U_DC13`, `I_DC13`, `U_DC14`, `I_DC14`, `U_DC15`, `I_DC15`, `U_DC16`, `I_DC16`, `U_DC17`, `I_DC17`, `U_DC18`, `I_DC18`, `U_DC19`, `I_DC19`, `U_DC20`, `I_DC20`, `U_STR1`, `I_STR1`, `U_STR2`, `I_STR2`, `U_STR3`, `I_STR3`, `U_STR4`, `I_STR4`, `U_STR5`, `I_STR5`, `U_STR6`, `I_STR6`, `U_STR7`, `I_STR7`, `U_STR8`, `I_STR8`, `U_STR9`, `I_STR9`, `U_STR10`, `I_STR10`, `I_STR11`, `I_STR12`, `I_STR13`, `I_STR14`, `I_STR15`, `I_STR16`, `I_STR17`, `I_STR18`, `I_STR19`, `I_STR20`, `I_STR21`, `I_STR22`, `P_DC`, `U_AC1`, `U_AC2`, `U_AC3`, `I_AC1`, `I_AC2`, `I_AC3`, `S_AC`, `P_AC`, `Q_AC`, `COS_PHI`, `F_AC`, `FT_AC_DAY`, `R_ISO`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 30">
	            	<!-- model_sungrow_weather_pvmet75200 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `SRAD_D_H`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `SRAD_D_H`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 31">
	            	<!-- model_sma_inverter_stp24ktlus10 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Metering_TotWhOut`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Metering_TotFeedTms`, `Metering_GridMs_TotWhOut`, `GridMs_TotW`, `GridMs_Hz`, `Isolation_FltA`, `Isolation_LeakRis`, `DcMs_VolA`, `DcMs_VolB`, `DcMs_AmpA`, `DcMs_AmpB`, `DcMs_AmpA1`, `GridMs_PhV_phsA`, `GridMs_PhV_phsB`, `GridMs_PhV_phsC`, `GridMs_A_phsA`, `GridMs_A_phsB`, `GridMs_A_phsC`, `DcMs_WattA`, `DcMs_WattB`, `Operation_Health`, `Operation_Evt_Prio`, `Operation_Evt_Msg`, `Operation_Evt_Dsc`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Metering_TotWhOut`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Metering_TotFeedTms`, `Metering_GridMs_TotWhOut`, `GridMs_TotW`, `GridMs_Hz`, `Isolation_FltA`, `Isolation_LeakRis`, `DcMs_VolA`, `DcMs_VolB`, `DcMs_AmpA`, `DcMs_AmpB`, `DcMs_AmpA1`, `GridMs_PhV_phsA`, `GridMs_PhV_phsB`, `GridMs_PhV_phsC`, `GridMs_A_phsA`, `GridMs_A_phsB`, `GridMs_A_phsC`, `DcMs_WattA`, `DcMs_WattB`, `Operation_Health`, `Operation_Evt_Prio`, `Operation_Evt_Msg`, `Operation_Evt_Dsc`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 32">
	            	<!-- model_sma_inverter_stp1200tlus10 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Metering_TotWhOut`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Metering_TotFeedTms`, `Metering_GridMs_TotWhOut`, `GridMs_TotW`, `GridMs_Hz`, `Isolation_FltA`, `Isolation_LeakRis`, `DcMs_VolA`, `DcMs_VolB`, `DcMs_AmpA`, `DcMs_AmpB`, `GridMs_PhV_phsA`, `GridMs_PhV_phsB`, `GridMs_PhV_phsC`, `GridMs_A_phsA`, `GridMs_A_phsB`, `GridMs_A_phsC`, `DcMs_WattA`, `DcMs_WattB`, `Operation_Health`, `Operation_Evt_Prio`, `Operation_Evt_Msg`, `Operation_Evt_Dsc`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Metering_TotWhOut`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Metering_TotFeedTms`, `Metering_GridMs_TotWhOut`, `GridMs_TotW`, `GridMs_Hz`, `Isolation_FltA`, `Isolation_LeakRis`, `DcMs_VolA`, `DcMs_VolB`, `DcMs_AmpA`, `DcMs_AmpB`, `GridMs_PhV_phsA`, `GridMs_PhV_phsB`, `GridMs_PhV_phsC`, `GridMs_A_phsA`, `GridMs_A_phsB`, `GridMs_A_phsC`, `DcMs_WattA`, `DcMs_WattB`, `Operation_Health`, `Operation_Evt_Prio`, `Operation_Evt_Msg`, `Operation_Evt_Dsc`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 33">
	            	<!-- model_sma_cluster_controller -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Metering_TotWhOut`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Metering_TotFeedTms`, `GridMs_TotW`, `GridMs_Hz`, `Isolation_FltA`, `Isolation_LeakRis`, `DcMs_VolA`, `DcMs_VolB`, `DcMs_AmpA`, `DcMs_AmpB`, `GridMs_PhV_phsA`, `GridMs_PhV_phsB`, `GridMs_PhV_phsC`, `GridMs_A_phsA`, `GridMs_A_phsB`, `GridMs_A_phsC`, `DcMs_WattA`, `DcMs_WattB`, `Operation_Health`, `Operation_Evt_Prio`, `Operation_Evt_Msg`, `Operation_Evt_Dsc`, `InOut_AnInA1`, `InOut_AnInA2`, `InOut_AnInA3`, `InOut_AnInVol4`, `Env_ExInsol`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Metering_TotWhOut`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Metering_TotFeedTms`, `GridMs_TotW`, `GridMs_Hz`, `Isolation_FltA`, `Isolation_LeakRis`, `DcMs_VolA`, `DcMs_VolB`, `DcMs_AmpA`, `DcMs_AmpB`, `GridMs_PhV_phsA`, `GridMs_PhV_phsB`, `GridMs_PhV_phsC`, `GridMs_A_phsA`, `GridMs_A_phsB`, `GridMs_A_phsC`, `DcMs_WattA`, `DcMs_WattB`, `Operation_Health`, `Operation_Evt_Prio`, `Operation_Evt_Msg`, `Operation_Evt_Dsc`, `InOut_AnInA1`, `InOut_AnInA2`, `InOut_AnInA3`, `InOut_AnInVol4`, `Env_ExInsol`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 34">
	            	<!-- model_solaredge_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `C_DeviceAddress`, `C_SunSpec_DID`, `C_SunSpec_Length`, `I_AC_Current`, `I_AC_CurrentA`, `I_AC_CurrentB`, `I_AC_CurrentC`, `I_AC_Current_SF`, `I_AC_VoltageAB`, `I_AC_VoltageBC`, `I_AC_VoltageCA`, `I_AC_VoltageAN`, `I_AC_VoltageBN`, `I_AC_VoltageCN`, `I_AC_Voltage_SF`, `I_AC_Power`, `I_AC_Power_SF`, `I_AC_Frequency`, `I_AC_Frequency_SF`, `I_AC_VA`, `I_AC_VA_SF`, `I_AC_VAR`, `I_AC_VAR_SF`, `I_AC_PF`, `I_AC_PF_SF`, `I_AC_Energy_WH`, `I_AC_Energy_WH_SF`, `I_DC_Current`, `I_DC_Current_SF`, `I_DC_Voltage`, `I_DC_Voltage_SF`, `I_DC_Power`, `I_DC_Power_SF`, `I_Temp_Sink`, `I_Temp_SF`, `I_Status`, `I_Status_Vendor`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `C_DeviceAddress`, `C_SunSpec_DID`, `C_SunSpec_Length`, `I_AC_Current`, `I_AC_CurrentA`, `I_AC_CurrentB`, `I_AC_CurrentC`, `I_AC_Current_SF`, `I_AC_VoltageAB`, `I_AC_VoltageBC`, `I_AC_VoltageCA`, `I_AC_VoltageAN`, `I_AC_VoltageBN`, `I_AC_VoltageCN`, `I_AC_Voltage_SF`, `I_AC_Power`, `I_AC_Power_SF`, `I_AC_Frequency`, `I_AC_Frequency_SF`, `I_AC_VA`, `I_AC_VA_SF`, `I_AC_VAR`, `I_AC_VAR_SF`, `I_AC_PF`, `I_AC_PF_SF`, `I_AC_Energy_WH`, `I_AC_Energy_WH_SF`, `I_DC_Current`, `I_DC_Current_SF`, `I_DC_Voltage`, `I_DC_Voltage_SF`, `I_DC_Power`, `I_DC_Power_SF`, `I_Temp_Sink`, `I_Temp_SF`, `I_Status`, `I_Status_Vendor`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 35">
	            	<!-- model_campell_scientific_meter1 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter1_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter1_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 36">
	            	<!-- model_adam4017ws_class8110_nelis190 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AmbientTemp`, `PVPanelTemp`, `PVPanelTemp1`, `WindSpeed`, `POACMP11`, `IrradiancePOA`, `IMTInternalTemp`, `PVPanelTemp2`, `code_ch0`, `code_ch1`, `code_ch2`, `code_ch3`, `code_ch4`, `code_ch5`, `code_ch6`, `code_ch7`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AmbientTemp`, `PVPanelTemp`, `PVPanelTemp1`, `WindSpeed`, `POACMP11`, `IrradiancePOA`, `IMTInternalTemp`, `PVPanelTemp2`, `code_ch0`, `code_ch1`, `code_ch2`, `code_ch3`, `code_ch4`, `code_ch5`, `code_ch6`, `code_ch7`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 37">
	            	<!-- model_campell_scientific_meter2 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter2_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter2_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 38">
				<!-- model_campell_scientific_meter3 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter3_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter3_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            	
	            </when>
	            <when test="id_device_group == 39">
	            	<!-- model_campell_scientific_meter4 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter4_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Meter4_ACPower`, `Total_Energy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 40">
	            	<!-- model_cell_modem -->
		           INSERT IGNORE INTO ${newtablename}(
					`id_device`, `time`, `SerialNumber`, `ConnectionName`, `ConnectionStatus`, `ConnectionType`, `ConnectionMethod`, `IPAddress`, `DefaultGateway`, `DNSServers`, `MTU`, `IMEI`, `IMSI`, `ICCID`, `SIMSLOT`, `RSSI4`, `SINR4`, `RSRP4`, `RSRQ4`, `Channel4`, `RSSI3`, `SINR3`, `RSRP3`, `RSRQ3`, `Channel3`, `CPULoad`, `ALLDownload`, `ALLUpload`, `ALLTotal`, `CellularDownload`, `CellularUpload`, `CellularTotal`, `DeviceName`, `ProductModel`, `HardwareRevision`, `FirmwareVersion`, `Uptime`, `Mode`, `SystemMode`, `Temperature`, `SlotA`, `SlotB`
					)
					SELECT 
					   `id_device`, `time`, `SerialNumber`, `ConnectionName`, `ConnectionStatus`, `ConnectionType`, `ConnectionMethod`, `IPAddress`, `DefaultGateway`, `DNSServers`, `MTU`, `IMEI`, `IMSI`, `ICCID`, `SIMSLOT`, `RSSI4`, `SINR4`, `RSRP4`, `RSRQ4`, `Channel4`, `RSSI3`, `SINR3`, `RSRP3`, `RSRQ3`, `Channel3`, `CPULoad`, `ALLDownload`, `ALLUpload`, `ALLTotal`, `CellularDownload`, `CellularUpload`, `CellularTotal`, `DeviceName`, `ProductModel`, `HardwareRevision`, `FirmwareVersion`, `Uptime`, `Mode`, `SystemMode`, `Temperature`, `SlotA`, `SlotB`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>    
	            <when test="id_device_group == 41">
	            	<!-- model_satcon_powergate_225_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Fault1`, `Fault2`, `Fault3`, `Fault4`, `GridStatus`, `Status6`, `Status7`, `PCSState`, `DCInputPower`, `DC_Link_Volts`, `DCInputVoltage`, `DCInputCurrent`, `OutputKVAR`, `OutputKW`, `OutputKVA`, `Line_Volts_A_TEST`, `Line_Volts_B_TEST`, `Line_Volts_C_TEST`, `Line_Amps_A_TEST`, `Line_Amps_B_TEST`, `Line_Amps_C_TEST`, `NeutralCurrent`, `StopCode`, `KWHlow`, `KWH`, `PowerFactor`, `LineFreq`, `OutputPowerLimit`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Fault1`, `Fault2`, `Fault3`, `Fault4`, `GridStatus`, `Status6`, `Status7`, `PCSState`, `DCInputPower`, `DC_Link_Volts`, `DCInputVoltage`, `DCInputCurrent`, `OutputKVAR`, `OutputKW`, `OutputKVA`, `Line_Volts_A_TEST`, `Line_Volts_B_TEST`, `Line_Volts_C_TEST`, `Line_Amps_A_TEST`, `Line_Amps_B_TEST`, `Line_Amps_C_TEST`, `NeutralCurrent`, `StopCode`, `KWHlow`, `KWH`, `PowerFactor`, `LineFreq`, `OutputPowerLimit`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 42">
	            	<!-- model_sunny_central_class9775_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Fault`, `OperatingState`, `Status`, `EventNumber`, `LifekWhTotal`, `PVCurrent`, `PVVoltage`, `PVPower`, `ACPower`, `ACVoltageAB`, `ACVoltageBC`, `ACVoltageCA`, `ACCurrent`, `ACCurrentL1`, `ACCurrentL2`, `ACCurrentL3`, `ACFrequency`, `ReactivePower`, `ApparentPower`, `PowerFactor`, `ReactivePowerMode`, `PowerFactorFeedback`, `OperatingMode`, `ACPowerLimit`, `ACVoltage`, `HeatSinkTemp`, `InteriorTemperature`, `ExternalTemperature`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Fault`, `OperatingState`, `Status`, `EventNumber`, `LifekWhTotal`, `PVCurrent`, `PVVoltage`, `PVPower`, `ACPower`, `ACVoltageAB`, `ACVoltageBC`, `ACVoltageCA`, `ACCurrent`, `ACCurrentL1`, `ACCurrentL2`, `ACCurrentL3`, `ACFrequency`, `ReactivePower`, `ApparentPower`, `PowerFactor`, `ReactivePowerMode`, `PowerFactorFeedback`, `OperatingMode`, `ACPowerLimit`, `ACVoltage`, `HeatSinkTemp`, `InteriorTemperature`, `ExternalTemperature`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 43">
	            	<!-- model_veris_industries_e50c2a -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `RealEnergyConsumption`, `TotalInstantaneousRealPower`, `TotalInstantaneousReactivePower`, `TotalInstantaneousApparentPower`, `TotalPowerFactor`, `VoltageLL3pAve`, `VoltageLN3pAve`, `Current3pAve`, `RealPowerPhaseA`, `RealPowerPhaseB`, `RealPowerPhaseC`, `PowerFactorPhaseA`, `PowerFactorPhaseB`, `PowerFactorPhaseC`, `VoltagePhaseAB`, `VoltagePhaseBC`, `VoltagePhaseAC`, `VoltagePhaseAN`, `VoltagePhaseBN`, `VoltagePhaseCN`, `CurrentInstantaneousPhaseA`, `CurrentInstantaneousPhaseB`, `CurrentInstantaneousPhaseC`, `Frequency`, `ApparentEnergyConsumption`, `ReactiveEnergyConsumption`, `ApparentPowerPhaseA`, `ApparentPowerPhaseB`, `ApparentPowerPhaseC`, `ReactivePowerPhaseA`, `ReactivePowerPhaseB`, `ReactivePowerPhaseC`, `TotalRealPowerPresentDemand`, `TotalReactivePowerPresentDemand`, `TotalApparentPowerPresentDemand`, `TotalRealPowerMaxDemand`, `TotalReactivePowerMaxDemand`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `RealEnergyConsumption`, `TotalInstantaneousRealPower`, `TotalInstantaneousReactivePower`, `TotalInstantaneousApparentPower`, `TotalPowerFactor`, `VoltageLL3pAve`, `VoltageLN3pAve`, `Current3pAve`, `RealPowerPhaseA`, `RealPowerPhaseB`, `RealPowerPhaseC`, `PowerFactorPhaseA`, `PowerFactorPhaseB`, `PowerFactorPhaseC`, `VoltagePhaseAB`, `VoltagePhaseBC`, `VoltagePhaseAC`, `VoltagePhaseAN`, `VoltagePhaseBN`, `VoltagePhaseCN`, `CurrentInstantaneousPhaseA`, `CurrentInstantaneousPhaseB`, `CurrentInstantaneousPhaseC`, `Frequency`, `ApparentEnergyConsumption`, `ReactiveEnergyConsumption`, `ApparentPowerPhaseA`, `ApparentPowerPhaseB`, `ApparentPowerPhaseC`, `ReactivePowerPhaseA`, `ReactivePowerPhaseB`, `ReactivePowerPhaseC`, `TotalRealPowerPresentDemand`, `TotalReactivePowerPresentDemand`, `TotalApparentPowerPresentDemand`, `TotalRealPowerMaxDemand`, `TotalReactivePowerMaxDemand`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 44">
	            	<!-- model_cell_modem_sierra_rv50 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `SerialNumber`, `NETIP`, `DNS1`, `DNS2`, `ETHSTATE`, `ICCID`, `INTSTATE`, `INTSTATE_RAW`, `LTERSRQ`, `LTERSRP`, `NETCHAN`, `ACTIVESIM`, `BANDMODE`, `CIMI`, `NETOP`, `NETPHONE`, `NETRSSI`, `NETSERV`, `NETSERVICE_RAW`, `NETSTATE`
					)
					SELECT 
					   `time`, `id_device`, `SerialNumber`, `NETIP`, `DNS1`, `DNS2`, `ETHSTATE`, `ICCID`, `INTSTATE`, `INTSTATE_RAW`, `LTERSRQ`, `LTERSRP`, `NETCHAN`, `ACTIVESIM`, `BANDMODE`, `CIMI`, `NETOP`, `NETPHONE`, `NETRSSI`, `NETSERV`, `NETSERVICE_RAW`, `NETSTATE`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 45">
	            	<!-- model_lufft_ws501_umb_weather -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `RelativeHumidityActual`, `RelativeHumidityMin`, `RelativeHumidityMax`, `RelativeHumidityAvg`, `RelativeAirPressureActual`, `RelativeAirPressureMin`, `RelativeAirPressureMax`, `RelativeAirPressureAvg`, `WindDirectionActual`, `WindDirectionMin`, `WindDirectionMax`, `WindDirectionVct`, `WindDirectionFast`, `WindDirectionCompassCorrected`, `Compass`, `WindMeasurementQuality`, `PrecipitationType`, `GlobalRadiation`, `GlobalRadiation2`, `GlobalRadiation3`, `GlobalRadiation4`, `AirTemperatureCActual`, `AirTemperatureCMin`, `AirTemperatureCMax`, `AirTemperatureCAvg`, `DewPointActual`, `DewPointMin`, `DewPointMax`, `DewPointAvg`, `WindChillTemperature`, `HeatingTemperatureWind`, `HeatingTemperatureR2S`, `WindSpeedActual`, `WindSpeedMin`, `WindSpeedMax`, `WindSpeedAvg`, `WindSpeedVct`, `WindSpeedFast`, `PrecipitationAbsolute`, `PrecipitationDifferential`, `PrecipitationIntensity`, `AirTemperatureFActual`, `AirTemperatureFMin`, `AirTemperatureFMax`, `AirTemperatureFAvg`, `ExternalTemperatureC`, `ExternalTemperatureF`, `nvm_irradiance`, `nvm_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `RelativeHumidityActual`, `RelativeHumidityMin`, `RelativeHumidityMax`, `RelativeHumidityAvg`, `RelativeAirPressureActual`, `RelativeAirPressureMin`, `RelativeAirPressureMax`, `RelativeAirPressureAvg`, `WindDirectionActual`, `WindDirectionMin`, `WindDirectionMax`, `WindDirectionVct`, `WindDirectionFast`, `WindDirectionCompassCorrected`, `Compass`, `WindMeasurementQuality`, `PrecipitationType`, `GlobalRadiation`, `GlobalRadiation2`, `GlobalRadiation3`, `GlobalRadiation4`, `AirTemperatureCActual`, `AirTemperatureCMin`, `AirTemperatureCMax`, `AirTemperatureCAvg`, `DewPointActual`, `DewPointMin`, `DewPointMax`, `DewPointAvg`, `WindChillTemperature`, `HeatingTemperatureWind`, `HeatingTemperatureR2S`, `WindSpeedActual`, `WindSpeedMin`, `WindSpeedMax`, `WindSpeedAvg`, `WindSpeedVct`, `WindSpeedFast`, `PrecipitationAbsolute`, `PrecipitationDifferential`, `PrecipitationIntensity`, `AirTemperatureFActual`, `AirTemperatureFMin`, `AirTemperatureFMax`, `AirTemperatureFAvg`, `ExternalTemperatureC`, `ExternalTemperatureF`, `nvm_irradiance`, `nvm_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 46">
	            	<!-- model_sma_inverter_stp30000tlus10 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `GridMs_TotVAr`, `DcMs_Watt0`, `DcMs_Watt1`, `W_phsA`, `W_phsB`, `W_phsC`, `GridMs_TotW`, `GridMs_TotVA`, `A_phsA`, `A_phsB`, `A_phsC`, `GridMs_Hz`, `Isolation_LeakRis`, `DcMs_Vol0`, `DcMs_Vol1`, `PhV_phsA`, `PhV_phsB`, `PhV_phsC`, `DcMs_Amp0`, `DcMs_Amp1`, `TotVAr_Pv`, `VAr_phsA`, `VAr_phsB`, `VAr_phsC`, `VA_phsA`, `VA_phsB`, `VA_phsC`, `TotW_Pv`, `Metering_TotFeedTms`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Operation_Health`, `Metering_TotWhOut`, `TotWhOut_Pv`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `GridMs_TotVAr`, `DcMs_Watt0`, `DcMs_Watt1`, `W_phsA`, `W_phsB`, `W_phsC`, `GridMs_TotW`, `GridMs_TotVA`, `A_phsA`, `A_phsB`, `A_phsC`, `GridMs_Hz`, `Isolation_LeakRis`, `DcMs_Vol0`, `DcMs_Vol1`, `PhV_phsA`, `PhV_phsB`, `PhV_phsC`, `DcMs_Amp0`, `DcMs_Amp1`, `TotVAr_Pv`, `VAr_phsA`, `VAr_phsB`, `VAr_phsC`, `VA_phsA`, `VA_phsB`, `VA_phsC`, `TotW_Pv`, `Metering_TotFeedTms`, `Operation_GriSwCnt`, `Metering_TotOpTms`, `Operation_Health`, `Metering_TotWhOut`, `TotWhOut_Pv`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 47">
	            	<!-- model_ae1000nx_class9644 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `LastRestart`, `Uptime`, `Year`, `Month`, `Day`, `Hour`, `Minutes`, `Seconds`, `CurrentTime`, `ACPower`, `ACFrequency`, `PVVoltage`, `PVCurrent`, `CommonMode`, `AmbientTemperature`, `CoolantTemperature`, `ReactorTemperature`, `CabinetTemperature`, `BusVoltage`, `GroundCurrent`, `ReactivePower`, `ACCurrent`, `TodaykWh`, `YTDkWhTotal`, `LifekWhTotal`, `YTDkWh`, `LifekWh`, `Last15MinkWh`, `TimeStamp15Minutes`, `State`, `Limits`, `MasterFault`, `MasterWarning`, `ArrayFault`, `ArrayWarning`, `GridFault`, `GridWarning`, `SystemFault`, `SystemWarning`, `DriveFault`, `DriveWarning`, `TemperatureFault`, `TemperatureWarning`, `CoolingSystemFault`, `CoolingSystemWarning`, `ElectricInterlockFault`, `ElectricInterlockWarning`, `PowerSupplyFault`, `PowerSupplyWarning`, `RequestSetACPowerLimit`, `LowerRangeOfACPowerLimit`, `UpperRangeOfACPowerLimit`, `RequestSetInstantaneousReactivePowerSetPoint`, `LowerRangeOfInstantaneousReactivePowerSetPoint`, `UpperRangeOfInstantaneousReactivePowerSetPoint`, `EnableDisableTheUnit`, `SetReadReactivePowerMode`, `SetReadPACLimit`, `SetReadInstantaneousReactivePowerSetPoint`, `SetReadPowerFactorSetPoint`, `ACPowerRampRate`, `ReactivePowerRampRate`, `PowerFactorRampRate`, `ReactivePowerSignConvention`, `DCS_N`, `DCS_StCtcr`, `DCS_StCpt`, `DCS_EvtFlt`, `DCS_EvtWrn`, `DCS_StVnd`, `DCS_DCA`, `DCS_DCADif`, `DCS_DCV`, `DCS_Tmp`, `DCS_InId01`, `DCS_InFlt01`, `DCS_InWrn01`, `DCS_InPDCA01`, `DCS_InNDCA01`, `DCS_InId02`, `DCS_InFlt02`, `DCS_InWrn02`, `DCS_InPDCA02`, `DCS_InNDCA02`, `DCS_InId03`, `DCS_InFlt03`, `DCS_InWrn03`, `DCS_InPDCA03`, `DCS_InNDCA03`, `DCS_InId04`, `DCS_InFlt04`, `DCS_InWrn04`, `DCS_InPDCA04`, `DCS_InNDCA04`, `DCS_InId05`, `DCS_InFlt05`, `DCS_InWrn05`, `DCS_InPDCA05`, `DCS_InNDCA05`, `DCS_InId06`, `DCS_InFlt06`, `DCS_InWrn06`, `DCS_InPDCA06`, `DCS_InNDCA06`, `DCS_InId07`, `DCS_InFlt07`, `DCS_InWrn07`, `DCS_InPDCA07`, `DCS_InNDCA07`, `DCS_InId08`, `DCS_InFlt08`, `DCS_InWrn08`, `DCS_InPDCA08`, `DCS_InNDCA08`, `DCS_InId09`, `DCS_InFlt09`, `DCS_InWrn09`, `DCS_InPDCA09`, `DCS_InNDCA09`, `DCS_InId10`, `DCS_InFlt10`, `DCS_InWrn10`, `DCS_InPDCA10`, `DCS_InNDCA10`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `LastRestart`, `Uptime`, `Year`, `Month`, `Day`, `Hour`, `Minutes`, `Seconds`, `CurrentTime`, `ACPower`, `ACFrequency`, `PVVoltage`, `PVCurrent`, `CommonMode`, `AmbientTemperature`, `CoolantTemperature`, `ReactorTemperature`, `CabinetTemperature`, `BusVoltage`, `GroundCurrent`, `ReactivePower`, `ACCurrent`, `TodaykWh`, `YTDkWhTotal`, `LifekWhTotal`, `YTDkWh`, `LifekWh`, `Last15MinkWh`, `TimeStamp15Minutes`, `State`, `Limits`, `MasterFault`, `MasterWarning`, `ArrayFault`, `ArrayWarning`, `GridFault`, `GridWarning`, `SystemFault`, `SystemWarning`, `DriveFault`, `DriveWarning`, `TemperatureFault`, `TemperatureWarning`, `CoolingSystemFault`, `CoolingSystemWarning`, `ElectricInterlockFault`, `ElectricInterlockWarning`, `PowerSupplyFault`, `PowerSupplyWarning`, `RequestSetACPowerLimit`, `LowerRangeOfACPowerLimit`, `UpperRangeOfACPowerLimit`, `RequestSetInstantaneousReactivePowerSetPoint`, `LowerRangeOfInstantaneousReactivePowerSetPoint`, `UpperRangeOfInstantaneousReactivePowerSetPoint`, `EnableDisableTheUnit`, `SetReadReactivePowerMode`, `SetReadPACLimit`, `SetReadInstantaneousReactivePowerSetPoint`, `SetReadPowerFactorSetPoint`, `ACPowerRampRate`, `ReactivePowerRampRate`, `PowerFactorRampRate`, `ReactivePowerSignConvention`, `DCS_N`, `DCS_StCtcr`, `DCS_StCpt`, `DCS_EvtFlt`, `DCS_EvtWrn`, `DCS_StVnd`, `DCS_DCA`, `DCS_DCADif`, `DCS_DCV`, `DCS_Tmp`, `DCS_InId01`, `DCS_InFlt01`, `DCS_InWrn01`, `DCS_InPDCA01`, `DCS_InNDCA01`, `DCS_InId02`, `DCS_InFlt02`, `DCS_InWrn02`, `DCS_InPDCA02`, `DCS_InNDCA02`, `DCS_InId03`, `DCS_InFlt03`, `DCS_InWrn03`, `DCS_InPDCA03`, `DCS_InNDCA03`, `DCS_InId04`, `DCS_InFlt04`, `DCS_InWrn04`, `DCS_InPDCA04`, `DCS_InNDCA04`, `DCS_InId05`, `DCS_InFlt05`, `DCS_InWrn05`, `DCS_InPDCA05`, `DCS_InNDCA05`, `DCS_InId06`, `DCS_InFlt06`, `DCS_InWrn06`, `DCS_InPDCA06`, `DCS_InNDCA06`, `DCS_InId07`, `DCS_InFlt07`, `DCS_InWrn07`, `DCS_InPDCA07`, `DCS_InNDCA07`, `DCS_InId08`, `DCS_InFlt08`, `DCS_InWrn08`, `DCS_InPDCA08`, `DCS_InNDCA08`, `DCS_InId09`, `DCS_InFlt09`, `DCS_InWrn09`, `DCS_InPDCA09`, `DCS_InNDCA09`, `DCS_InId10`, `DCS_InFlt10`, `DCS_InWrn10`, `DCS_InPDCA10`, `DCS_InNDCA10`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 48">
	            	<!-- model_sma_inverter_stp62us41 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VA_phsA`, `VA_phsB`, `DcMs_Vol0`, `DcMs_Vol1`, `DcMs_Vol2`, `DcMs_Vol3`, `DcMs_Vol4`, `DcMs_Vol5`, `TotW_Pv`, `Isolation_LeakRis`, `PhV_phsC`, `GridMs_Hz`, `W_phsB`, `GridMs_TotW`, `W_phsC`, `VAr_phsC`, `DcMs_Watt0`, `DcMs_Watt1`, `DcMs_Watt2`, `DcMs_Watt3`, `DcMs_Watt4`, `DcMs_Watt5`, `W_phsA`, `VAr_phsB`, `TotVAr_Pv`, `PhV_phsA2B`, `VAr_phsA`, `GridMs_TotVA`, `GridMs_TotVAr`, `DcMs_Amp0`, `DcMs_Amp1`, `DcMs_Amp2`, `DcMs_Amp3`, `DcMs_Amp4`, `DcMs_Amp5`, `PhV_phsB2C`, `PhV_phsB`, `A_phsA`, `PhV_phsC2A`, `A_phsB`, `PhV_phsA`, `VA_phsC`, `A_phsC`, `Metering_TotWhOut`, `Operation_Health`, `Operation_GriSwCnt`, `TotWhOut_Pv`, `Metering_TotFeedTms`, `Metering_TotOpTms`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VA_phsA`, `VA_phsB`, `DcMs_Vol0`, `DcMs_Vol1`, `DcMs_Vol2`, `DcMs_Vol3`, `DcMs_Vol4`, `DcMs_Vol5`, `TotW_Pv`, `Isolation_LeakRis`, `PhV_phsC`, `GridMs_Hz`, `W_phsB`, `GridMs_TotW`, `W_phsC`, `VAr_phsC`, `DcMs_Watt0`, `DcMs_Watt1`, `DcMs_Watt2`, `DcMs_Watt3`, `DcMs_Watt4`, `DcMs_Watt5`, `W_phsA`, `VAr_phsB`, `TotVAr_Pv`, `PhV_phsA2B`, `VAr_phsA`, `GridMs_TotVA`, `GridMs_TotVAr`, `DcMs_Amp0`, `DcMs_Amp1`, `DcMs_Amp2`, `DcMs_Amp3`, `DcMs_Amp4`, `DcMs_Amp5`, `PhV_phsB2C`, `PhV_phsB`, `A_phsA`, `PhV_phsC2A`, `A_phsB`, `PhV_phsA`, `VA_phsC`, `A_phsC`, `Metering_TotWhOut`, `Operation_Health`, `Operation_GriSwCnt`, `TotWhOut_Pv`, `Metering_TotFeedTms`, `Metering_TotOpTms`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 49">
	            	<!-- model_virtual_meter_or_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `nvmActivePower`, `nvmActiveEnergy`, `nvm_irradiance`, `nvm_temperature`, `expected_power_dc`, `expected_power_ac`, `expected_energy`, `r_irradiance`, `total_poa`, `panel_temp`, `ambient_temp`, `calculation_poa`, `calculation_temp`, `calculation_clipping`
					)
					SELECT 
					   `time`, `id_device`, `nvmActivePower`, `nvmActiveEnergy`, `nvm_irradiance`, `nvm_temperature`, `expected_power_dc`, `expected_power_ac`, `expected_energy`, `r_irradiance`, `total_poa`, `panel_temp`, `ambient_temp`, `calculation_poa`, `calculation_temp`, `calculation_clipping`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 50">
	            	<!-- model_aes_tx_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `pt0`, `pt1`, `pt2`, `pt3`, `pt4`, `pt5`, `pt6`, `pt7`, `pt8`, `pt9`, `pt10`, `pt11`, `pt12`, `pt13`, `pt14`, `pt15`, `pt16`, `pt17`, `pt18`, `pt19`, `pt20`, `pt21`, `pt22`, `pt23`, `pt24`, `pt25`, `pt26`, `pt27`, `pt28`, `pt29`, `pt30`, `pt31`, `pt32`, `pt33`, `pt34`, `pt35`, `pt36`, `pt37`, `pt38`, `pt39`, `pt40`, `pt41`, `pt42`, `pt43`, `pt44`, `pt45`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `pt0`, `pt1`, `pt2`, `pt3`, `pt4`, `pt5`, `pt6`, `pt7`, `pt8`, `pt9`, `pt10`, `pt11`, `pt12`, `pt13`, `pt14`, `pt15`, `pt16`, `pt17`, `pt18`, `pt19`, `pt20`, `pt21`, `pt22`, `pt23`, `pt24`, `pt25`, `pt26`, `pt27`, `pt28`, `pt29`, `pt30`, `pt31`, `pt32`, `pt33`, `pt34`, `pt35`, `pt36`, `pt37`, `pt38`, `pt39`, `pt40`, `pt41`, `pt42`, `pt43`, `pt44`, `pt45`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>    
	            <when test="id_device_group == 51">
	            	<!-- model_meter_ion_8600 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VlnA`, `VlnB`, `VlnC`, `VlnAve`, `VllAb`, `VllAc`, `VllCa`, `VllAve`, `IA`, `IB`, `IC`, `IAve`, `VUnbal`, `IUnbal`, `Freq`, `I4`, `kWA`, `kWB`, `kWC`, `kWTot`, `kVARA`, `kVARB`, `kVARC`, `kVARTot`, `KVAA`, `KVAB`, `KVAC`, `KVATot`, `PFSignA`, `PFSignB`, `PFSignC`, `PFSignTot`, `VIIAveMx`, `IAveMx`, `kWTotMx`, `kVARTotMx`, `kVATotMx`, `FreqMx`, `VIIAveMn`, `IAveMn`, `FreqMn`, `kWSdDelRec`, `kVASdDelRec`, `kVARSdDelRec`, `kWSdMxDR`, `kVASdMxDR`, `kVARSdMxDR`, `PhaseRev`, `kWhDel`, `kWhRec`, `kWhDelRec`, `kWhDel_Rec`, `kVARhDel`, `kVARhRec`, `kVARhDelRec`, `kVARhDel_Rec`, `kVAhDelRec`, `V1THDMx`, `V2THDMx`, `V3THDMx`, `I1THDMx`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VlnA`, `VlnB`, `VlnC`, `VlnAve`, `VllAb`, `VllAc`, `VllCa`, `VllAve`, `IA`, `IB`, `IC`, `IAve`, `VUnbal`, `IUnbal`, `Freq`, `I4`, `kWA`, `kWB`, `kWC`, `kWTot`, `kVARA`, `kVARB`, `kVARC`, `kVARTot`, `KVAA`, `KVAB`, `KVAC`, `KVATot`, `PFSignA`, `PFSignB`, `PFSignC`, `PFSignTot`, `VIIAveMx`, `IAveMx`, `kWTotMx`, `kVARTotMx`, `kVATotMx`, `FreqMx`, `VIIAveMn`, `IAveMn`, `FreqMn`, `kWSdDelRec`, `kVASdDelRec`, `kVARSdDelRec`, `kWSdMxDR`, `kVASdMxDR`, `kVARSdMxDR`, `PhaseRev`, `kWhDel`, `kWhRec`, `kWhDelRec`, `kWhDel_Rec`, `kVARhDel`, `kVARhRec`, `kVARhDelRec`, `kVARhDel_Rec`, `kVAhDelRec`, `V1THDMx`, `V2THDMx`, `V3THDMx`, `I1THDMx`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 52">
	            	<!-- model_power_measurement_ion_7650 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Ia`, `Ib`, `Ic`, `I4`, `I5`, `IAvg`, `IAvgMn`, `IAvgMx`, `IAvgMean`, `Freq`, `FreqMn`, `FreqMx`, `FreqMean`, `VUnbal`, `IUnbal`, `PhaseRev`, `VInA`, `VInB`, `VInC`, `VInAvg`, `VInAvgMx`, `unused1`, `VIIAb`, `VIIBc`, `VIICa`, `VIIAvg`, `VIIAvgMx`, `VIIAvgMean`, `unused2`, `unused3`, `unused4`, `unused5`, `kWA`, `kWB`, `kWC`, `kWTot`, `kWTotMax`, `kVARA`, `kVARB`, `kVARC`, `kVARTot`, `kVARTotMax`, `kVAA`, `kVAB`, `kVAC`, `kVATot`, `kVATotMax`, `unused6`, `kWhDel`, `kWhRec`, `kVARhDel`, `kVARhRec`, `kVARhDelRec`, `unused7`, `unused8`, `unused9`, `unused10`, `unused11`, `unused12`, `unused13`, `unused14`, `unused15`, `unused16`, `unused17`, `PFSignA`, `PFSignB`, `PFSignC`, `PFSignTot`, `V1THDMx`, `V2THDMx`, `V3THDMx`, `I1THDMx`, `I2THDMx`, `I3THDMx`, `I1KFactor`, `I2KFactor`, `I3KFactor`, `I1CrestFactor`, `I2CrestFactor`, `I3CrestFactor`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Ia`, `Ib`, `Ic`, `I4`, `I5`, `IAvg`, `IAvgMn`, `IAvgMx`, `IAvgMean`, `Freq`, `FreqMn`, `FreqMx`, `FreqMean`, `VUnbal`, `IUnbal`, `PhaseRev`, `VInA`, `VInB`, `VInC`, `VInAvg`, `VInAvgMx`, `unused1`, `VIIAb`, `VIIBc`, `VIICa`, `VIIAvg`, `VIIAvgMx`, `VIIAvgMean`, `unused2`, `unused3`, `unused4`, `unused5`, `kWA`, `kWB`, `kWC`, `kWTot`, `kWTotMax`, `kVARA`, `kVARB`, `kVARC`, `kVARTot`, `kVARTotMax`, `kVAA`, `kVAB`, `kVAC`, `kVATot`, `kVATotMax`, `unused6`, `kWhDel`, `kWhRec`, `kVARhDel`, `kVARhRec`, `kVARhDelRec`, `unused7`, `unused8`, `unused9`, `unused10`, `unused11`, `unused12`, `unused13`, `unused14`, `unused15`, `unused16`, `unused17`, `PFSignA`, `PFSignB`, `PFSignC`, `PFSignTot`, `V1THDMx`, `V2THDMx`, `V3THDMx`, `I1THDMx`, `I2THDMx`, `I3THDMx`, `I1KFactor`, `I2KFactor`, `I3KFactor`, `I1CrestFactor`, `I2CrestFactor`, `I3CrestFactor`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 53">
	           <!-- model_xantrex_inverter -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VAB`, `VBC`, `VCA`, `CurrentA`, `CurrentB`, `CurrentC`, `ReadPower`, `PVVoltage`, `PVCurrent`, `PVPower`, `GridFrequency`, `SystemState`, `GoalState`, `FaultCode`, `kWh`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `VAB`, `VBC`, `VCA`, `CurrentA`, `CurrentB`, `CurrentC`, `ReadPower`, `PVVoltage`, `PVCurrent`, `PVPower`, `GridFrequency`, `SystemState`, `GoalState`, `FaultCode`, `kWh`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 54">
	           <!-- model_poa_temp -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `T_AMB`, `T_MOD`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `T_AMB`, `T_MOD`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 55">
	           <!-- model_pyranometer_poa -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `poa`, `point1`, `point2`, `point3`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `poa`, `point1`, `point2`, `point3`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 56">
	           <!-- model_eri_weather_icp_class8050 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `panel_temp`, `ambient_temp`, `wind_speed`, `solar_irradiation`, `wind_direction`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `panel_temp`, `ambient_temp`, `wind_speed`, `solar_irradiation`, `wind_direction`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 57">
	           <!-- model_xantrex_gt500e -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AC_CURRENT_A`, `AC_CURRENT_B`, `AC_CURRENT_C`, `AC_POWER`, `AC_VOLTAGE_AB`, `AC_VOLTAGE_BC`, `AC_VOLTAGE_CA`, `DC_CURRENT`, `DC_POWER`, `DC_VOLTAGE`, `ENERGY_DELIVERED`, `FREQUENCY`, `STATUS_FAULT`, `STATUS_GOAL`, `STATUS_INVERTER`, `STATUS_OPERATING`, `STATUS_PV`, `T_LEFT_MATRIX`, `T_RIGHT_MATRIX`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `AC_CURRENT_A`, `AC_CURRENT_B`, `AC_CURRENT_C`, `AC_POWER`, `AC_VOLTAGE_AB`, `AC_VOLTAGE_BC`, `AC_VOLTAGE_CA`, `DC_CURRENT`, `DC_POWER`, `DC_VOLTAGE`, `ENERGY_DELIVERED`, `FREQUENCY`, `STATUS_FAULT`, `STATUS_GOAL`, `STATUS_INVERTER`, `STATUS_OPERATING`, `STATUS_PV`, `T_LEFT_MATRIX`, `T_RIGHT_MATRIX`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 58">
	           <!-- model_wattsun_tcu -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TRACKER_ADDRESS`, `HOUR`, `MINUTE`, `DAY`, `DIGITAL_INPUTS`, `DIGITAL_OUTPUTS`, `WATCHDOG_COUNTER`, `ANGLE_CALC`, `LATITUDE`, `LONGITUDE`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TRACKER_ADDRESS`, `HOUR`, `MINUTE`, `DAY`, `DIGITAL_INPUTS`, `DIGITAL_OUTPUTS`, `WATCHDOG_COUNTER`, `ANGLE_CALC`, `LATITUDE`, `LONGITUDE`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 59">
	           <!-- model_wattsun_tracker -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `MODE`, `ST_CLEAR_ACCUMULATOR`, `ND_CLEAR_ACCUMULATOR`, `TRACKER_ANGLE_SETPOINT`, `TRACKER_ANGLE`, `NIGHT_STOW_POSITION`, `WIND_STOW_POSITION`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `MODE`, `ST_CLEAR_ACCUMULATOR`, `ND_CLEAR_ACCUMULATOR`, `TRACKER_ANGLE_SETPOINT`, `TRACKER_ANGLE`, `NIGHT_STOW_POSITION`, `WIND_STOW_POSITION`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 60">
	           <!-- model_sev_sg110cx -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TotalYield`, `DailyYield`, `ArrayInsulationResistance`, `InteriorTemperature`, `TotalDCPower`, `TotalApparentPower`, `TotalActivePower`, `TotalReactivePower`, `TotalPowerFactor`, `GridFrequency`, `PhaseAVoltage`, `PhaseBVoltage`, `PhaseCVoltage`, `PhaseACurrent`, `PhaseBCurrent`, `PhaseCCurrent`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TotalYield`, `DailyYield`, `ArrayInsulationResistance`, `InteriorTemperature`, `TotalDCPower`, `TotalApparentPower`, `TotalActivePower`, `TotalReactivePower`, `TotalPowerFactor`, `GridFrequency`, `PhaseAVoltage`, `PhaseBVoltage`, `PhaseCVoltage`, `PhaseACurrent`, `PhaseBCurrent`, `PhaseCCurrent`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 61">
	           <!-- model_elster_a1700 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `PhaseAVoltage`, `PhaseBVoltage`, `PhaseCVoltage`, `ABLineVoltage`, `BCLineVoltage`, `CALineVoltage`, `PhaseACurrent`, `PhaseBCurrent`, `PhaseCCurrent`, `PhaseAActivePower`, `PhaseBActivePower`, `PhaseCActivePower`, `TotalActivePower`, `TotalReactivePower`, `TotalApparentPower`, `TotalPowerFactor`, `GridFrequency`, `TotalForwardActiveEnergy`, `TotalReverseActiveEnergy`, `TotalForwardReactiveEnergy`, `TotalReverseReactiveEnergy`, `PhaseAForwardActivePower`, `PhaseBForwardActivePower`, `PhaseCForwardActivePower`, `PhaseAReverseActivePower`, `PhaseBReverseActivePower`, `PhaseCReverseActivePower`, `PhaseAForwardReactivePower`, `PhaseBForwardReactivePower`, `PhaseCForwardReactivePower`, `PhaseAReverseReactivePower`, `PhaseBReverseReactivePower`, `PhaseCReverseReactivePower`, `FlatForwardActiveEnergy`, `PeakForwardActiveEnergy`, `ValleyForwardActiveEnergy`, `FlatReverseActiveEnergy`, `PeakReverseActiveEnergy`, `ValleyReverseActiveEnergy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `PhaseAVoltage`, `PhaseBVoltage`, `PhaseCVoltage`, `ABLineVoltage`, `BCLineVoltage`, `CALineVoltage`, `PhaseACurrent`, `PhaseBCurrent`, `PhaseCCurrent`, `PhaseAActivePower`, `PhaseBActivePower`, `PhaseCActivePower`, `TotalActivePower`, `TotalReactivePower`, `TotalApparentPower`, `TotalPowerFactor`, `GridFrequency`, `TotalForwardActiveEnergy`, `TotalReverseActiveEnergy`, `TotalForwardReactiveEnergy`, `TotalReverseReactiveEnergy`, `PhaseAForwardActivePower`, `PhaseBForwardActivePower`, `PhaseCForwardActivePower`, `PhaseAReverseActivePower`, `PhaseBReverseActivePower`, `PhaseCReverseActivePower`, `PhaseAForwardReactivePower`, `PhaseBForwardReactivePower`, `PhaseCForwardReactivePower`, `PhaseAReverseReactivePower`, `PhaseBReverseReactivePower`, `PhaseCReverseReactivePower`, `FlatForwardActiveEnergy`, `PeakForwardActiveEnergy`, `ValleyForwardActiveEnergy`, `FlatReverseActiveEnergy`, `PeakReverseActiveEnergy`, `ValleyReverseActiveEnergy`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
	            <when test="id_device_group == 62">
		           <!-- model_pvmet_100 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TransientHorizontalIrradiance`, `DailyHorizontalIrradiance`, `AmbientTemperature`, `Temperature`, `WindAngle`, `WindSpeed`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TransientHorizontalIrradiance`, `DailyHorizontalIrradiance`, `AmbientTemperature`, `Temperature`, `WindAngle`, `WindSpeed`, `nvm_irradiance`, `nvm_temperature`, `nvm_panel_temperature`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
				<when test="id_device_group == 64">
	            	<!-- model_sungrow_logger1000 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TotalNumberOfConnectedDevices`, `TotalFaultDeviceNumber`, `TotalActivePower`, `DailyYield`, `TotalReactivePower`, `TotalYield`, `DigitalInputState`, `PT1001`, `PT1002`, `ADC1Voltage`, `ADC1Current`, `ADC2Voltage`, `ADC2Current`, `ADC3Voltage`, `ADC3Current`, `ADC4Voltage`, `ADC4Current`, `Longitude`, `Latitude`, `MaxTotalRatedActivePower`, `MinTotalRatedActivePower`, `MaxTotalRatedReactivePower`, `MinTotalRatedReactivePower`, `ActualTotalInverterActivePower`, `ActualTotalInverterReactivePower`, `OnOffStateOfDataLogger`, `LockingStateOfDataLogger`, `MinAdjustableActivePower`, `MaxAdjustableActivePower`, `MinAdjustableReactivePower`, `MaxAdjustableReactivePower`, `RatedActivePower`, `RatedReactivePower`, `NumberOfOnGridDevices`, `NumberOfOffGridDevices`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `TotalNumberOfConnectedDevices`, `TotalFaultDeviceNumber`, `TotalActivePower`, `DailyYield`, `TotalReactivePower`, `TotalYield`, `DigitalInputState`, `PT1001`, `PT1002`, `ADC1Voltage`, `ADC1Current`, `ADC2Voltage`, `ADC2Current`, `ADC3Voltage`, `ADC3Current`, `ADC4Voltage`, `ADC4Current`, `Longitude`, `Latitude`, `MaxTotalRatedActivePower`, `MinTotalRatedActivePower`, `MaxTotalRatedReactivePower`, `MinTotalRatedReactivePower`, `ActualTotalInverterActivePower`, `ActualTotalInverterReactivePower`, `OnOffStateOfDataLogger`, `LockingStateOfDataLogger`, `MinAdjustableActivePower`, `MaxAdjustableActivePower`, `MinAdjustableReactivePower`, `MaxAdjustableReactivePower`, `RatedActivePower`, `RatedReactivePower`, `NumberOfOnGridDevices`, `NumberOfOffGridDevices`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
				<when test="id_device_group == 65">
	            	<!-- model_meter_ion_8600v1 -->
		           INSERT IGNORE INTO ${newtablename}(
					`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Frequency`, `VAN`, `VlnC`, `VlnAve`, `VllAb`, `VllAc`, `VllCa`, `VllAve`, `IA`, `IB`, `IC`, `IAve`, `VUnbal`, `IUnbal`, `Freq`, `I4`, `kWA`, `kWB`, `kWC`, `kWTot`, `kVARA`, `kVARB`, `kVARC`, `kVARTot`, `KVAA`, `KVAB`, `KVAC`, `KVATot`, `PFSignA`, `PFSignB`, `PFSignC`, `PFSignTot`, `VIIAveMx`, `IAveMx`, `kWTotMx`, `kVARTotMx`, `kVATotMx`, `FreqMx`, `VIIAveMn`, `IAveMn`, `FreqMn`, `kWSdDelRec`, `kVASdDelRec`, `kVARSdDelRec`, `kWSdMxDR`, `kVASdMxDR`, `kVARSdMxDR`, `PhaseRev`, `kWhDel`, `kWhRec`, `kWhDelRec`, `kWhDel_Rec`, `kVARhDel`, `kVARhRec`, `kVARhDelRec`, `kVARhDel_Rec`, `kVAhDelRec`, `V1THDMx`, `V2THDMx`, `V3THDMx`, `I1THDMx`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					   `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Frequency`, `VAN`, `VlnC`, `VlnAve`, `VllAb`, `VllAc`, `VllCa`, `VllAve`, `IA`, `IB`, `IC`, `IAve`, `VUnbal`, `IUnbal`, `Freq`, `I4`, `kWA`, `kWB`, `kWC`, `kWTot`, `kVARA`, `kVARB`, `kVARC`, `kVARTot`, `KVAA`, `KVAB`, `KVAC`, `KVATot`, `PFSignA`, `PFSignB`, `PFSignC`, `PFSignTot`, `VIIAveMx`, `IAveMx`, `kWTotMx`, `kVARTotMx`, `kVATotMx`, `FreqMx`, `VIIAveMn`, `IAveMn`, `FreqMn`, `kWSdDelRec`, `kVASdDelRec`, `kVARSdDelRec`, `kWSdMxDR`, `kVASdMxDR`, `kVARSdMxDR`, `PhaseRev`, `kWhDel`, `kWhRec`, `kWhDelRec`, `kWhDel_Rec`, `kVARhDel`, `kVARhRec`, `kVARhDelRec`, `kVARhDel_Rec`, `kVAhDelRec`, `V1THDMx`, `V2THDMx`, `V3THDMx`, `I1THDMx`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					   ${device_group_table}
					WHERE
					   id_device = #{id_device};
	            </when>
				<when test="id_device_group == 67">
	            	<!-- model_dts_measurelogic_demand_meter -->
		            INSERT IGNORE INTO ${newtablename}(
						`time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Voltage_LN_1`, `Voltage_LN_2`, `Voltage_LN_3`, `Voltage_LL_Average`, `Current_1`, `Current_2`, `Current_3`, `Current_Total`, `Current_Neutral`, `Frequency_Average`, `PowerP_Total`, `PowerS_Total`, `PowerQ_Total`, `PowerFactor_DTS_Overall`, `EnergyP_Total`, `EnergyS_Total`, `EnergyQ_Total`, `EnergyP_Total_Imp`, `EnergyP_Total_Exp`, `EnergyQ_Total_Imp`, `EnergyQ_Total_Exp`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					)
					SELECT 
					    `time`, `id_device`, `error`, `low_alarm`, `high_alarm`, `Voltage_LN_1`, `Voltage_LN_2`, `Voltage_LN_3`, `Voltage_LL_Average`, `Current_1`, `Current_2`, `Current_3`, `Current_Total`, `Current_Neutral`, `Frequency_Average`, `PowerP_Total`, `PowerS_Total`, `PowerQ_Total`, `PowerFactor_DTS_Overall`, `EnergyP_Total`, `EnergyS_Total`, `EnergyQ_Total`, `EnergyP_Total_Imp`, `EnergyP_Total_Exp`, `EnergyQ_Total_Imp`, `EnergyQ_Total_Exp`, `nvmActivePower`, `nvmActiveEnergy`, `MeasuredProduction`
					FROM 
					    ${device_group_table}
					WHERE
					    id_device = #{id_device};
	            </when>
	                                                          
	        </choose> 
	        
		
	</insert>
	
</mapper>