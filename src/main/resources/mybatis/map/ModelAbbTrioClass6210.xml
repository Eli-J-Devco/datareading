<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ModelAbbTrioClass6210">
	<resultMap id="ModelAbbTrioClass6210Map"
		type="com.nwm.api.entities.ModelAbbTrioClass6210Entity">
		<result property="time" column="time" />
		<result property="id_device" column="id_device" />
		<result property="error" column="error" />
		<result property="low_alarm" column="low_alarm" />
		<result property="high_alarm" column="high_alarm" />
		<result property="AuroraType" column="AuroraType" />
		<result property="GridType" column="GridType" />
		<result property="TransformerType" column="TransformerType" />
		<result property="StatesByte0" column="StatesByte0" />
		<result property="StatesByte1" column="StatesByte1" />
		<result property="StatesByte2" column="StatesByte2" />
		<result property="StatesByte3" column="StatesByte3" />
		<result property="StatesByte4" column="StatesByte4" />
		<result property="TotalEnergy" column="TotalEnergy" />
		<result property="GridVoltage" column="GridVoltage" />
		<result property="GridCurrent" column="GridCurrent" />
		<result property="GridPower" column="GridPower" />
		<result property="Frequency" column="Frequency" />
		<result property="Input1Power" column="Input1Power" />
		<result property="Input1Voltage" column="Input1Voltage" />
		<result property="Input1Current" column="Input1Current" />
		<result property="Input2Power" column="Input2Power" />
		<result property="Input2Voltage" column="Input2Voltage" />
		<result property="Input2Current" column="Input2Current" />
		<result property="InverterTemperature"
			column="InverterTemperature" />
		<result property="BooseterTemperature"
			column="BooseterTemperature" />
		<result property="IslolationResistance"
			column="IslolationResistance" />
		<result property="nvmActivePower" column="nvmActivePower" />
		<result property="nvmActiveEnergy" column="nvmActiveEnergy" />
		<result property="MeasuredProduction" column="MeasuredProduction" />
		<result property="datatablename" column="datatablename" />
		<result property="view_tablename" column="view_tablename" />
		<result property="job_tablename" column="job_tablename" />

	</resultMap>

	<insert id="insertModelAbbTrioClass6210" useGeneratedKeys="true"
		keyProperty="time">
		INSERT INTO `${datatablename}`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="time != null">
				`time`,
			</if>
			<if test="id_device != 0.001">
				`id_device`,
			</if>
			<if test="error != 0.001">
				`error`,
			</if>
			<if test="low_alarm != 0.001">
				`low_alarm`,
			</if>
			<if test="high_alarm != 0.001">
				`high_alarm`,
			</if>
			<if test="AuroraType != 0.001">
				`AuroraType`,
			</if>
			<if test="GridType != 0.001">
				`GridType`,
			</if>
			<if test="TransformerType != 0.001">
				`TransformerType`,
			</if>
			<if test="StatesByte0 != 0.001">
				`StatesByte0`,
			</if>
			<if test="StatesByte1 != 0.001">
				`StatesByte1`,
			</if>
			<if test="StatesByte2 != 0.001">
				`StatesByte2`,
			</if>
			<if test="StatesByte3 != 0.001">
				`StatesByte3`,
			</if>
			<if test="StatesByte4 != 0.001">
				`StatesByte4`,
			</if>
			<if test="TotalEnergy != 0.001">
				`TotalEnergy`,
			</if>
			<if test="GridVoltage != 0.001">
				`GridVoltage`,
			</if>
			<if test="GridCurrent != 0.001">
				`GridCurrent`,
			</if>
			<if test="GridPower != 0.001">
				`GridPower`,
			</if>
			<if test="Frequency != 0.001">
				`Frequency`,
			</if>
			<if test="Input1Power != 0.001">
				`Input1Power`,
			</if>
			<if test="Input1Voltage != 0.001">
				`Input1Voltage`,
			</if>
			<if test="Input1Current != 0.001">
				`Input1Current`,
			</if>
			<if test="Input2Power != 0.001">
				`Input2Power`,
			</if>
			<if test="Input2Voltage != 0.001">
				`Input2Voltage`,
			</if>
			<if test="Input2Current != 0.001">
				`Input2Current`,
			</if>
			<if test="InverterTemperature != 0.001">
				`InverterTemperature`,
			</if>
			<if test="BooseterTemperature != 0.001">
				`BooseterTemperature`,
			</if>
			<if test="IslolationResistance != 0.001">
				`IslolationResistance`,
			</if>
			<if test="nvmActivePower != 0.001">
				`nvmActivePower`,
			</if>
			<if test="nvmActiveEnergy != 0.001">
				`nvmActiveEnergy`,
			</if>
			<if test="MeasuredProduction != 0.001">
				`MeasuredProduction`,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="time != null">
				#{time},
			</if>
			<if test="id_device != 0.001">
				#{id_device},
			</if>
			<if test="error != 0.001">
				#{error},
			</if>
			<if test="low_alarm != 0.001">
				#{low_alarm},
			</if>
			<if test="high_alarm != 0.001">
				#{high_alarm},
			</if>
			<if test="AuroraType != 0.001">
				#{AuroraType},
			</if>
			<if test="GridType != 0.001">
				#{GridType},
			</if>
			<if test="TransformerType != 0.001">
				#{TransformerType},
			</if>
			<if test="StatesByte0 != 0.001">
				#{StatesByte0},
			</if>
			<if test="StatesByte1 != 0.001">
				#{StatesByte1},
			</if>
			<if test="StatesByte2 != 0.001">
				#{StatesByte2},
			</if>
			<if test="StatesByte3 != 0.001">
				#{StatesByte3},
			</if>
			<if test="StatesByte4 != 0.001">
				#{StatesByte4},
			</if>
			<if test="TotalEnergy != 0.001">
				#{TotalEnergy},
			</if>
			<if test="GridVoltage != 0.001">
				#{GridVoltage},
			</if>
			<if test="GridCurrent != 0.001">
				#{GridCurrent},
			</if>
			<if test="GridPower != 0.001">
				#{GridPower},
			</if>
			<if test="Frequency != 0.001">
				#{Frequency},
			</if>
			<if test="Input1Power != 0.001">
				#{Input1Power},
			</if>
			<if test="Input1Voltage != 0.001">
				#{Input1Voltage},
			</if>
			<if test="Input1Current != 0.001">
				#{Input1Current},
			</if>
			<if test="Input2Power != 0.001">
				#{Input2Power},
			</if>
			<if test="Input2Voltage != 0.001">
				#{Input2Voltage},
			</if>
			<if test="Input2Current != 0.001">
				#{Input2Current},
			</if>
			<if test="InverterTemperature != 0.001">
				#{InverterTemperature},
			</if>
			<if test="BooseterTemperature != 0.001">
				#{BooseterTemperature},
			</if>
			<if test="IslolationResistance != 0.001">
				#{IslolationResistance},
			</if>
			<if test="nvmActivePower != 0.001">
				#{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001">
				#{nvmActiveEnergy},
			</if>
			<if test="MeasuredProduction != 0.001">
				#{MeasuredProduction},
			</if>
		</trim>
		
		
		<trim prefix="ON DUPLICATE KEY UPDATE " suffix="" suffixOverrides=",">
			<if test="id_device != 0.001">
				`id_device` = #{id_device},
			</if>
			<if test="error != 0.001">
				`error` = #{error},
			</if>
			<if test="low_alarm != 0.001">
				`low_alarm` = #{low_alarm},
			</if>
			<if test="high_alarm != 0.001">
				`high_alarm` = #{high_alarm},
			</if>
			<if test="AuroraType != 0.001">
				`AuroraType` = #{AuroraType},
			</if>
			<if test="GridType != 0.001">
				`GridType` = #{GridType},
			</if>
			<if test="TransformerType != 0.001">
				`TransformerType` = #{TransformerType},
			</if>
			<if test="StatesByte0 != 0.001">
				`StatesByte0` = #{StatesByte0},
			</if>
			<if test="StatesByte1 != 0.001">
				`StatesByte1` = #{StatesByte1},
			</if>
			<if test="StatesByte2 != 0.001">
				`StatesByte2` = #{StatesByte2},
			</if>
			<if test="StatesByte3 != 0.001">
				`StatesByte3` = #{StatesByte3},
			</if>
			<if test="StatesByte4 != 0.001">
				`StatesByte4` = #{StatesByte4},
			</if>
			<if test="TotalEnergy != 0.001">
				`TotalEnergy` = #{TotalEnergy},
			</if>
			<if test="GridVoltage != 0.001">
				`GridVoltage` = #{GridVoltage},
			</if>
			<if test="GridCurrent != 0.001">
				`GridCurrent` = #{GridCurrent},
			</if>
			<if test="GridPower != 0.001">
				`GridPower` = #{GridPower},
			</if>
			<if test="Frequency != 0.001">
				`Frequency` = #{Frequency},
			</if>
			<if test="Input1Power != 0.001">
				`Input1Power` = #{Input1Power},
			</if>
			<if test="Input1Voltage != 0.001">
				`Input1Voltage` = #{Input1Voltage},
			</if>
			<if test="Input1Current != 0.001">
				`Input1Current` = #{Input1Current},
			</if>
			<if test="Input2Power != 0.001">
				`Input2Power` = #{Input2Power},
			</if>
			<if test="Input2Voltage != 0.001">
				`Input2Voltage` = #{Input2Voltage},
			</if>
			<if test="Input2Current != 0.001">
				`Input2Current` = #{Input2Current},
			</if>
			<if test="InverterTemperature != 0.001">
				`InverterTemperature` = #{InverterTemperature},
			</if>
			<if test="BooseterTemperature != 0.001">
				`BooseterTemperature` = #{BooseterTemperature},
			</if>
			<if test="IslolationResistance != 0.001">
				`IslolationResistance` = #{IslolationResistance},
			</if>
			<if test="nvmActivePower != 0.001">
				`nvmActivePower` = #{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001">
				`nvmActiveEnergy` = #{nvmActiveEnergy},
			</if>
			<if test="MeasuredProduction != 0.001 and MeasuredProduction > 0">
				`MeasuredProduction` = #{MeasuredProduction},
			</if>
		</trim>
		
		
		
	</insert>

	<select id="getListTriggerFaultCode" resultType="Map" parameterType="String">
		SELECT
			l.id,
			l.id_error,
			l.id_device,
			l.`status`,
			DATE_FORMAT(l.start_date,'%Y-%m-%d %H:%i:%s') AS start_date,
			DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s') AS end_date			
		FROM
			`alert` l
			LEFT JOIN error e ON e.id = l.id_error
			WHERE l.`status` = 1
			AND e.is_delete = 0 AND e.`status` = 1
			AND l.is_delete = 0 AND l.id_device = #{id_device}
			<if test="faultCodeLevel == 1">
				AND l.id_error IN(247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,191,292,293,294,295,296,297)
			</if>
			
			<if test="faultCodeLevel == 2">
				AND l.id_error IN(298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338)
			</if>
			
			<if test="faultCodeLevel == 3">
				AND l.id_error IN(339,340,341,342,343,344,345,345,347,348,449,350,351,352,353,354,355,356,357,358,359)
			</if>
			
			<if test="faultCodeLevel == 4">
				AND l.id_error IN(443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463)
			</if>
			
			<if test="faultCodeLevel == 5">
				AND l.id_error IN(
				360,361,362,363,364,365,366,367,368,369,
				370,371,372,373,374,375,376,377,378,379,
				380,381,382,383,384,385,386,387,388,389,
				390,391,392,393,394,395,396,397,398,399,
				400,401,402,403,404,405,406,407,408,409,
				410,411,412,413,414,415,416,417,418,419,
				420,421,422,423,424,425,426,427,428,429,
				430,431,432,433,434,435,436,437,438,439,
				440,441,442
				)
			</if>
			
			
			
			
	</select>
	
	<select id="checkAlertWriteCode" resultType="Map">
    	SELECT
				m.StatesByte0 AS StatesByte0,
				m.StatesByte1 AS StatesByte1,
				m.StatesByte2 AS StatesByte2,
				m.StatesByte3 AS StatesByte3,
				m.StatesByte4 AS StatesByte4
			FROM
				${datatablename} m
			WHERE
				id_device = #{id_device}
			ORDER BY
				time DESC 
			LIMIT 20;
  	</select>
  	
  	<select id="getLastRow" resultType="com.nwm.api.entities.ModelAbbTrioClass6210Entity">
		SELECT
			dv.*,
			s.enable_alert
		FROM
			${view_tablename} dv 
			LEFT JOIN device d ON d.id = dv.id_device
			LEFT JOIN site s ON s.id = d.id_site
		WHERE
			dv.id_device = #{id_device}
			<if test="time != null" >
	        	AND dv.time <![CDATA[<]]> #{time}
	        </if>
		ORDER BY
			dv.time DESC 
			LIMIT 1
	</select>
  	
</mapper> 