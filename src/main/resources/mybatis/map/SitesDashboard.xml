<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SitesDashboard">
	<select id="getDetail" resultType="com.nwm.api.entities.SitesDevicesEntity" parameterType="com.nwm.api.entities.SitesDevicesEntity">
		SELECT
			CONCAT_WS( ", ", s.city, s.postal_code ) AS address_short,
			CONCAT_WS( ", ", s.number, s.street ) AS street_ws,
			s.id,
			SHA1(s.id) AS hash_id,
			s.id_country,
			s.id_time_zone,
			s.`name`,
			s.lat,
			s.lng,
			s.old_data,
			s.number,
			s.street,
			s.postal_code,
			s.city,
			s.state,
			DATE_FORMAT( s.commissioning, '%m/%d/%Y %H:%s:%i' ) AS commissioning,
			s.emergency_contact,
			s.ac_capacity,
			s.dc_capacity,
			s.`status`,
			s.is_delete,
			s.created_date,
			s.created_by,
			s.updated_date,
			s.updated_by,
			s.data_send_time,
			s.kiosk_view,
			DATE_FORMAT( s.built_since, '%m/%d/%Y %H:%s:%i' ) AS built_since,
			c.`name` AS country_name,
			s.gallery,
			c.localization_format,
			c.format_sql_short,
			c.format_sql_long,
			c.format_sql_string_short,
			c.format_sql_string_long,
			c.format_sql_string_mdy,
			s.data_send_time,
			t.value AS timezone_value,
			t.offset AS timezone_offset,
			s.is_rec_report,
			s.datalogger_ip,
			s.cf_start_time,
			s.cf_end_time,
			s.cf_alert_threshold,
			s.unit_type_temp,
			s.unit_wind_speed,
			IF(s.cf_email_subscribers IS NULL || s.cf_email_subscribers = '',t.cf_email_subscribers,s.cf_email_subscribers) AS cf_email_subscribers,
			g.total_error,
			s.display_time_format,
			s.display_date_format,
			d.name AS date_format,
			s.pv_model,
			s.pv_module_temperature_coeff,
			s.global_solar_irradiance_at_stc,
			s.stc_temperature,
			s.inverter_efficiency,
			s.t_avg,
			s.system_loss,
			s.min_irradiance_limit,
			s.clip,
			s.bifaciality_factor,
			s.ids_device_poa,
			s.ids_device_rpoa,
			s.ids_device_panel_temp,
			s.ids_device_ambient_temp,
			IF(v.enable_virtual_device > 0 ,1,0) AS enable_virtual_device,
			s.modules_per_string,
			s.number_of_strings,
			s.kwp_dc_for_each_solar_module,
			s.data_interval_factor,
			s.annual_pv_module_degradation,
			s.cable_losses,
			s.transformer_losses,
			s.soiling,
			s.other_losses,
			s.alert_mail_bcc,
			s.alert_mail_cc,
			h.is_hiding,
			s.table_data_report,
			s.table_data_virtual,
			s.is_show_each_meter,		
			s.expiration
		FROM
			site s 
			LEFT JOIN site_employee_map sem ON sem.id_site = s.id
			LEFT JOIN country c ON c.id = s.id_country
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			LEFT JOIN date_format d ON d.id = s.display_date_format
			
			LEFT JOIN (
				SELECT
					id_site,
					MAX(is_hiding) AS is_hiding
				FROM site_employee_map
				GROUP BY id_site
			) h ON h.id_site = s.id
			
			LEFT JOIN (
				SELECT sem.id_site, GROUP_CONCAT(e.email) AS cf_email_subscribers FROM site_employee_map sem
				LEFT JOIN employee e ON e.id = sem.id_employee
				WHERE 
				SHA1(sem.id_site) = #{hash_id}
			)t ON t.id_site = s.id
			
			LEFT JOIN(
				SELECT
					COUNT( a.id ) AS total_error,
					d.id_site 
				FROM
					device d
					LEFT JOIN alert a ON a.id_device = d.id 
					LEFT JOIN error e ON e.id = a.id_error
					LEFT JOIN site s ON s.id = d.id_site
				WHERE
					SHA1(d.id_site) = #{hash_id}
					AND d.`status` = 1 
					AND a.`status` = 1
					AND e.`status` = 1 
					AND e.is_delete = 0
					AND s.enable_alert = 1
					
			)g ON g.id_site = s.id
			
			LEFT JOIN (
				SELECT COUNT(*) AS enable_virtual_device, d.id_site FROM device d 
				WHERE d.`status` = 1 
				AND d.is_delete = 0 
				AND d.hidden = 0
				AND d.virtual_device_type IS NOT NULL
				AND d.virtual_device_type != ''
				AND SHA1(d.id_site) = #{hash_id}
			)v ON v.id_site = s.id
			
		WHERE
			SHA1(s.id) = #{hash_id}
			
			<if test="is_supper_admin != 1">
				AND sem.id_employee = #{id_employee} AND sem.is_hiding = 0
			</if>
			AND s.`status` = 1 
			AND s.is_delete = 0 GROUP BY s.id
	</select>
	
	<select id="getListDeviceIsDisableAlert" resultType="Map">
		SELECT
			d.*
			
		FROM
			device d
		WHERE
			SHA1(d.id_site) = #{hash_id} AND d.disable_alert = 1
	</select>
	
	
	<select id="getListAlertByIdDevice" resultType="Map">
		SELECT
			l.id,
			SHA1(l.id) AS hash_id,
			l.asset,
			el.name AS priority_name,
			l.capacity,
			l.`status`,
			l.alert_acknowledged,
			l.disable_notification,
			l.resolved,			
			IF(l.`status` = 1, 'Opened', 'Closed') AS status_name,
			el.`name` AS `level`,
			e.message,
			e.error_code,
			d.devicename,
			s.`name` AS site_name,
			s.id AS id_site,
			SHA1(s.id) AS hash_site_id,
			d.id as id_device,
			i.icon AS icon_alert,
			el.id AS id_error_level,
			DATE_FORMAT( CONVERT_TZ( l.start_date,'+00:00', t.`offset`) , '%m/%d/%Y %h:%i %p') AS start_date,
			DATE_FORMAT(CONVERT_TZ( l.end_date,'+00:00', t.`offset`), '%m/%d/%Y %h:%i %p') AS end_date,
			
			CASE
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 DAY ) THEN TIMESTAMPDIFF( DAY, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') )
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 HOUR ) THEN TIMESTAMPDIFF( HOUR, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 MINUTE ) THEN TIMESTAMPDIFF( MINUTE, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				ELSE 0
			END AS times_ago,

	
			CASE
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 DAY ) THEN 'day'
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 HOUR ) THEN 'hour'
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 MINUTE ) THEN 'minute' ELSE 'now'
			END AS times_ago_unit
			
			
		FROM
			`alert` l
			LEFT JOIN error e ON e.id = l.id_error
			LEFT JOIN error_level el ON el.id = e.id_error_level
			LEFT JOIN icon i ON i.id = el.id_icon
			LEFT JOIN device d ON d.id = l.id_device
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			WHERE e.`status` = 1 AND e.is_delete = 0 AND d.id = #{id_device}
			AND l.is_delete = 0 AND l.`status` = 1 AND s.enable_alert = 1
			GROUP BY l.id 
			LIMIT #{limit} OFFSET #{offset};
	</select>
	
	
	
	
	<select id="getListDeviceByIdSite" resultType="Map">
		SELECT
			d.serial_number,
			d.id,
			SHA1(d.id) AS hash_id,
			d.id_site,
			SHA1(d.id_site) AS hash_site_id,
			d.id_device_group,
			d.devicename,
			d.datatablename,
			d.id_device_type,
			d.order_id,
			dt.`name` AS device_type_name,
			dt.image,
			s.datalogger_ip,
			d.ip_address,
			IFNULL(DATE_FORMAT( CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ) , '%m-%d-%Y %h:%i %p'), 'N/A') AS last_updated,
			t.offset,
			p.totalError,
			p.id_error_level,
			d.hidden,
			CASE
			
				WHEN dg.table_name = 'model_pyranometer_poa' AND d.field_value_default = 'poa' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/mÂ²" )))
				
				WHEN dg.table_name = 'model_power_measurement_ion_7650' AND d.field_value_default = 'kWTot' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_meter_ion_8600' AND d.field_value_default = 'kWTot' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_meter_ion_8600v2' AND d.field_value_default = 'kWTot' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))

				WHEN dg.table_name = 'model_meter_ion_8600v1' AND d.field_value_default = 'kWTot' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_aes_tx_inverter' AND d.field_value_default = 'pt33' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
			
				WHEN dg.table_name = 'model_virtual_meter_or_inverter' AND d.field_value_default = 'nvmActivePower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_virtual_meter_or_inverter' AND d.field_value_default = 'nvmActiveEnergy' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "kWh" )))
				WHEN dg.table_name = 'model_virtual_meter_or_inverter' AND d.field_value_default = 'nvm_irradiance' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "W/m^2" )))
				
				WHEN dg.table_name = 'model_sma_inverter_stp62us41' AND d.field_value_default = 'GridMs_TotW' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_sma_inverter_stp30000tlus10' AND d.field_value_default = 'GridMs_TotW' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_datalogger' AND d.field_value_default = 'MemFree' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kB" )))
				
				WHEN dg.table_name = 'model_solaredge_inverter' AND d.field_value_default = 'I_AC_Power' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
			
				WHEN dg.table_name = 'model_sunny_central_class9775_inverter' AND d.field_value_default = 'ACPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_sunny_central_class9775_inverter' AND d.field_value_default = 'ACVoltage' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "V" )))
				WHEN dg.table_name = 'model_sunny_central_class9775_inverter' AND d.field_value_default = 'InteriorTemperature' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "Degrees C" )))
				
				WHEN dg.table_name = 'model_satcon_powergate_225_inverter' AND d.field_value_default = 'OutputKW' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_satcon_powergate_225_inverter' AND d.field_value_default = 'LineFreq' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Hz" )))
				WHEN dg.table_name = 'model_satcon_powergate_225_inverter' AND d.field_value_default = 'DCInputVoltage' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "V" )))
				
				WHEN dg.table_name = 'model_cell_modem' AND d.field_value_default = 'CPULoad' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "%" )))
				WHEN dg.table_name = 'model_cell_modem' AND d.field_value_default = 'Temperature' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Degrees C" )))
				WHEN dg.table_name = 'model_cell_modem' AND d.field_value_default = 'RSSI4' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", ROUND(d.field_value3, 2)))
				
				WHEN dg.table_name = 'model_adam4017ws_class8110_nelis190' AND d.field_value_default = 'POACMP11' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/m^2" )))
				WHEN dg.table_name = 'model_adam4017ws_class8110_nelis190' AND d.field_value_default = 'AmbientTemp' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Degrees C" )))
				
				
				WHEN dg.table_name = 'model_campell_scientific_meter1' AND d.field_value_default = 'Meter1_ACPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_campell_scientific_meter2' AND d.field_value_default = 'Meter2_ACPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_campell_scientific_meter3' AND d.field_value_default = 'Meter3_ACPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_campell_scientific_meter4' AND d.field_value_default = 'Meter4_ACPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
			
				WHEN dg.table_name = 'model_advanced_energy_solaron' AND d.field_value_default = 'ac_power' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_advanced_energy_solaron' AND d.field_value_default = 'ac_frequency' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "kW" )))
				WHEN dg.table_name = 'model_advanced_energy_solaron' AND d.field_value_default = 'pv_voltage' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "kW" )))
				
				WHEN dg.table_name = 'model_shark100' AND d.field_value_default = 'watts_3ph_total' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_shark100' AND d.field_value_default = 'vars_3ph_total' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "kVAR" )))
				WHEN dg.table_name = 'model_shark100' AND d.field_value_default = 'vas_3ph_total' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "kVA" )))
				
				WHEN dg.table_name = 'model_lufft_class8020' AND d.field_value_default = 'AirTemperatureActual' THEN IF(s.unit_type_temp = 2,CONCAT_WS(" ", ROUND(IFNULL((d.field_value1 * 1.8 + 32), 0 ),2), "Â°F" ), CONCAT_WS(" ", ROUND(IFNULL(d.field_value2, 0 ),2), "Â°C" ))
				WHEN dg.table_name = 'model_lufft_class8020' AND d.field_value_default = 'IrradianceActual' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "W/mÂ²" )))
				
				WHEN dg.table_name = 'model_lufft_ws501_umb_weather' AND d.field_value_default = 'AirTemperatureCActual' THEN IF(s.unit_type_temp = 2,CONCAT_WS(" ", ROUND(IFNULL((d.field_value1 * 1.8 + 32), 0 ),2), "Â°F" ), CONCAT_WS(" ", ROUND(IFNULL(d.field_value1, 0 ),2), "Â°C" ))
				WHEN dg.table_name = 'model_lufft_ws501_umb_weather' AND d.field_value_default = 'GlobalRadiation' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "W/mÂ²" )))
				
				WHEN dg.table_name = 'model_abb_trio_class6210' AND d.field_value_default = 'Input1Power' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_abb_trio_class6210' AND d.field_value_default = 'Input1Voltage' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "V" )))
				
				WHEN dg.table_name = 'model_veris_industries_e51c2_power_meter' AND d.field_value_default = 'TotalNetInstantaneousRealPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_veris_industries_e51c2_power_meter' AND d.field_value_default = 'RealPowerPhaseA' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "kW" )))
				WHEN dg.table_name = 'model_veris_industries_e51c2_power_meter' AND d.field_value_default = 'RealPowerPhaseB' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "kW" )))
				
				WHEN dg.table_name = 'model_veris_industries_e50c2a' AND d.field_value_default = 'TotalInstantaneousRealPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_veris_industries_e50c2a' AND d.field_value_default = 'RealPowerPhaseA' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "kW" )))
				WHEN dg.table_name = 'model_veris_industries_e50c2a' AND d.field_value_default = 'RealPowerPhaseB' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "kW" )))
				
				WHEN dg.table_name = 'model_imtsolar_class8000' AND d.field_value_default = 'irradiance' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/mÂ²" )))
				WHEN dg.table_name = 'model_imtsolar_class8000' AND d.field_value_default = 'tcell' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Â°C" )))
				
				WHEN dg.table_name = 'model_hukseflux_sr30d1_deviceclass_v0' AND d.field_value_default = 'IrradianceTcs' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/m^2" )))
				WHEN dg.table_name = 'model_hukseflux_sr30d1_deviceclass_v0' AND d.field_value_default = 'SensorBodyTemperature' THEN IF(s.unit_type_temp = 2,CONCAT_WS(" ", ROUND(IFNULL((d.field_value2 * 1.8 + 32), 0 ),2), "Â°F" ), CONCAT_WS(" ", ROUND(IFNULL(d.field_value2, 0 ),2), "Â°C" ))
				WHEN dg.table_name = 'model_hukseflux_sr30d1_deviceclass_v0' AND d.field_value_default = 'IrradianceUs' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "W/m^2" )))
				
				
				WHEN dg.table_name = 'model_imtsolar_tmodul_class8006' AND d.field_value_default = 'ModuleTemperature' THEN IF(s.unit_type_temp = 2,CONCAT_WS(" ", ROUND(IFNULL((d.field_value1 * 1.8 + 32), 0 ),2), "Â°F" ), CONCAT_WS(" ", ROUND(IFNULL(d.field_value1, 0 ),2), "Â°C" ))
				
				
				WHEN dg.table_name = 'model_w_kipp_zonen_rt1' AND d.field_value_default = 'SunPOATempComp' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/mÂ²" )))
				WHEN dg.table_name = 'model_w_kipp_zonen_rt1' AND d.field_value_default = 'PanelTemperature' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Â°C" )))
				
				WHEN dg.table_name = 'model_satcon_pvs357_inverter' AND d.field_value_default = 'Input_kW' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_satcon_pvs357_inverter' AND d.field_value_default = 'Output_kw' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "kW" )))
				WHEN dg.table_name = 'model_satcon_pvs357_inverter' AND d.field_value_default = 'DC_Input_Volts' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "volts" )))
				
				WHEN dg.table_name = 'model_chint_solectria_inverter_class9725' AND d.field_value_default = 'AC_ActivePower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_chint_solectria_inverter_class9725' AND d.field_value_default = 'AC_ApparentPower' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "KVA" )))
				WHEN dg.table_name = 'model_chint_solectria_inverter_class9725' AND d.field_value_default = 'PV1_Voltage' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "VDC" )))
				
				WHEN dg.table_name = 'model_kippzonen_rt1_class8009' AND d.field_value_default = 'sensor1_data' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/mÂ²" )))
				WHEN dg.table_name = 'model_kippzonen_rt1_class8009' AND d.field_value_default = 'panel_temperature' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Â°C" )))
				
				WHEN dg.table_name = 'model_ivt_solaron_ext' AND d.field_value_default = 'ac_power' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_ivt_solaron_ext' AND d.field_value_default = 'ac_frequency' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Hz" )))
				WHEN dg.table_name = 'model_ivt_solaron_ext' AND d.field_value_default = 'pv_voltage' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "VDC" )))
				
				WHEN dg.table_name = 'model_pvp_inverter' AND d.field_value_default = 'line_kw' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_pvp_inverter' AND d.field_value_default = 'dc_output_current' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Amps" )))
				WHEN dg.table_name = 'model_pvp_inverter' AND d.field_value_default = 'dc_output_voltage' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "Volts" )))
				
				WHEN dg.table_name = 'model_rt1_class30000' AND d.field_value_default = 'sensor1_data' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/mÂ²" )))
				WHEN dg.table_name = 'model_rt1_class30000' AND d.field_value_default = 'panel_temperature' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Â°C" )))
				
				WHEN dg.table_name = 'model_elkor_production_meter' AND d.field_value_default = 'ActivePowerTotal' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_elkor_production_meter' AND d.field_value_default = 'VoltageA' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Volts" )))
				WHEN dg.table_name = 'model_elkor_production_meter' AND d.field_value_default = 'VoltageB' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "Volts" )))
				
				WHEN dg.table_name = 'model_elkor_wattson_pv_meter' AND d.field_value_default = 'TotalRealPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_pvmet_100' AND d.field_value_default = 'TransientHorizontalIrradiance' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/mÂ²" )))
				WHEN dg.table_name = 'model_pvmet_100' AND d.field_value_default = 'AmbientTemperature' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Â°C" )))
				WHEN dg.table_name = 'model_pvmet_100' AND d.field_value_default = 'Temperature' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "Â°C" )))
				
				WHEN dg.table_name = 'model_pv_powered_35_50_260_500kw_inverter' AND d.field_value_default = 'OutputGeneration' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_pv_powered_35_50_260_500kw_inverter' AND d.field_value_default = 'DCInputVoltage' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "V" )))
				WHEN dg.table_name = 'model_pv_powered_35_50_260_500kw_inverter' AND d.field_value_default = 'DCInputCurrent' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "" )))
				
				WHEN dg.table_name = 'model_solectria_sgi_226ivt' AND d.field_value_default = 'ACPowerOutput' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_solectria_sgi_226ivt' AND d.field_value_default = 'DCVoltage' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "VDC" )))
				
				WHEN dg.table_name = 'model_tti_tracker' AND d.field_value_default = 'ReadAngle' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "Degrees" )))
				WHEN dg.table_name = 'model_tti_tracker' AND d.field_value_default = 'WindSpeed' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "m/s" )))
				
				WHEN dg.table_name = 'model_xantrex_gt100_250_500' AND d.field_value_default = 'ReadPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_xantrex_gt100_250_500' AND d.field_value_default = 'PVVoltage' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "V" )))
				WHEN dg.table_name = 'model_xantrex_gt100_250_500' AND d.field_value_default = 'PVCurrent' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "A" )))
				
				WHEN dg.table_name = 'model_xantrex_inverter' AND d.field_value_default = 'ReadPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_xantrex_inverter' AND d.field_value_default = 'PVVoltage' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "V" )))
				WHEN dg.table_name = 'model_xantrex_inverter' AND d.field_value_default = 'PVCurrent' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "A" )))
				
				
				WHEN dg.table_name = 'model_sungrow_umg604' AND d.field_value_default = 'M_AC_P' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_sungrow_sg110cx' AND d.field_value_default = 'P_DC' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_sungrow_sg50cx' AND d.field_value_default = 'P_DC' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))

				WHEN dg.table_name = 'model_sungrow_logger1000' AND d.field_value_default = 'TotalActivePower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))

				WHEN dg.table_name = 'model_sungrow_weather_pvmet75200' AND d.field_value_default = 'SRAD_D_H' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_sma_inverter_stp1200tlus10' AND d.field_value_default = 'GridMs_TotW' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_sma_inverter_stp1200tlus10' AND d.field_value_default = 'GridMs_Hz' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Hz" )))
				
				WHEN dg.table_name = 'model_sma_inverter_stp24ktlus10' AND d.field_value_default = 'GridMs_TotW' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_sma_inverter_stp24ktlus10' AND d.field_value_default = 'GridMs_Hz' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Hz" )))
				
				WHEN dg.table_name = 'model_ae1000nx_class9644' AND d.field_value_default = 'ACPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_ae1000nx_class9644' AND d.field_value_default = 'ACFrequency' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Hz" )))
				WHEN dg.table_name = 'model_ae1000nx_class9644' AND d.field_value_default = 'PVVoltage' THEN  (IF(d.field_value3 = -1 or d.field_value3 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value3, 2), "VDC" )))
				
				WHEN dg.table_name = 'model_sma_cluster_controller' AND d.field_value_default = 'GridMs_TotW' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_sma_cluster_controller' AND d.field_value_default = 'GridMs_Hz' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Hz" )))		
				
				WHEN dg.table_name = 'model_poa_temp' AND d.field_value_default = 'T_AMB' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "Â°C" )))
				
				WHEN dg.table_name = 'model_eri_weather_icp_class8050' AND d.field_value_default = 'solar_irradiation' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "W/mÂ²" )))
				WHEN dg.table_name = 'model_eri_weather_icp_class8050' AND d.field_value_default = 'ambient_temp' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "Â°C" )))
				
				WHEN dg.table_name = 'model_xantrex_gt500e' AND d.field_value_default = 'AC_POWER' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				WHEN dg.table_name = 'model_xantrex_gt500e' AND d.field_value_default = 'DC_POWER' THEN  (IF(d.field_value2 = -1 or d.field_value2 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value2, 2), "kW" )))
				
				WHEN dg.table_name = 'model_wattsun_tcu' AND d.field_value_default = 'ANGLE_CALC' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "Degrees" )))
				WHEN dg.table_name = 'model_wattsun_tracker' AND d.field_value_default = 'TRACKER_ANGLE' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "Degrees" )))
				
				WHEN dg.table_name = 'model_sev_sg110cx' AND d.field_value_default = 'TotalActivePower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))

				WHEN dg.table_name = 'model_elster_a1700' AND d.field_value_default = 'TotalActivePower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_ae_refusol' AND d.field_value_default = 'ACPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_dts_measurelogic_demand_meter' AND d.field_value_default = 'PowerFactor_DTS_Overall' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2) )))
				
				WHEN dg.table_name = 'model_leviton_70D48000' AND d.field_value_default = 'PowerSum' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_janitza_umg604pro' AND d.field_value_default = 'TotalPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				WHEN dg.table_name = 'model_acu_rev_production_meter' AND d.field_value_default = 'TotalRealPower' THEN  (IF(d.field_value1 = -1 or d.field_value1 IS NULL, "N/A", CONCAT_WS(" ", ROUND(d.field_value1, 2), "kW" )))
				
				ELSE "N/A"
			END AS key_indicator,
			
			CASE
				WHEN CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 DAY ) THEN TIMESTAMPDIFF( DAY, CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') )
				WHEN CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 HOUR ) THEN TIMESTAMPDIFF( HOUR, CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				WHEN CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 MINUTE ) THEN TIMESTAMPDIFF( MINUTE, CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				ELSE 0
			END AS times_ago,

	
			CASE
				WHEN d.last_updated is null AND d.id_device_type != 12 THEN 'N/A'
				WHEN CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 DAY ) THEN 'day'
				WHEN CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 HOUR ) THEN 'hour'
				WHEN CONVERT_TZ( d.last_updated, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 MINUTE ) THEN 'minute' ELSE 'now'
			END AS times_ago_unit,
			d.field_value_default
			
		FROM
			device d
			LEFT JOIN device_group dg ON dg.id = d.id_device_group
			LEFT JOIN device_type dt ON dt.id = d.id_device_type
			LEFT JOIN site s ON d.id_site = s.id
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			LEFT JOIN(
				SELECT 
					a.id_device,
					e.id_error_level,
					COUNT(a.id) AS totalError
				FROM
					alert a
					LEFT JOIN device d ON d.id = a.id_device
					LEFT JOIN error e ON e.id = a.id_error
					LEFT JOIN site s ON s.id = d.id_site
					
				WHERE
					a.`status` = 1
					AND a.is_delete = 0
					AND e.`status` = 1
					AND e.is_delete = 0
					AND d.`status` = 1
					AND s.enable_alert = 1
					AND d.is_delete = 0
					
					AND d.id_site = #{id_site}
				GROUP BY d.id
			) p ON p.id_device = d.id
			
		WHERE
			d.id_site = #{id_site} AND d.`status` = 1 AND d.is_delete = 0
			AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
			
		ORDER BY
	        <choose> 
	       		<when test="sort_column == 'order_id'">
	                d.order_id ${order_by}
	            </when>
	             
	            <when test="sort_column == 'devicename'">
	                d.devicename ${order_by}
	            </when>     
	                
	            <when test="sort_column == 'key_indicator'">
	                key_indicator ${order_by}
	            </when>
	            
	            <when test="sort_column == 'times_ago'">
	                last_updated ${order_by}
	            </when>
	            
	            <otherwise>
			      d.order_id ASC
			    </otherwise>                                                  
	        </choose>
	</select>
	
  	
  	<select id="getListDeviceTypeMeter" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.devicename AS export_devicename,
			d.datatablename,
			d.id_site
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
		WHERE
			dt.id = 3 
			AND d.id_site = #{id_site}
			AND d.`status` = 1 
			AND d.is_delete = 0
		GROUP BY d.id_device_type
	</select>
	
	<select id="getListDeviceTypeInverter" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.devicename AS export_devicename,
			d.datatablename,
			d.id_site
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
		WHERE
			dt.id = 1
			AND d.id_site = #{id_site}
			AND d.`status` = 1 
			AND d.is_delete = 0
		GROUP BY d.id_device_type
	</select>
	
  	<select id="getGeneration" resultType="Map" >
		SELECT
			s.id,
			s.`name`,
			s.dc_capacity,
			s.ac_capacity,
			s.lat,
			s.lng,
			s.data_send_time,
			t.`offset`,
			IFNULL(this_month.nvmActiveEnergy, 0) AS energy_this_month,
			
			ROUND(today.power_today, 1) AS power_today,
			IFNULL(today.nvmActiveEnergy, 0) AS totalGeneration
		FROM
			site s
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			LEFT JOIN(
				SELECT 
					d.id_site,
					IF( (SUM(IF(d.id_device_type = 3, d.energy_today, 0))) > 0, (SUM(IF(d.id_device_type = 3, d.energy_today, 0))), (SUM(IF(d.id_device_type = 1, d.energy_today, 0))) ) AS nvmActiveEnergy,
					IF( (SUM(IF(d.id_device_type = 3, d.last_value, 0))) > 0, (SUM(IF(d.id_device_type = 3, d.last_value, 0))), (SUM(IF(d.id_device_type = 1, d.last_value, 0))) ) AS power_today
					FROM device d 
					WHERE 
					d.`status` = 1 
					AND d.is_delete = 0
					AND d.id_site  = #{id_site}
			)today ON today.id_site = s.id
			
			LEFT JOIN(
				SELECT
					s.id,
					IF( (SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0))) > 0, (SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0))), (SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0))) ) AS nvmActiveEnergy
				FROM
					${table_data_report} sdr
					LEFT JOIN device d ON d.id = sdr.id_device
					LEFT JOIN site s ON s.id = d.id_site
					LEFT JOIN time_zone t ON t.id = s.id_time_zone
				WHERE
					s.`status` = 1
					AND d.`status` = 1
					AND d.id_site  = #{id_site}
					AND s.is_delete = 0
					AND d.is_delete = 0
					AND (sdr.time BETWEEN date_add(date_add(LAST_DAY(CONVERT_TZ ( NOW(), '+00:00', t.`offset`)),interval 1 DAY),interval -1 MONTH) AND LAST_DAY(CONVERT_TZ ( NOW(), '+00:00', t.`offset`)) )
					GROUP BY s.id
			)this_month ON this_month.id = s.id
			
						
		WHERE
					s.id = #{id_site}
					AND s.`status` = 1 
					AND s.is_delete = 0
					AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
	</select>
	
	<select id="getDeviceTableListBySite" resultType="com.nwm.api.entities.SitesDevicesEntity">
		SELECT
			d.id,
			d.id_site,
			d.view_tablename,
			d.job_tablename,
			d.id_device_type
		FROM device d
		WHERE
			d.id_site = #{id_site}
			AND d.`status` = 1
			AND d.is_delete = 0
	</select>

	<select id="getDeviceStatus" resultType="Map">
		SELECT
			d.id,
			d.id_site,
			d.devicename,
			d.id_device_type,
			d.lat,
			d.lng,
			d.rating_ac_power,
			dt.image,
			s.data_send_time,
			t.active_power,
			CASE
			 WHEN s.data_send_time = 1 THEN IF(TIMESTAMPDIFF(MINUTE, t.time, NOW()) <![CDATA[<]]> (5 + 2), "online", "offline")
			 WHEN s.data_send_time = 2 THEN IF(TIMESTAMPDIFF(MINUTE, t.time, NOW()) <![CDATA[<]]> (15 + 2), "online", "offline")
			 WHEN s.data_send_time = 3 THEN IF(TIMESTAMPDIFF(MINUTE, t.time, NOW()) <![CDATA[<]]> (1 + 2), "online", "offline")
			END AS comm_status,
			IF ((t.active_power IS NULL) OR (d.rating_ac_power IS NULL) OR (d.rating_ac_power = 0), NULL, t.active_power / d.rating_ac_power * 100) AS percent_power_status
		FROM
			device d
			LEFT JOIN device_type dt ON dt.id = d.id_device_type
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN (
				SELECT
					id_device,
					<choose>
						<when test="id_device_type == 1 or id_device_type == 3 or id_device_type == 7 or id_device_type == 8 or id_device_type == 9">
							nvmActivePower
						</when>
						<otherwise>
							NULL
						</otherwise>
					</choose> AS active_power,
					time
				FROM
					${view_tablename}
				WHERE id_device = #{id}
				ORDER BY time DESC
				LIMIT 1
			) t ON t.id_device = d.id
		WHERE
			d.id_site = #{id_site}
			AND d.id = #{id}
			AND d.`status` = 1
			AND d.is_delete = 0
	</select>
	
	<select id="getLastUpdated" resultType="Map">
		SELECT
			<choose>
				<when test="id_device_type == 1">
					(IF(dv.nvmActivePower = -1 or dv.nvmActivePower IS NULL, "N/A", CONCAT_WS(" ", ROUND(dv.nvmActivePower, 2), "kW" )))
				</when>
				<when test="id_device_type == 3">
					(IF(dv.nvmActivePower = -1 or dv.nvmActivePower IS NULL, "N/A", CONCAT_WS(" ", ROUND(dv.nvmActivePower, 2), "kW" )))
				</when>
				<when test="id_device_type == 4">
					(IF(dv.nvm_irradiance = -1 or dv.nvm_irradiance IS NULL, "N/A", CONCAT_WS(" ", ROUND(dv.nvm_irradiance, 2), "W/mÂ²" )))
				</when>
				<when test="id_device_type == 12">
					(IF(dv.nvm_irradiance = -1 or dv.nvmActivePower IS NULL, "N/A", CONCAT_WS(" ", ROUND(dv.nvmActivePower, 2), "kW" )))
				</when>
				<otherwise>
					"N/A"
				</otherwise>
			</choose> AS key_indicator,
			
			IFNULL(DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', #{offset} ) , '%m-%d-%Y %h:%i %p'), 'N/A') AS time
			
		FROM
			${datatablename} dv

		WHERE dv.id_device = #{id}
		<if test="id_device_type == 1 or id_device_type == 3">
				AND dv.error = 0 AND dv.nvmActivePower IS NOT NULL
		</if>
		
		<if test="id_device_type == 4">
				AND dv.error = 0 AND dv.nvm_irradiance IS NOT NULL
		</if>
		
		
		ORDER BY dv.time DESC
		LIMIT 1
	</select>
</mapper>