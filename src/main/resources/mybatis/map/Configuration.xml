<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Configuration">
	<select id="getDetail" resultType="com.nwm.api.entities.ConfigurationEntity" parameterType="com.nwm.api.entities.ConfigurationEntity">
		SELECT 
			s.*
		FROM site s
		WHERE SHA1(s.id) = #{hash_id} AND s.is_delete = 0 AND s.`status` = 1 LIMIT 1
	</select>
	
	
	<select id="getConfigEstimated" resultType="com.nwm.api.entities.ConfigurationEntity" parameterType="com.nwm.api.entities.ConfigurationEntity">
    	SELECT *
		FROM energy_expectations s  WHERE SHA1(s.id_site) = #{hash_id} LIMIT 1;
  	</select>
  	
  	
  	<select id="getListConfigExpectation" resultType="Map" >
    	SELECT *
		FROM energy_expectations s  WHERE SHA1(s.id_site) = #{hash_id};
  	</select>
  	
  	
  	
  	<insert id="insertConfiguration" parameterType="com.nwm.api.entities.ConfigurationEntity">
		INSERT INTO  `energy_expectations`(
			`id_site`,
			`year`,
			`jan`,
			`feb`,
			`mar`,
			`apr`,
			`may`,
			`jun`,
			`jul`,
			`aug`,
			`sep`,
			`oct`,
			`nov`,
			`dec`
		)VALUES
			<foreach collection="dataExpec" item="item" index="index" separator=",">
	            (
	            #{item.id_site},
				#{item.year},
				#{item.jan},
				#{item.feb},
				#{item.mar},
				#{item.apr},
				#{item.may},
				#{item.jun},
				#{item.jul},
				#{item.aug},
				#{item.sep},
				#{item.oct},
				#{item.nov},
				#{item.dec}
				)
	       </foreach>
	</insert>
	
	
	<update id="updateConfiguration">
		UPDATE `energy_expectations`
		SET
			`year` = #{year},
			`jan` = #{jan},
			`feb` = #{feb},
			`mar` = #{mar},
			`apr` = #{apr},
			`may` = #{may},
			`jun` = #{jun},
			`jul` = #{jul},
			`aug` = #{aug},
			`sep` = #{sep},
			`oct` = #{oct},
			`nov` = #{nov},
			`dec` = #{dec},
			`yearly_egrade_default` = #{yearly_egrade_default},
			`yearly_egrade_two` = #{yearly_egrade_two}
			
			
		WHERE
			`id_site` = #{id_site}
	</update>
	
	
	<update id="updateRowConfiguration">
		UPDATE `energy_expectations`
		SET
			`jan` = #{jan},
			`feb` = #{feb},
			`mar` = #{mar},
			`apr` = #{apr},
			`may` = #{may},
			`jun` = #{jun},
			`jul` = #{jul},
			`aug` = #{aug},
			`sep` = #{sep},
			`oct` = #{oct},
			`nov` = #{nov},
			`dec` = #{dec}
		WHERE
			`id_site` = #{id_site} AND `year` = #{year}
	</update>
	
	
	
	<delete id = "deleteConfigExpectation" parameterType = "int">
		DELETE from `energy_expectations` WHERE `id_site` = #{id};
	</delete>
	
	
	<delete id = "deleteRowConfigExpectation">
		DELETE from `energy_expectations` WHERE `id_site` = #{id_site} AND `year` = #{year};
	</delete>
	
	<select id="getListDeviceTypeMeter" resultType="Map">
		SELECT
			d.id,
			d.id_site,
			d.devicename,
			d.datatablename,
			d.devicename AS export_devicename,
			dg.table_name
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
			LEFT JOIN device_group dg ON dg.id = d.id_device_group
		WHERE
			dt.id = 3 
			AND d.id_site = #{id_site}
			AND d.`status` = 1 
			AND d.is_delete = 0
	</select>
	
	<select id="getListDeviceTypeInverter" resultType="Map">
		SELECT
			d.id,
			d.id_site,
			d.devicename,
			d.datatablename,
			d.devicename AS export_devicename,
			dg.table_name
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
			LEFT JOIN device_group dg ON dg.id = d.id_device_group
		WHERE
			dt.id = 1 
			AND d.id_site = #{id_site}
			AND d.`status` = 1 
			AND d.is_delete = 0
	</select>
	
	
	
	<select id="getDataMeterRunReport" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActiveEnergy ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.year,
			t.month
			
		FROM
			(
				<foreach collection="dataDevices" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						SUM(m.nvmActiveEnergy) AS nvmActiveEnergy,
						m.year,
						m.month
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%b. %Y' ) AS categories_time,
							ROUND(( MAX( dv.nvmActiveEnergy ) - MIN( dv.nvmActiveEnergy ) ), 1 ) AS nvmActiveEnergy,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS year,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%b' ) AS month
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							d.id = #{item.id}
							AND d.id_device_type = 3
							AND dv.nvmActiveEnergy > 0
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{date_from} AND #{date_to})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataInverterRunReport" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActiveEnergy ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.year,
			t.month
			
		FROM
			(
				<foreach collection="dataDevices" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						SUM(m.nvmActiveEnergy) AS nvmActiveEnergy,
						m.year,
						m.month
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%b. %Y' ) AS categories_time,
							ROUND(( MAX( dv.nvmActiveEnergy ) - MIN( dv.nvmActiveEnergy ) ), 1 ) AS nvmActiveEnergy,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS year,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%b' ) AS month
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							d.id = #{item.id}
							AND d.id_device_type = 1
							AND dv.nvmActiveEnergy > 0
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{date_from} AND #{date_to})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
</mapper>