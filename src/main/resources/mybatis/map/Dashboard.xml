<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dashboard">
	<resultMap id="DashboardMap"
		type="com.nwm.api.entities.AlertEntity">
		<result property="id" column="id" />
		<result property="id_customer" column="id_customer" />
		<result property="id_device" column="id_device" />
		<result property="id_error" column="id_error" />
		<result property="start_date" column="start_date" />
		<result property="end_date" column="end_date" />
		<result property="asset" column="asset" />
		<result property="capacity" column="capacity" />
		<result property="status" column="status" />
		<result property="is_delete" column="is_delete" />
		<result property="created_date" column="created_date" />
		<result property="created_by" column="created_by" />
		<result property="updated_date" column="updated_date" />
		<result property="updated_by" column="updated_by" />
		<result property="id_site" column="id_site" />
		<result property="totalRecord" column="totalRecord" />
		<result property="current_time" column="current_time" />
		<result property="user_history" column="user_history" />
		
	</resultMap>
	
	<sql id="domainCondition">
		<choose> 
       		<when test="domain == 'test.nextwavemonitoring.com'">
                AND d.show_on_domain IN(1,2,4)
            </when>
             
            <when test="domain == 'staging.nextwavemonitoring.com' || domain =='demo.nextwavemonitoring.com'">
                AND d.show_on_domain IN(1,3,4,7,5)
            </when>
            
            <when test="domain == 'nextwavemonitoring.com'">
                AND d.show_on_domain IN(1,5,7)
            </when>
            
            <when test="domain == 'buildings.nextwavemonitoring.com'">
                AND d.show_on_domain IN(1,6,7)
            </when>
            
            <otherwise>
		      AND d.show_on_domain IN(1)
		    </otherwise>                                                  
        </choose>
	</sql>
	
	<select id="getList" resultType="Map" >
		SELECT
			l.id,
			l.asset,
			el.name AS priority_name,
			l.capacity,
			l.`status`,
			l.alert_acknowledged,
			l.disable_notification,
			l.resolved,
			IF(l.`status` = 1, 'Opened', 'Closed') AS status_name,
			el.`name` AS `level`,
			e.message,
			e.error_code,
			d.devicename,
			<include refid="com.nwm.common.siteName"/> AS site_name,
			s.id AS id_site,
			SHA1(s.id) AS hash_id,
			d.id as id_device,
			h.is_hiding,
			i.icon AS icon_alert,
			el.id AS id_error_level,
			DATE_FORMAT( CONVERT_TZ( l.start_date, t.`offset`, #{offset_timezone} ), #{format_sql_long} ) AS start,
			DATE_FORMAT( CONVERT_TZ( l.start_date,'+00:00', t.`offset`) , '%m/%d/%Y %H:%i %p') AS start_date,
			DATE_FORMAT(CONVERT_TZ( l.end_date,'+00:00', t.`offset`), '%m/%d/%Y %H:%i %p') AS end_date,
			
			CASE
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 DAY ) THEN TIMESTAMPDIFF( DAY, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') )
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 HOUR ) THEN TIMESTAMPDIFF( HOUR, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 MINUTE ) THEN TIMESTAMPDIFF( MINUTE, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				ELSE 0
			END AS times_ago,

	
			CASE
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 DAY ) THEN 'day'
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 HOUR ) THEN 'hour'
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 MINUTE ) THEN 'minute' ELSE 'now'
			END AS times_ago_unit,
			
			
			<include refid="com.nwm.common.keyIndicatorField"/>
			
			
			
		FROM
			`alert` l
			LEFT JOIN error e ON e.id = l.id_error
			LEFT JOIN error_level el ON el.id = e.id_error_level
			LEFT JOIN icon i ON i.id = el.id_icon
			LEFT JOIN device d ON d.id = l.id_device
			LEFT JOIN device_group dg ON dg.id = d.id_device_group
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			LEFT JOIN (
				SELECT
					id_site,
					MAX(is_hiding) AS is_hiding
				FROM site_employee_map
				GROUP BY id_site
			) h ON h.id_site = s.id
		WHERE
			e.`status` = 1
			AND e.is_delete = 0
			AND l.is_delete = 0
			AND l.status = 1
			AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
			
			<if test="id_sites != null and !id_sites.isEmpty()">
				AND s.id IN  (
					<foreach item="item" index="index" collection="id_sites" separator=" , ">
						#{item.id}
					</foreach>
				)
			</if>
			
			<include refid="domainCondition"/>
	        
	        <if test="!isUserNW.booleanValue()">
				AND el.id != 14
			</if>
		GROUP BY l.id 
			
		ORDER BY
			<choose>  
	            <when test="sort_column == 'id'">
	                l.id ${order_by}
	            </when> 
	                
	            
	            <when test="sort_column == 'error_code'">
	                e.error_code ${order_by}
	            </when>
	            
	            <when test="sort_column == 'site_name'">
	                s.`name` ${order_by}
	            </when> 
	            
	            <when test="sort_column == 'devicename'">
	                d.`devicename` ${order_by}
	            </when> 
	            
	            <when test="sort_column == 'key_indicator'">
	                key_indicator ${order_by}
	            </when> 
	            
	            <when test="sort_column == 'start_date'">
	                l.start_date ${order_by}
	            </when> 
	            
	            <when test="sort_column == 'message'">
	                e.message ${order_by}
	            </when>
	            
	            
	            <otherwise>
			      l.start_date DESC
			    </otherwise>                                                  
	        </choose>
	        
	</select>
	
	
	<select id="getListActualvsExpected" resultType="Map" parameterType="String" >
		SELECT
			s.id AS id_site,
			<include refid="com.nwm.common.siteName"/> AS site_name,
			SHA1(s.id) AS hash_id,
			s.dc_capacity,
			meter.power_today_meter,
			inv.power_today_inverter,
			ROUND(IF(meter.power_today_meter >= 0 ,meter.power_today_meter,inv.power_today_inverter), 1) AS power_today,
			ep.expected,
			h.is_hiding,
			ROUND((IF(meter.power_today_meter >= 0 ,meter.power_today_meter,inv.power_today_inverter) / ep.expected)*100, 1)AS a_e 
		
		FROM
			`site` s
			LEFT JOIN (
				SELECT 
					SUM(d.last_value) AS power_today_meter,
					d.id_site
				FROM
					device d
					LEFT JOIN site s ON s.id = d.id_site
					LEFT JOIN time_zone t ON t.id = s.id_time_zone
				WHERE
					d.id_device_type IN (3,7,9)
					AND d.is_excluded_meter = 0
					AND d.`status` = 1 
					AND d.`is_delete` = 0
					<include refid="domainCondition"/>
					AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
				GROUP BY d.id_site
			)meter ON meter.id_site = s.id
			
			LEFT JOIN (
				SELECT 
					SUM(d.last_value) AS power_today_inverter,
					d.id_site
				FROM
					device d
					LEFT JOIN site s ON s.id = d.id_site
					LEFT JOIN time_zone t ON t.id = s.id_time_zone
				WHERE
					d.id_device_type = 1
					AND d.`status` = 1 
					AND d.`is_delete` = 0
					<include refid="domainCondition"/>
					AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
				GROUP BY d.id_site
			)inv ON inv.id_site = s.id
			
			LEFT JOIN (
				SELECT
					ee.id_site, 
					ee.`year`,
					CASE
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Jan' THEN ROUND((((ee.jan * 1000)/31) / (8*0.75))/1000,1)
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Feb' THEN ROUND((((ee.feb * 1000)/28) / (8*0.75))/1000,1)
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Mar' THEN ROUND((((ee.mar * 1000)/31) / (8*0.75))/1000,1)
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Apr' THEN ROUND((((ee.apr * 1000)/30) / (8*0.75))/1000,1) 
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'May' THEN ROUND((((ee.may * 1000)/31) / (8*0.75))/1000,1) 
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Jun' THEN ROUND((((ee.jun * 1000)/30) / (8*0.75))/1000,1) 
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Jul' THEN ROUND((((ee.jul * 1000)/31) / (8*0.75))/1000,1) 
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Aug' THEN ROUND((((ee.aug * 1000)/31) / (8*0.75))/1000,1) 
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Sep' THEN ROUND((((ee.sep * 1000)/30) / (8*0.75))/1000,1) 
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Oct' THEN ROUND((((ee.oct * 1000)/31) / (8*0.75))/1000,1) 
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Nov' THEN ROUND((((ee.nov * 1000)/30) / (8*0.75))/1000 ,1)
						WHEN DATE_FORMAT('2022-08-10', '%b') = 'Dec' THEN ROUND((((ee.`dec` * 1000)/31) / (8*0.75))/1000,1) 
						ELSE 0
				END AS expected

				FROM
					energy_expectations ee 
					LEFT JOIN site s ON s.id = ee.id_site
					LEFT JOIN time_zone t ON t.id = s.id_time_zone
				WHERE
					ee.`year` = DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d')	
					AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
			)ep ON ep.id_site = s.id
			
			LEFT JOIN (
				SELECT
					id_site,
					MAX(is_hiding) AS is_hiding
				FROM site_employee_map
				GROUP BY id_site
			) h ON h.id_site = s.id
			
			WHERE s.`status` = 1 AND s.is_delete = 0
			<if test="id_sites != null and !id_sites.isEmpty()">
				AND s.id IN  (
					<foreach item="item" index="index" collection="id_sites" separator=" , ">
						#{item.id}
					</foreach>
				)
			</if>
			
			GROUP BY s.id
			
			ORDER BY
	        <choose>  
	            <when test="sort_column == 'site_name'">
	                s.name ${order_by}
	            </when> 
	                
	            
	            <when test="sort_column == 'power_today'">
	                power_today ${order_by}
	            </when>
	            
	            <when test="sort_column == 'expected'">
	                ep.expected ${order_by}
	            </when> 
	            
	            <when test="sort_column == 'a_e'">
	                a_e ${order_by}
	            </when> 
	            
	            <otherwise>
			      s.id DESC
			    </otherwise>                                                  
	        </choose>
	</select>
	
	
	
	<select id="getAlertSummary" resultType="com.nwm.api.entities.AlertEntity" parameterType="com.nwm.api.entities.AlertEntity">
		SELECT (
			SELECT
				COUNT( e.id_error_level ) AS lowPriority 
			FROM
				alert a
				LEFT JOIN device d ON d.id = a.id_device
				LEFT JOIN error e ON a.id_error = e.id 
				LEFT JOIN site s ON s.id = d.id_site
				LEFT JOIN time_zone t ON t.id = s.id_time_zone
			WHERE
				e.id_error_level = 13
				AND a.`status` = 1 
				AND e.`status` = 1
				AND a.`is_delete` = 0
				AND e.`is_delete` = 0
				AND d.`status` = 1
				AND d.`is_delete` = 0
				<include refid="domainCondition"/>
				AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
				<if test="id_sites != null and !id_sites.isEmpty()">
					AND d.id_site IN  (
						<foreach item="item" index="index" collection="id_sites" separator=" , ">
							#{item.id}
						</foreach>
					)
				</if>
			GROUP BY
				e.id_error_level
		) AS lowPriority,
		
		(
			SELECT
				COUNT( e.id_error_level ) AS highPriority 
			FROM
				alert a
				LEFT JOIN error e ON a.id_error = e.id 
				LEFT JOIN device d ON d.id = a.id_device
				LEFT JOIN site s ON s.id = d.id_site
				LEFT JOIN time_zone t ON t.id = s.id_time_zone
			WHERE
				e.id_error_level = 11
				AND a.`status` = 1 
				AND e.`status` = 1 
				AND a.`is_delete` = 0
				AND e.`is_delete` = 0
				AND d.`status` = 1
				AND d.`is_delete` = 0 
				<include refid="domainCondition"/>
				AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
				<if test="id_sites != null and !id_sites.isEmpty()">
					AND d.id_site IN  (
						<foreach item="item" index="index" collection="id_sites" separator=" , ">
							#{item.id}
						</foreach>
					)
				</if>
			GROUP BY
				e.id_error_level
		) AS highPriority,
		
		
		(
			SELECT
				COUNT(*) AS totalError 
			FROM
				alert a
				LEFT JOIN error e ON a.id_error = e.id 
				LEFT JOIN device d ON d.id = a.id_device
				LEFT JOIN site s ON s.id = d.id_site
				LEFT JOIN time_zone t ON t.id = s.id_time_zone
			WHERE
				a.`status` = 1 
				AND e.`status` = 1 
				AND a.`is_delete` = 0
				AND e.`is_delete` = 0
				AND d.`status` = 1
				AND d.`is_delete` = 0
				<include refid="domainCondition"/>
				AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
				<if test="id_sites != null and !id_sites.isEmpty()">
					AND d.id_site IN  (
						<foreach item="item" index="index" collection="id_sites" separator=" , ">
							#{item.id}
						</foreach>
					)
				</if>
		) AS totalError,
		
		
		(
			SELECT
				IFNULL(ROUND(SUM(IF(meter.generationNow >= 0, meter.generationNow, inv.generationNow)), 2), 0) AS generationNow
			FROM
				site s
				LEFT JOIN time_zone t ON t.id = s.id_time_zone
				LEFT JOIN (
					SELECT 
						SUM(d.last_value) AS generationNow,
						d.id_site
					FROM
						device d
					WHERE
						d.id_device_type IN (3,7,9)
						AND d.is_excluded_meter = 0
						AND d.`status` = 1 
						AND d.`is_delete` = 0
						<include refid="domainCondition"/>
					GROUP BY
						d.id_site
				) meter ON meter.id_site = s.id
				LEFT JOIN (
					SELECT 
						SUM(d.last_value) AS generationNow,
						d.id_site
					FROM
						device d
					WHERE
						d.id_device_type = 1
						AND d.`status` = 1 
						AND d.`is_delete` = 0
						<include refid="domainCondition"/>
					GROUP BY
						d.id_site
				) inv ON inv.id_site = s.id
			WHERE 
				s.`status` = 1
				AND s.`is_delete` = 0
				AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
				<if test="id_sites != null and !id_sites.isEmpty()">
					AND s.id IN  (
						<foreach item="item" index="index" collection="id_sites" separator=" , ">
							#{item.id}
						</foreach>
					)
				</if>
		) AS generationNow,
		
		
		(
			SELECT
			COUNT(s.id) AS totalSite
		FROM
			site s
			WHERE s.`status` = 1
				<if test="id_sites != null and !id_sites.isEmpty()">
					AND s.id IN  (
						<foreach item="item" index="index" collection="id_sites" separator=" , ">
							#{item.id}
						</foreach>
					)
				</if>
		) AS totalSite,
		
		(
			SELECT
				SUM(s.dc_capacity) AS ratedDCCapacity
			FROM
				site s
			WHERE s.`status` = 1
				<if test="id_sites != null and !id_sites.isEmpty()">
					AND s.id IN  (
						<foreach item="item" index="index" collection="id_sites" separator=" , ">
							#{item.id}
						</foreach>
					)
				</if>
		) AS ratedDCCapacity
		
		
		
		
		
		
				
  	</select>
	

</mapper>