<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ModelElkorWattsonPVMeter">
	<resultMap id="ModelElkorWattsonPVMeterMap"
		type="com.nwm.api.entities.ModelElkorWattsonPVMeterEntity">
		<result property="time" column="time" />
		<result property="id_device" column="id_device" />
		<result property="error" column="error" />
		<result property="low_alarm" column="low_alarm" />
		<result property="high_alarm" column="high_alarm" />

		<result property="TotalEnergyConsumption"
			column="TotalEnergyConsumption" />
		<result property="TotalRealPower" column="TotalRealPower" />
		<result property="TotalReactivePower"
			column="TotalReactivePower" />
		<result property="TotalApparentPower"
			column="TotalApparentPower" />
		<result property="AverageVoltageLN" column="AverageVoltageLN" />
		<result property="AverageVoltageLL" column="AverageVoltageLL" />
		<result property="AverageCurrent" column="AverageCurrent" />
		<result property="TotalSystemPowerFactor"
			column="TotalSystemPowerFactor" />
		<result property="Frequency" column="Frequency" />
		<result property="SlidingWindowRealPowerDemand"
			column="SlidingWindowRealPowerDemand" />
		<result property="VoltageAN" column="VoltageAN" />
		<result property="VoltageBN" column="VoltageBN" />
		<result property="VoltageCN" column="VoltageCN" />
		<result property="VoltageAB" column="VoltageAB" />
		<result property="VoltageBC" column="VoltageBC" />
		<result property="VoltageAC" column="VoltageAC" />
		<result property="CurrentA" column="CurrentA" />
		<result property="CurrentB" column="CurrentB" />
		<result property="CurrentC" column="CurrentC" />
		<result property="RealPowerA" column="RealPowerA" />
		<result property="RealPowerB" column="RealPowerB" />
		<result property="RealPowerC" column="RealPowerC" />
		<result property="ReactivePowerA" column="ReactivePowerA" />
		<result property="ReactivePowerB" column="ReactivePowerB" />
		<result property="ReactivePowerC" column="ReactivePowerC" />
		<result property="ApparentPowerA" column="ApparentPowerA" />
		<result property="ApparentPowerB" column="ApparentPowerB" />
		<result property="ApparentPowerC" column="ApparentPowerC" />
		<result property="PowerFactorA" column="PowerFactorA" />
		<result property="PowerFactorB" column="PowerFactorB" />
		<result property="PowerFactorC" column="PowerFactorC" />
		<result property="nvmActivePower" column="nvmActivePower" />
		<result property="nvmActiveEnergy" column="nvmActiveEnergy" />
		<result property="MeasuredProduction" column="MeasuredProduction" />
		<result property="datatablename" column="datatablename" />
		<result property="view_tablename" column="view_tablename" />
		<result property="job_tablename" column="job_tablename" />



	</resultMap>

	<insert id="insertModelElkorWattsonPVMeter"
		useGeneratedKeys="true" keyProperty="time">
		INSERT INTO `${datatablename}`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="time != null">
				`time`,
			</if>
			<if test="id_device != 0.001">
				`id_device`,
			</if>
			<if test="error != 0.001">
				`error`,
			</if>
			<if test="low_alarm != 0.001">
				`low_alarm`,
			</if>
			<if test="high_alarm != 0.001">
				`high_alarm`,
			</if>
			<if test="TotalEnergyConsumption != 0.001">
				`TotalEnergyConsumption`,
			</if>
			<if test="TotalRealPower != 0.001">
				`TotalRealPower`,
			</if>
			<if test="TotalReactivePower != 0.001">
				`TotalReactivePower`,
			</if>
			<if test="TotalApparentPower != 0.001">
				`TotalApparentPower`,
			</if>
			<if test="AverageVoltageLN != 0.001">
				`AverageVoltageLN`,
			</if>
			<if test="AverageVoltageLL != 0.001">
				`AverageVoltageLL`,
			</if>
			<if test="AverageCurrent != 0.001">
				`AverageCurrent`,
			</if>
			<if test="TotalSystemPowerFactor != 0.001">
				`TotalSystemPowerFactor`,
			</if>
			<if test="Frequency != 0.001">
				`Frequency`,
			</if>
			<if test="SlidingWindowRealPowerDemand != 0.001">
				`SlidingWindowRealPowerDemand`,
			</if>
			<if test="VoltageAN != 0.001">
				`VoltageAN`,
			</if>
			<if test="VoltageBN != 0.001">
				`VoltageBN`,
			</if>
			<if test="VoltageCN != 0.001">
				`VoltageCN`,
			</if>
			<if test="VoltageAB != 0.001">
				`VoltageAB`,
			</if>
			<if test="VoltageBC != 0.001">
				`VoltageBC`,
			</if>
			<if test="VoltageAC != 0.001">
				`VoltageAC`,
			</if>
			<if test="CurrentA != 0.001">
				`CurrentA`,
			</if>
			<if test="CurrentB != 0.001">
				`CurrentB`,
			</if>
			<if test="CurrentC != 0.001">
				`CurrentC`,
			</if>
			<if test="RealPowerA != 0.001">
				`RealPowerA`,
			</if>
			<if test="RealPowerB != 0.001">
				`RealPowerB`,
			</if>
			<if test="RealPowerC != 0.001">
				`RealPowerC`,
			</if>
			<if test="ReactivePowerA != 0.001">
				`ReactivePowerA`,
			</if>
			<if test="ReactivePowerB != 0.001">
				`ReactivePowerB`,
			</if>
			<if test="ReactivePowerC != 0.001">
				`ReactivePowerC`,
			</if>
			<if test="ApparentPowerA != 0.001">
				`ApparentPowerA`,
			</if>
			<if test="ApparentPowerB != 0.001">
				`ApparentPowerB`,
			</if>
			<if test="ApparentPowerC != 0.001">
				`ApparentPowerC`,
			</if>
			<if test="PowerFactorA != 0.001">
				`PowerFactorA`,
			</if>
			<if test="PowerFactorB != 0.001">
				`PowerFactorB`,
			</if>
			<if test="PowerFactorC != 0.001">
				`PowerFactorC`,
			</if>
			<if test="nvmActivePower != 0.001">
				`nvmActivePower`,
			</if>
			<if test="nvmActiveEnergy != 0.001">
				`nvmActiveEnergy`,
			</if>
			<if test="MeasuredProduction != 0.001">
				`MeasuredProduction`,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="time != null">
				#{time},
			</if>
			<if test="id_device != 0.001">
				#{id_device},
			</if>
			<if test="error != 0.001">
				#{error},
			</if>
			<if test="low_alarm != 0.001">
				#{low_alarm},
			</if>
			<if test="high_alarm != 0.001">
				#{high_alarm},
			</if>
			<if test="TotalEnergyConsumption != 0.001">
				#{TotalEnergyConsumption},
			</if>
			<if test="TotalRealPower != 0.001">
				#{TotalRealPower},
			</if>
			<if test="TotalReactivePower != 0.001">
				#{TotalReactivePower},
			</if>
			<if test="TotalApparentPower != 0.001">
				#{TotalApparentPower},
			</if>
			<if test="AverageVoltageLN != 0.001">
				#{AverageVoltageLN},
			</if>
			<if test="AverageVoltageLL != 0.001">
				#{AverageVoltageLL},
			</if>
			<if test="AverageCurrent != 0.001">
				#{AverageCurrent},
			</if>
			<if test="TotalSystemPowerFactor != 0.001">
				#{TotalSystemPowerFactor},
			</if>
			<if test="Frequency != 0.001">
				#{Frequency},
			</if>
			<if test="SlidingWindowRealPowerDemand != 0.001">
				#{SlidingWindowRealPowerDemand},
			</if>
			<if test="VoltageAN != 0.001">
				#{VoltageAN},
			</if>
			<if test="VoltageBN != 0.001">
				#{VoltageBN},
			</if>
			<if test="VoltageCN != 0.001">
				#{VoltageCN},
			</if>
			<if test="VoltageAB != 0.001">
				#{VoltageAB},
			</if>
			<if test="VoltageBC != 0.001">
				#{VoltageBC},
			</if>
			<if test="VoltageAC != 0.001">
				#{VoltageAC},
			</if>
			<if test="CurrentA != 0.001">
				#{CurrentA},
			</if>
			<if test="CurrentB != 0.001">
				#{CurrentB},
			</if>
			<if test="CurrentC != 0.001">
				#{CurrentC},
			</if>
			<if test="RealPowerA != 0.001">
				#{RealPowerA},
			</if>
			<if test="RealPowerB != 0.001">
				#{RealPowerB},
			</if>
			<if test="RealPowerC != 0.001">
				#{RealPowerC},
			</if>
			<if test="ReactivePowerA != 0.001">
				#{ReactivePowerA},
			</if>
			<if test="ReactivePowerB != 0.001">
				#{ReactivePowerB},
			</if>
			<if test="ReactivePowerC != 0.001">
				#{ReactivePowerC},
			</if>
			<if test="ApparentPowerA != 0.001">
				#{ApparentPowerA},
			</if>
			<if test="ApparentPowerB != 0.001">
				#{ApparentPowerB},
			</if>
			<if test="ApparentPowerC != 0.001">
				#{ApparentPowerC},
			</if>
			<if test="PowerFactorA != 0.001">
				#{PowerFactorA},
			</if>
			<if test="PowerFactorB != 0.001">
				#{PowerFactorB},
			</if>
			<if test="PowerFactorC != 0.001">
				#{PowerFactorC},
			</if>
			<if test="nvmActivePower != 0.001">
				#{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001">
				#{nvmActiveEnergy},
			</if>
			<if test="MeasuredProduction != 0.001">
				#{MeasuredProduction},
			</if>
		</trim>


		<trim prefix="ON DUPLICATE KEY UPDATE " suffix=""
			suffixOverrides=",">

			<if test="id_device != 0.001">
				`id_device` = #{id_device},
			</if>
			<if test="error != 0.001">
				`error` = #{error},
			</if>
			<if test="low_alarm != 0.001">
				`low_alarm` = #{low_alarm},
			</if>
			<if test="high_alarm != 0.001">
				`high_alarm` = #{high_alarm},
			</if>
			<if test="TotalEnergyConsumption != 0.001">
				`TotalEnergyConsumption` = #{TotalEnergyConsumption},
			</if>
			<if test="TotalRealPower != 0.001">
				`TotalRealPower` = #{TotalRealPower},
			</if>
			<if test="TotalReactivePower != 0.001">
				`TotalReactivePower` = #{TotalReactivePower},
			</if>
			<if test="TotalApparentPower != 0.001">
				`TotalApparentPower` = #{TotalApparentPower},
			</if>
			<if test="AverageVoltageLN != 0.001">
				`AverageVoltageLN` = #{AverageVoltageLN},
			</if>
			<if test="AverageVoltageLL != 0.001">
				`AverageVoltageLL` = #{AverageVoltageLL},
			</if>
			<if test="AverageCurrent != 0.001">
				`AverageCurrent` = #{AverageCurrent},
			</if>
			<if test="TotalSystemPowerFactor != 0.001">
				`TotalSystemPowerFactor` = #{TotalSystemPowerFactor},
			</if>
			<if test="Frequency != 0.001">
				`Frequency` = #{Frequency},
			</if>
			<if test="SlidingWindowRealPowerDemand != 0.001">
				`SlidingWindowRealPowerDemand` = #{SlidingWindowRealPowerDemand},
			</if>
			<if test="VoltageAN != 0.001">
				`VoltageAN` = #{VoltageAN},
			</if>
			<if test="VoltageBN != 0.001">
				`VoltageBN` = #{VoltageBN},
			</if>
			<if test="VoltageCN != 0.001">
				`VoltageCN` = #{VoltageCN},
			</if>
			<if test="VoltageAB != 0.001">
				`VoltageAB` = #{VoltageAB},
			</if>
			<if test="VoltageBC != 0.001">
				`VoltageBC` = #{VoltageBC},
			</if>
			<if test="VoltageAC != 0.001">
				`VoltageAC` = #{VoltageAC},
			</if>
			<if test="CurrentA != 0.001">
				`CurrentA` = #{CurrentA},
			</if>
			<if test="CurrentB != 0.001">
				`CurrentB` = #{CurrentB},
			</if>
			<if test="CurrentC != 0.001">
				`CurrentC` = #{CurrentC},
			</if>
			<if test="RealPowerA != 0.001">
				`RealPowerA` = #{RealPowerA},
			</if>
			<if test="RealPowerB != 0.001">
				`RealPowerB` = #{RealPowerB},
			</if>
			<if test="RealPowerC != 0.001">
				`RealPowerC` = #{RealPowerC},
			</if>
			<if test="ReactivePowerA != 0.001">
				`ReactivePowerA` = #{ReactivePowerA},
			</if>
			<if test="ReactivePowerB != 0.001">
				`ReactivePowerB` = #{ReactivePowerB},
			</if>
			<if test="ReactivePowerC != 0.001">
				`ReactivePowerC` = #{ReactivePowerC},
			</if>
			<if test="ApparentPowerA != 0.001">
				`ApparentPowerA` = #{ApparentPowerA},
			</if>
			<if test="ApparentPowerB != 0.001">
				`ApparentPowerA` = #{ApparentPowerB},
			</if>
			<if test="ApparentPowerC != 0.001">
				`ApparentPowerC` = #{ApparentPowerC},
			</if>
			<if test="PowerFactorA != 0.001">
				`PowerFactorA` = #{PowerFactorA},
			</if>
			<if test="PowerFactorB != 0.001">
				`PowerFactorB` = #{PowerFactorB},
			</if>
			<if test="PowerFactorC != 0.001">
				`PowerFactorC` = #{PowerFactorC},
			</if>
			<if test="nvmActivePower != 0.001">
				`nvmActivePower` = #{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001">
				`nvmActiveEnergy` = #{nvmActiveEnergy},
			</if>
			<if test="MeasuredProduction != 0.001 and MeasuredProduction > 0">
				`MeasuredProduction` = #{MeasuredProduction},
			</if>
		</trim>

	</insert>
	
	<select id="getLastRow" resultType="com.nwm.api.entities.ModelElkorWattsonPVMeterEntity">
		SELECT
			dv.*,
			s.enable_alert
		FROM
			${view_tablename} dv 
			LEFT JOIN device d ON d.id = dv.id_device
			LEFT JOIN site s ON s.id = d.id_site
		WHERE
			dv.id_device = #{id_device}
			<if test="time != null" >
	        	AND dv.time <![CDATA[<]]> #{time}
	        </if>
		ORDER BY
			dv.time DESC 
			LIMIT 1
	</select>

</mapper> 