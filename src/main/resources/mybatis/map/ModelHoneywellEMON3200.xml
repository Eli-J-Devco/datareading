<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ModelHoneywellEMON3200">

	<insert id="insert" useGeneratedKeys="true" keyProperty="time">
		INSERT INTO `${datatablename}`
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="time != null" >
				`time`,
			</if>
			<if test="id_device != 0.001" >
				`id_device`,
			</if>
			<if test="error != 0.001" >
				`error`,
			</if>
			<if test="low_alarm != 0.001" >
				`low_alarm`,
			</if>
			<if test="high_alarm != 0.001" >
				`high_alarm`,
			</if>
			
			<if test="AuxilaryPulseInput1 != 0.001" >
				`AuxilaryPulseInput1`,
			</if>
			<if test="AuxilaryPulseInput2 != 0.001" >
				`AuxilaryPulseInput2`,
			</if>
			<if test="EnergyDelivered != 0.001" >
				`EnergyDelivered`,
			</if>
			<if test="EnergyReceived != 0.001" >
				`EnergyReceived`,
			</if>
			<if test="ReactiveEnergyDelivered != 0.001" >
				`ReactiveEnergyDelivered`,
			</if>
			<if test="ReactiveEnergyReceived != 0.001" >
				`ReactiveEnergyReceived`,
			</if>
			<if test="RealPower != 0.001" >
				`RealPower`,
			</if>
			<if test="ReactivePower != 0.001" >
				`ReactivePower`,
			</if>
			<if test="ApparentPower != 0.001" >
				`ApparentPower`,
			</if>
			<if test="PowerFactor != 0.001" >
				`PowerFactor`,
			</if>
			<if test="CurrentTotal != 0.001" >
				`CurrentTotal`,
			</if>
			<if test="CurrentAverage != 0.001" >
				`CurrentAverage`,
			</if>
			<if test="VoltageLineNeutral != 0.001" >
				`VoltageLineNeutral`,
			</if>
			<if test="VoltageLineLine != 0.001" >
				`VoltageLineLine`,
			</if>
			<if test="Frequency != 0.001" >
				`Frequency`,
			</if>
			<if test="PhaseAngle != 0.001" >
				`PhaseAngle`,
			</if>
			<if test="RealPowerPhaseA != 0.001" >
				`RealPowerPhaseA`,
			</if>
			<if test="RealPowerPhaseB != 0.001" >
				`RealPowerPhaseB`,
			</if>
			<if test="RealPowerPhaseC != 0.001" >
				`RealPowerPhaseC`,
			</if>
			<if test="ReactivePowerPhaseA != 0.001" >
				`ReactivePowerPhaseA`,
			</if>
			<if test="ReactivePowerPhaseB != 0.001" >
				`ReactivePowerPhaseB`,
			</if>
			<if test="ReactivePowerPhaseC != 0.001" >
				`ReactivePowerPhaseC`,
			</if>
			<if test="ApparentPowerPhaseA != 0.001" >
				`ApparentPowerPhaseA`,
			</if>
			<if test="ApparentPowerPhaseB != 0.001" >
				`ApparentPowerPhaseB`,
			</if>
			<if test="ApparentPowerPhaseC != 0.001" >
				`ApparentPowerPhaseC`,
			</if>
			<if test="PowerFactorPhaseA != 0.001" >
				`PowerFactorPhaseA`,
			</if>
			<if test="PowerFactorPhaseB != 0.001" >
				`PowerFactorPhaseB`,
			</if>
			<if test="PowerFactorPhaseC != 0.001" >
				`PowerFactorPhaseC`,
			</if>
			<if test="CurrentPhaseA != 0.001" >
				`CurrentPhaseA`,
			</if>
			<if test="CurrentPhaseB != 0.001" >
				`CurrentPhaseB`,
			</if>
			<if test="CurrentPhaseC != 0.001" >
				`CurrentPhaseC`,
			</if>
			<if test="VoltagePhaseAN != 0.001" >
				`VoltagePhaseAN`,
			</if>
			<if test="VoltagePhaseBN != 0.001" >
				`VoltagePhaseBN`,
			</if>
			<if test="VoltagePhaseCN != 0.001" >
				`VoltagePhaseCN`,
			</if>
			<if test="VoltagePhaseAB != 0.001" >
				`VoltagePhaseAB`,
			</if>
			<if test="VoltagePhaseBC != 0.001" >
				`VoltagePhaseBC`,
			</if>
			<if test="VoltagePhaseCA != 0.001" >
				`VoltagePhaseCA`,
			</if>
			<if test="PhaseAngleA != 0.001" >
				`PhaseAngleA`,
			</if>
			<if test="PhaseAngleB != 0.001" >
				`PhaseAngleB`,
			</if>
			<if test="PhaseAngleC != 0.001" >
				`PhaseAngleC`,
			</if>
			
			<if test="nvmActivePower != 0.001" >
				`nvmActivePower`,
			</if>
			<if test="nvmActiveEnergy != 0.001" >
				`nvmActiveEnergy`,
			</if>
			<if test="MeasuredProduction != 0.001">
				`MeasuredProduction`,
			</if>
		</trim>
		
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="time != null" >
				#{time},
			</if>
			<if test="id_device != 0.001" >
				#{id_device},
			</if>
			<if test="error != 0.001" >
				#{error},
			</if>
			<if test="low_alarm != 0.001" >
				#{low_alarm},
			</if>
			<if test="high_alarm != 0.001" >
				#{high_alarm},
			</if>
			
			<if test="AuxilaryPulseInput1 != 0.001" >
				#{AuxilaryPulseInput1},
			</if>
			<if test="AuxilaryPulseInput2 != 0.001" >
				#{AuxilaryPulseInput2},
			</if>
			<if test="EnergyDelivered != 0.001" >
				#{EnergyDelivered},
			</if>
			<if test="EnergyReceived != 0.001" >
				#{EnergyReceived},
			</if>
			<if test="ReactiveEnergyDelivered != 0.001" >
				#{ReactiveEnergyDelivered},
			</if>
			<if test="ReactiveEnergyReceived != 0.001" >
				#{ReactiveEnergyReceived},
			</if>
			<if test="RealPower != 0.001" >
				#{RealPower},
			</if>
			<if test="ReactivePower != 0.001" >
				#{ReactivePower},
			</if>
			<if test="ApparentPower != 0.001" >
				#{ApparentPower},
			</if>
			<if test="PowerFactor != 0.001" >
				#{PowerFactor},
			</if>
			<if test="CurrentTotal != 0.001" >
				#{CurrentTotal},
			</if>
			<if test="CurrentAverage != 0.001" >
				#{CurrentAverage},
			</if>
			<if test="VoltageLineNeutral != 0.001" >
				#{VoltageLineNeutral},
			</if>
			<if test="VoltageLineLine != 0.001" >
				#{VoltageLineLine},
			</if>
			<if test="Frequency != 0.001" >
				#{Frequency},
			</if>
			<if test="PhaseAngle != 0.001" >
				#{PhaseAngle},
			</if>
			<if test="RealPowerPhaseA != 0.001" >
				#{RealPowerPhaseA},
			</if>
			<if test="RealPowerPhaseB != 0.001" >
				#{RealPowerPhaseB},
			</if>
			<if test="RealPowerPhaseC != 0.001" >
				#{RealPowerPhaseC},
			</if>
			<if test="ReactivePowerPhaseA != 0.001" >
				#{ReactivePowerPhaseA},
			</if>
			<if test="ReactivePowerPhaseB != 0.001" >
				#{ReactivePowerPhaseB},
			</if>
			<if test="ReactivePowerPhaseC != 0.001" >
				#{ReactivePowerPhaseC},
			</if>
			<if test="ApparentPowerPhaseA != 0.001" >
				#{ApparentPowerPhaseA},
			</if>
			<if test="ApparentPowerPhaseB != 0.001" >
				#{ApparentPowerPhaseB},
			</if>
			<if test="ApparentPowerPhaseC != 0.001" >
				#{ApparentPowerPhaseC},
			</if>
			<if test="PowerFactorPhaseA != 0.001" >
				#{PowerFactorPhaseA},
			</if>
			<if test="PowerFactorPhaseB != 0.001" >
				#{PowerFactorPhaseB},
			</if>
			<if test="PowerFactorPhaseC != 0.001" >
				#{PowerFactorPhaseC},
			</if>
			<if test="CurrentPhaseA != 0.001" >
				#{CurrentPhaseA},
			</if>
			<if test="CurrentPhaseB != 0.001" >
				#{CurrentPhaseB},
			</if>
			<if test="CurrentPhaseC != 0.001" >
				#{CurrentPhaseC},
			</if>
			<if test="VoltagePhaseAN != 0.001" >
				#{VoltagePhaseAN},
			</if>
			<if test="VoltagePhaseBN != 0.001" >
				#{VoltagePhaseBN},
			</if>
			<if test="VoltagePhaseCN != 0.001" >
				#{VoltagePhaseCN},
			</if>
			<if test="VoltagePhaseAB != 0.001" >
				#{VoltagePhaseAB},
			</if>
			<if test="VoltagePhaseBC != 0.001" >
				#{VoltagePhaseBC},
			</if>
			<if test="VoltagePhaseCA != 0.001" >
				#{VoltagePhaseCA},
			</if>
			<if test="PhaseAngleA != 0.001" >
				#{PhaseAngleA},
			</if>
			<if test="PhaseAngleB != 0.001" >
				#{PhaseAngleB},
			</if>
			<if test="PhaseAngleC != 0.001" >
				#{PhaseAngleC},
			</if>
			
			<if test="nvmActivePower != 0.001" >
				#{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001" >
				#{nvmActiveEnergy},
			</if>
			<if test="MeasuredProduction != 0.001">
				#{MeasuredProduction},
			</if>
		</trim>
		
		<trim prefix="ON DUPLICATE KEY UPDATE " suffix="" suffixOverrides=",">
			<if test="id_device != 0.001" >
				id_device = #{id_device},
			</if>
			<if test="error != 0.001" >
				`error` = #{error},
			</if>
			<if test="low_alarm != 0.001" >
				low_alarm = #{low_alarm},
			</if>
			<if test="high_alarm != 0.001" >
				high_alarm = #{high_alarm},
			</if>
			
			<if test="AuxilaryPulseInput1 != 0.001" >
				`AuxilaryPulseInput1` = #{AuxilaryPulseInput1},
			</if>
			<if test="AuxilaryPulseInput2 != 0.001" >
				`AuxilaryPulseInput2` = #{AuxilaryPulseInput2},
			</if>
			<if test="EnergyDelivered != 0.001" >
				`EnergyDelivered` = #{EnergyDelivered},
			</if>
			<if test="EnergyReceived != 0.001" >
				`EnergyReceived` = #{EnergyReceived},
			</if>
			<if test="ReactiveEnergyDelivered != 0.001" >
				`ReactiveEnergyDelivered` = #{ReactiveEnergyDelivered},
			</if>
			<if test="ReactiveEnergyReceived != 0.001" >
				`ReactiveEnergyReceived` = #{ReactiveEnergyReceived},
			</if>
			<if test="RealPower != 0.001" >
				`RealPower` = #{RealPower},
			</if>
			<if test="ReactivePower != 0.001" >
				`ReactivePower` = #{ReactivePower},
			</if>
			<if test="ApparentPower != 0.001" >
				`ApparentPower` = #{ApparentPower},
			</if>
			<if test="PowerFactor != 0.001" >
				`PowerFactor` = #{PowerFactor},
			</if>
			<if test="CurrentTotal != 0.001" >
				`CurrentTotal` = #{CurrentTotal},
			</if>
			<if test="CurrentAverage != 0.001" >
				`CurrentAverage` = #{CurrentAverage},
			</if>
			<if test="VoltageLineNeutral != 0.001" >
				`VoltageLineNeutral` = #{VoltageLineNeutral},
			</if>
			<if test="VoltageLineLine != 0.001" >
				`VoltageLineLine` = #{VoltageLineLine},
			</if>
			<if test="Frequency != 0.001" >
				`Frequency` = #{Frequency},
			</if>
			<if test="PhaseAngle != 0.001" >
				`PhaseAngle` = #{PhaseAngle},
			</if>
			<if test="RealPowerPhaseA != 0.001" >
				`RealPowerPhaseA` = #{RealPowerPhaseA},
			</if>
			<if test="RealPowerPhaseB != 0.001" >
				`RealPowerPhaseB` = #{RealPowerPhaseB},
			</if>
			<if test="RealPowerPhaseC != 0.001" >
				`RealPowerPhaseC` = #{RealPowerPhaseC},
			</if>
			<if test="ReactivePowerPhaseA != 0.001" >
				`ReactivePowerPhaseA` = #{ReactivePowerPhaseA},
			</if>
			<if test="ReactivePowerPhaseB != 0.001" >
				`ReactivePowerPhaseB` = #{ReactivePowerPhaseB},
			</if>
			<if test="ReactivePowerPhaseC != 0.001" >
				`ReactivePowerPhaseC` = #{ReactivePowerPhaseC},
			</if>
			<if test="ApparentPowerPhaseA != 0.001" >
				`ApparentPowerPhaseA` = #{ApparentPowerPhaseA},
			</if>
			<if test="ApparentPowerPhaseB != 0.001" >
				`ApparentPowerPhaseB` = #{ApparentPowerPhaseB},
			</if>
			<if test="ApparentPowerPhaseC != 0.001" >
				`ApparentPowerPhaseC` = #{ApparentPowerPhaseC},
			</if>
			<if test="PowerFactorPhaseA != 0.001" >
				`PowerFactorPhaseA` = #{PowerFactorPhaseA},
			</if>
			<if test="PowerFactorPhaseB != 0.001" >
				`PowerFactorPhaseB` = #{PowerFactorPhaseB},
			</if>
			<if test="PowerFactorPhaseC != 0.001" >
				`PowerFactorPhaseC` = #{PowerFactorPhaseC},
			</if>
			<if test="CurrentPhaseA != 0.001" >
				`CurrentPhaseA` = #{CurrentPhaseA},
			</if>
			<if test="CurrentPhaseB != 0.001" >
				`CurrentPhaseB` = #{CurrentPhaseB},
			</if>
			<if test="CurrentPhaseC != 0.001" >
				`CurrentPhaseC` = #{CurrentPhaseC},
			</if>
			<if test="VoltagePhaseAN != 0.001" >
				`VoltagePhaseAN` = #{VoltagePhaseAN},
			</if>
			<if test="VoltagePhaseBN != 0.001" >
				`VoltagePhaseBN` = #{VoltagePhaseBN},
			</if>
			<if test="VoltagePhaseCN != 0.001" >
				`VoltagePhaseCN` = #{VoltagePhaseCN},
			</if>
			<if test="VoltagePhaseAB != 0.001" >
				`VoltagePhaseAB` = #{VoltagePhaseAB},
			</if>
			<if test="VoltagePhaseBC != 0.001" >
				`VoltagePhaseBC` = #{VoltagePhaseBC},
			</if>
			<if test="VoltagePhaseCA != 0.001" >
				`VoltagePhaseCA` = #{VoltagePhaseCA},
			</if>
			<if test="PhaseAngleA != 0.001" >
				`PhaseAngleA` = #{PhaseAngleA},
			</if>
			<if test="PhaseAngleB != 0.001" >
				`PhaseAngleB` = #{PhaseAngleB},
			</if>
			<if test="PhaseAngleC != 0.001" >
				`PhaseAngleC` = #{PhaseAngleC},
			</if>
	          
			<if test="nvmActivePower != 0.001" >
				`nvmActivePower` = #{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001" >
				`nvmActiveEnergy` = #{nvmActiveEnergy},
			</if>
			<if test="MeasuredProduction != 0.001">
				`MeasuredProduction` = #{MeasuredProduction},
			</if>
		</trim>
	</insert>
	
	<select id="getLastRow" resultType="com.nwm.api.entities.ModelHoneywellEMON3200Entity">
		SELECT
			dv.*,
			s.enable_alert
		FROM
			${view_tablename} dv 
			LEFT JOIN device d ON d.id = dv.id_device
			LEFT JOIN site s ON s.id = d.id_site
		WHERE
			dv.id_device = #{id_device}
			<if test="time != null" >
	        	AND dv.time <![CDATA[<]]> #{time}
	        </if>
		ORDER BY
			dv.time DESC 
			LIMIT 1
	</select>
	
</mapper> 