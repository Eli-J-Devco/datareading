<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CustomerSupport">
	<resultMap id="CustomerSupportMap"
		type="com.nwm.api.entities.CustomerSupportEntity">
		<result property="id" column="id" />
		<result property="id_site" column="id_site" />
		<result property="account_name" column="account_name" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="note" column="note" />
		<result property="parent" column="parent" />
		<result property="id_support_type" column="id_support_type" />
		<result property="status" column="status" />
		<result property="offset" column="offset" />
		<result property="created_date" column="created_date" />
		<result property="created_by" column="created_by" />
		<result property="updated_date" column="updated_by" />
		<result property="contact_person" column="contact_person" />
		
	</resultMap>
	
	<insert id="insertCustomerSupport" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `support`(
			`id_site`,
			`account_name`,
			`phone`,
			`email`,
			`note`,
			`parent`,
			`id_support_type`,
			`status`,
			`created_date`,
			`updated_date`,
			`created_by`,
			`updated_by`,
			`contact_person`
		)VALUES(
			#{id_site},
			#{account_name},
			#{phone},
			#{email},
			#{note},
			#{parent},
			#{id_support_type},
			#{status},
			NOW(),
			NOW(),
			#{created_by},
			#{updated_by},
			#{contact_person}
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	
	<insert id="insertSupportFile" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO  `support_file`(
			id_support,
			file_name,
			file_size,
			file_type
		)VALUES(
			#{id_support},
			#{file_name},
			#{file_size},
			#{file_type}
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	<select id="getList" resultType="Map" >
		SELECT
			s.id,
			s.id_site,
			ss.name AS site_name,
			s.contact_person,
			s.account_name,
			s.phone,
			s.email,
			s.note,
			s.parent,
			s.id_support_type,
			s.status,
			DATE_FORMAT( CONVERT_TZ( s.created_date, '+00:00', t.`offset` ), '%Y-%m-%d %H:%i:%s' ) AS created_date,
			JSON_ARRAYAGG(obj_support_file) AS support_file
			
		FROM
			support s
			LEFT JOIN (
				SELECT
						u.id_support,
						JSON_OBJECT(
							'id', u.id,
							'id_support', u.id_support,
							'file_name', u.file_name,
							'file_size', u.file_size,
							'file_type', u.file_type
						) AS obj_support_file 
					FROM
						support_file u
			) t ON t.id_support = s.id
			LEFT JOIN site ss ON ss.id = s.id_site
			LEFT JOIN time_zone t ON t.id = ss.id_time_zone
			GROUP BY s.id
		    order by
	        <choose>  
	            <when test="sort_column == 'id'">
	                s.id ${order_by}
	            </when>         
	            <when test="sort_column == 'site_name'">
	                ss.name ${order_by}
	            </when>            
	            <when test="sort_column == 'account_name'">
	                s.account_name ${order_by}
	            </when>
	            <when test="sort_column == 'contact_person'">
	                s.contact_person ${order_by}
	            </when>
	            <when test="sort_column == 'email'">
	                s.email ${order_by}
	            </when>
	            <when test="sort_column == 'phone'">
	                s.phone ${order_by}
	            </when>
	            
	            <otherwise>
			      s.id DESC
			    </otherwise>                                                  
	        </choose>  
		 	 
		 LIMIT ${limit} OFFSET ${offset};
	</select>
	
	<select id="getTotalRecord"  resultType="int" parameterType="com.nwm.api.entities.CustomerSupportEntity">
    	SELECT count(*) as totalRow
		FROM support s 
		
  	</select>
	
</mapper>