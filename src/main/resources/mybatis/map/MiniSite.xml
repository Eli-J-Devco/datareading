<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MiniSite">
	<resultMap id="MiniSiteMap"
		type="com.nwm.api.entities.SiteEntity">
		<result property="id" column="id" />
		<result property="id_country" column="id_country" />
		<result property="id_time_zone" column="id_time_zone" />
		<result property="name" column="name" />
		<result property="street" column="street" />
		<result property="lat" column="lat" />
		<result property="lng" column="lng" />
		<result property="built_since" column="built_since" />
		<result property="old_data" column="old_data" />
		<result property="number" column="number" />
		<result property="postal_code" column="postal_code" />
		<result property="city" column="city" />
		<result property="state" column="state" />
		<result property="commissioning" column="commissioning" />
		<result property="emergency_contact" column="emergency_contact" />
		<result property="ac_capacity" column="ac_capacity" />
		<result property="dc_capacity" column="dc_capacity" />
		<result property="status" column="status" />
		<result property="is_delete" column="is_delete" />
		<result property="created_date" column="created_date" />
		<result property="created_by" column="created_by" />
		<result property="updated_date" column="updated_date" />
		<result property="updated_by" column="updated_by" />
		<result property="address_short" column="address_short" />
		<result property="watts_3ph_total" column="watts_3ph_total" />
		<result property="sensor1_data" column="sensor1_data" />
		<result property="w_hours_total" column="w_hours_total" />
		<result property="today_kwh" column="today_kwh" />
		<result property="total_energy_this_month" column="total_energy_this_month" />
		<result property="eer_this_month" column="eer_this_month" />
		<result property="eer_last_month" column="eer_last_month" />
		<result property="w_hours_received" column="w_hours_received" />
		<result property="total_error" column="total_error" />
		<result property="alert_list" column="alert_list" />
		<result property="gallery" column="gallery" />
		<result property="street_ws" column="street_ws" />
		<result property="localization_format" column="localization_format" />
		<result property="format_sql_short" column="format_sql_short" />
		<result property="format_sql_long" column="format_sql_long" />
		<result property="format_sql_string_short" column="format_sql_string_short" />
		<result property="format_sql_string_long" column="format_sql_string_long" />
		<result property="format_sql_string_mdy" column="format_sql_string_mdy" />
		<result property="offset_from" column="offset_from" />
		<result property="current_time" column="current_time" />
		<result property="about" column="about" />
		<result property="kiosk_view" column="kiosk_view" />
		<result property="ac_power" column="ac_power" />
	</resultMap>
	
	
	
	<select id="getMiniSiteInfo" resultType="Map" >
		SELECT
			s.id,
			s.`name`,
			DATE_FORMAT(s.built_since, '%m/%d/%Y %H:%i:%s') AS built_since, 
			DATE_FORMAT(s.commissioning, '%m/%d/%Y %H:%i:%s') AS commissioning, 
			s.ac_capacity,
			s.dc_capacity,
			s.gallery,
			s.about,
			s.kiosk_view,
			s.site_logo,
			s.lat,
			s.lng,
			s.table_data_report,
			IF(m.energy_lifetime > 0 ,m.energy_lifetime, t.energy_lifetime) AS energy_lifetime,
			IF(m.ac_power > 0 ,m.ac_power,t.ac_power) AS ac_power,
			IF((IF(m.energy_lifetime > 0 ,m.energy_lifetime, t.energy_lifetime)), FORMAT(ROUND((IF(m.energy_lifetime > 0 ,m.energy_lifetime, t.energy_lifetime)) * 0.0117, 0), 0) , 0) AS total_tree,
			IF((IF(m.energy_lifetime > 0 ,m.energy_lifetime, t.energy_lifetime)), FORMAT(ROUND(((IF(m.energy_lifetime > 0 ,m.energy_lifetime, t.energy_lifetime)) * 392), 0), 0) , 0) AS total_co2,
			t.`value` AS timezone_value,
			IF(v.enable_virtual_device > 0 ,1,0) AS enable_virtual_device,
			s.table_data_virtual
		FROM
			site s 
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			LEFT JOIN (
				SELECT 
					d.id_site,
					IFNULL(SUM(d.energy_lifetime), 0) AS energy_lifetime,
					IFNULL(SUM(d.last_value), 0) AS ac_power
				FROM device d 
				WHERE SHA1(d.id_site) = #{hash_id}
				AND d.`status` = 1
				AND d.is_delete = 0
				AND d.id_device_type IN (3,7,9)
				AND d.is_excluded_meter = 0
			)m ON m.id_site = s.id
			
			LEFT JOIN (
				SELECT 
					d.id_site,
					IFNULL(SUM(d.energy_lifetime), 0) AS energy_lifetime,
					IFNULL(SUM(d.last_value), 0) AS ac_power
				FROM device d 
				WHERE SHA1(d.id_site) = #{hash_id}
				AND d.`status` = 1
				AND d.is_delete = 0
				AND d.id_device_type = 1
			)t ON t.id_site = s.id
			
			LEFT JOIN (
				SELECT COUNT(*) AS enable_virtual_device, d.id_site FROM device d 
				WHERE d.`status` = 1 
				AND d.is_delete = 0 
				AND d.hidden = 0
				AND d.virtual_device_type IS NOT NULL
				AND d.virtual_device_type != ''
				AND SHA1(d.id_site) = #{hash_id}
			)v ON v.id_site = s.id
			
		WHERE
			SHA1( s.id ) = #{hash_id}
			AND s.kiosk_view = 1
			AND s.`status` = 1 
			AND s.is_delete = 0 
			AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
	</select>
	
	
	
	<select id="getListDeviceTypeMeter" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.devicename AS export_devicename,
			d.datatablename,
			d.id_site,
			d.id_device_type
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
			LEFT JOIN site s ON d.id_site = s.id
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
		WHERE
			dt.id IN (3,7,9)
			AND d.is_excluded_meter = 0
			AND SHA1(d.id_site) = #{hash_id}
			AND d.`status` = 1 
			AND d.is_delete = 0
			AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
		GROUP BY d.id_device_type
	</select>
	
	
	<select id="getListDeviceTypeInverter" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.devicename AS export_devicename,
			d.datatablename,
			d.id_site,
			d.id_device_type
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
			LEFT JOIN site s ON d.id_site = s.id
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
		WHERE
			dt.id = 1
			AND SHA1(d.id_site) = #{hash_id}
			AND d.`status` = 1 
			AND d.is_delete = 0
			AND (CONVERT_TZ(NOW(), '+00:00', t.offset) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
		GROUP BY d.id_device_type
	</select>
	
	
	<select id="getListDeviceTypeIrradiance" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.datatablename,
			d.id_site,
			d.id_device_type
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
		WHERE
			dt.id IN(4,6)
			AND SHA1(d.id_site) = #{hash_id}
			AND d.`status` = 1 
			AND d.is_delete = 0
	</select>
	
	
	<select id="getDataEnergy" resultType="com.nwm.api.entities.KioskViewTodayEntity" >
		<choose>
			<when test="filterBy == 'today'">
				SELECT
					t.categories_time,
					t.hour_time,
					ROUND(SUM(IF(t.id_device_type IN (1,3,7,9), t.`value`, 0)), 1) AS energy,
					ROUND(AVG(IF(t.id_device_type IN (4,6), t.`value`, NULL)), 1) AS irradiance
				FROM
					(
						<foreach collection="groupDevices" item="item" index="index" separator="union all">
							SELECT
								DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_format,
								DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%d/%Y %H:00' ) AS categories_time,
								DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%H:00' ) AS hour_time,
								d.id_device_type,
								<choose>
									<when test="item.id_device_type == 4 or item.id_device_type == 6">
										AVG(dv.nvm_irradiance) AS `value`
									</when>
									<otherwise>
										SUM(dv.MeasuredProduction) AS `value`
									</otherwise>
								</choose>
							FROM
								${item.datatablename} dv
								LEFT JOIN device d ON d.id = dv.id_device
								LEFT JOIN site s ON s.id = d.id_site 
								LEFT JOIN time_zone t ON t.id = s.id_time_zone
							WHERE
								SHA1(s.id) = #{hash_id}
								AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
								AND s.`status` = 1 
								AND d.`status` = 1 
							GROUP BY
								d.id, time_format
				      </foreach>
					) t 
				GROUP BY
					t.time_format
			</when>
			<otherwise>
				SELECT
					categories_time,
					ROUND(IF(meterEnergy > 0, meterEnergy, inverterEnergy), 1) AS energy,
					ROUND(nvm_irradiance, 1) AS irradiance
				FROM (
					SELECT
						<choose>
							<when test="filterBy == 'this_month' or filterBy == 'last_month'">
								DATE_FORMAT( sdr.time, '%m/%d/%Y' ) AS time_format,
								DATE_FORMAT( sdr.time, '%m/%d' ) AS categories_time,
							</when>
							<when test="filterBy == '12_month'">
								DATE_FORMAT( sdr.time, '%m/%Y' ) AS time_format,
								DATE_FORMAT( sdr.time, '%b-%Y' ) AS categories_time,
							</when>
							<when test="filterBy == 'lifetime'">
								DATE_FORMAT( sdr.time, '%Y' ) AS time_format,
								DATE_FORMAT( sdr.time, '%Y' ) AS categories_time,
							</when>
						</choose>
						SUM(IF(d.id_device_type IN (3,7,9) AND d.is_excluded_meter = 0, sdr.ActualGeneration, 0)) AS meterEnergy,
						SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)) AS inverterEnergy,
						AVG(IF(d.id_device_type IN (4,6), sdr.POAAVG, NULL)) AS nvm_irradiance 
					FROM
						${table_data_report} sdr
						LEFT JOIN device d ON d.id = sdr.id_device
						LEFT JOIN site s ON s.id = d.id_site 
					WHERE
						d.`status` = 1 
						AND d.is_delete = 0 
						AND SHA1( d.id_site ) = #{hash_id} 
						AND (sdr.time BETWEEN #{start_date} AND #{end_date})
					GROUP BY
						time_format
				) t
			</otherwise>
		</choose>
	</select>
	
	<select id="getDataVirtualDevice" resultType="com.nwm.api.entities.KioskViewTodayEntity" >
		SELECT
			<if test="filterBy == 'today'">
				hour_time,
			</if>
			categories_time,
			ROUND(SUM(nvmActiveEnergy), 1) AS energy,
			ROUND(AVG(nvm_irradiance), 1) AS irradiance
		FROM (
				SELECT
					<choose>
						<when test="filterBy == 'today'">
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%d/%Y %H:00' ) AS categories_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%H:00' ) AS hour_time,
						</when>
						<when test="filterBy == 'this_month' or filterBy == 'last_month'">
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%d' ) AS categories_time,
						</when>
						<when test="filterBy == '12_month'">
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%b-%Y' ) AS categories_time,
						</when>
						<when test="filterBy == 'lifetime'">
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS categories_time,
						</when>
					</choose>
					SUM(dv.nvmActiveEnergy) AS nvmActiveEnergy,
					AVG(dv.nvm_irradiance) AS nvm_irradiance
				FROM
					${table_data_virtual} dv
					LEFT JOIN device d ON d.id = dv.id_device
					LEFT JOIN site s ON s.id = d.id_site 
					LEFT JOIN time_zone t ON t.id = s.id_time_zone
				WHERE
					s.id = #{id}
					AND d.id_device_type = 12
					AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
					AND s.`status` = 1 
					AND d.`status` = 1 
				GROUP BY
					time_format
		) t
		GROUP BY
			categories_time
	</select>
	
</mapper>