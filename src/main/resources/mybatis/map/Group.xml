<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Group">
	<resultMap id="GroupMap"
		type="com.nwm.api.entities.GroupEntity">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="text" column="text" />
		<result property="value" column="value" />
		<result property="offset" column="offset" />
		<result property="status" column="status" />
		<result property="is_delete" column="is_delete" />
		<result property="created_date" column="created_date" />
		<result property="created_by" column="created_by" />
		<result property="updated_date" column="updated_by" />
		<result property="active" column="active" />
		<result property="description" column="description" />
	</resultMap>
	

	

	<select id="getDropdownList" resultMap="GroupMap" parameterType="String">
		SELECT
			t.*,
			t.name AS text,
			0 as active
		FROM
			site_group AS t
		WHERE
			t.`status` = 1 AND t.is_delete = 0 
			<if test="id_company != null and id_company != 0 and id_company > 1">
				AND t.id_company = #{id_company}
			</if>
		ORDER BY `name` ASC;
	</select>
	
	<select id="getList" resultType="Map" >
		SELECT
			s.id,
			s.`name`,
			s.`description`,
			s.`status`,
			s.is_delete,
			s.order_id,
			0 AS is_expand,
			s.id_company
		FROM
			site_group s 
		WHERE s.is_delete = 0
		<if test="keyword != null">
			AND s.name LIKE CONCAT("%",#{keyword}, "%")
		</if> 	
		
		<if test="id_company != null and id_company != 0 and id_company > 1">
			AND s.id_company = #{id_company}
		</if>
			
		    order by
	        <choose>  
	            <when test="sort_column == 'id'">
	                s.id ${order_by}
	            </when>         
	            <when test="sort_column == 'name'">
	                s.name ${order_by}
	            </when>
	            
	            <when test="sort_column == 'status'">
	                `status` ${order_by}
	            </when>
	            <when test="sort_column == 'order_id'">
	                s.order_id ${order_by}
	            </when>
	            
	            <otherwise>
			      s.id DESC
			    </otherwise>                                                  
	        </choose>  
		 	 
		 LIMIT ${limit} OFFSET ${offset};
	</select>
	
	<select id="getSubGroupByGroup" resultType="Map" >
		SELECT
			ssg.id,
			ssg.id_site_group,
			ssg.`name`,
			ssg.`name` AS text,
			ssg.`description`,
			ssg.`status`,
			ssg.is_delete,
			ssg.order_id,
			ssg.id_company
		FROM
			site_sub_group ssg
			LEFT JOIN site_group sg ON sg.id = ssg.id_site_group
		WHERE 
			ssg.status = 1
			AND ssg.is_delete = 0
			AND sg.status = 1
			AND sg.is_delete = 0
			AND ssg.id_site_group = #{id}
	    ORDER BY ssg.id DESC
	</select>
	
  	
	
	<select id="getListCount"  resultType="int" parameterType="com.nwm.api.entities.GroupEntity">
    	SELECT count(*) as totalRow
		FROM site_group s WHERE s.is_delete = 0
		<if test="keyword != null">
			AND s.name LIKE CONCAT("%",#{keyword}, "%")
		</if> 
		<if test="id_company != null and id_company != 0 and id_company > 1">
			AND s.id_company = #{id_company}
		</if>
  	</select>
  	
	<select id="getTotalSiteById"  resultType="int" parameterType="com.nwm.api.entities.GroupEntity">
    	SELECT count(*) as totalRow
		FROM site s
		WHERE
			s.id_site_group = #{id}
			AND s.is_delete = 0
  	</select>
  	
	<select id="getTotalSiteInSubGroupById"  resultType="int" parameterType="com.nwm.api.entities.GroupEntity">
    	SELECT count(*) as totalRow
		FROM site s
		WHERE
			s.id_site_sub_group = #{id}
			AND s.is_delete = 0
  	</select>
  	
  	<select id="getExitsCount"  resultType="int" parameterType="com.nwm.api.entities.GroupEntity">
    	SELECT count(*) as totalRow
		FROM site s WHERE s.id_site_group = #{id}
  	</select>
  	
  	
  	<update id="updateStatus">
		UPDATE `site_group`
		SET
			`status` = #{status}
		WHERE
			`id` = #{id}
	</update>
	<update id="delete">
		UPDATE `site_group`
		SET
			`is_delete` = #{is_delete}
		WHERE
			`id` = #{id}
	</update>
	
	<update id="deleteSubGroup">
		UPDATE `site_sub_group`
		SET
			`is_delete` = #{is_delete}
		WHERE
			`id` = #{id}
	</update>
	
	
	<insert id="insertGroup" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `site_group`(
			`name`,
			`description`,
			`order_id`,
			`id_company`
		)VALUES(
			#{name},
			#{description},
			#{order_id},
			#{id_company}
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	<insert id="insertSubGroup" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `site_sub_group`(
			`name`,
			`id_site_group`,
			`description`,
			`order_id`,
			`id_company`
			
		)VALUES(
			#{name},
			#{id},
			#{description},
			#{order_id},
			#{id_company}
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	<update id="updateGroup">
		UPDATE `site_group`
		SET
			`name` = #{name},
			`description` = #{description},
			`order_id` = #{order_id},
			`id_company` = #{id_company}
		WHERE
			`id` = #{id}
	</update>
	
	<update id="updateSubGroup">
		UPDATE `site_sub_group`
		SET
			`name` = #{name},
			`description` = #{description},
			`order_id` = #{order_id},
			`id_company` = #{id_company}
		WHERE
			`id` = #{id}
	</update>
	
</mapper>