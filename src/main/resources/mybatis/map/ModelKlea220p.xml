<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ModelKlea220p">
	<resultMap id="ModelKlea220pMap"
		type="com.nwm.api.entities.ModelKlea220pEntity">
		<result property="time" column="time" />
		<result property="id_device" column="id_device" />
		<result property="error" column="error" />
		<result property="low_alarm" column="low_alarm" />
		<result property="high_alarm" column="high_alarm" />
		
		
		<result property="TotalEnergy" column="TotalEnergy" />
		<result property="TotalActivePower" column="TotalActivePower" />
		<result property="TotalReactivePower" column="TotalReactivePower" />
		<result property="TotalApparentPower" column="TotalApparentPower" />
		<result property="GridFrequency" column="GridFrequency" />
		<result property="NeutralCurrent" column="NeutralCurrent" />
		<result property="TotalCurrent" column="TotalCurrent" />
		<result property="TotalPowerFactor" column="TotalPowerFactor" />
		<result property="VoltageLN3phases" column="VoltageLN3phases" />
		<result property="VoltageLL3phases" column="VoltageLL3phases" />
		<result property="ActivePowerPhaseA" column="ActivePowerPhaseA" />
		<result property="ActivePowerPhaseB" column="ActivePowerPhaseB" />
		<result property="ActivePowerPhaseC" column="ActivePowerPhaseC" />
		<result property="ReactivePowerPhaseA" column="ReactivePowerPhaseA" />
		<result property="ReactivePowerPhaseB" column="ReactivePowerPhaseB" />
		<result property="ReactivePowerPhaseC" column="ReactivePowerPhaseC" />
		<result property="ApparentPowerPhaseA" column="ApparentPowerPhaseA" />
		<result property="ApparentPowerPhaseB" column="ApparentPowerPhaseB" />
		<result property="ApparentPowerPhaseC" column="ApparentPowerPhaseC" />
		<result property="CosphiPhaseA" column="CosphiPhaseA" />
		<result property="CosphiPhaseB" column="CosphiPhaseB" />
		<result property="CosphiPhaseC" column="CosphiPhaseC" />
		<result property="PowerFactorPhaseA" column="PowerFactorPhaseA" />
		<result property="PowerFactorPhaseB" column="PowerFactorPhaseB" />
		<result property="PowerFactorPhaseC" column="PowerFactorPhaseC" />
		<result property="VoltagePhaseAB" column="VoltagePhaseAB" />
		<result property="VoltagePhaseBC" column="VoltagePhaseBC" />
		<result property="VoltagePhaseCA" column="VoltagePhaseCA" />
		<result property="VoltagePhaseAN" column="VoltagePhaseAN" />
		<result property="VoltagePhaseBN" column="VoltagePhaseBN" />
		<result property="VoltagePhaseCN" column="VoltagePhaseCN" />
		<result property="CurrentPhaseA" column="CurrentPhaseA" />
		<result property="CurrentPhaseB" column="CurrentPhaseB" />
		<result property="CurrentPhaseC" column="CurrentPhaseC" />
		
		
		
		<result property="nvmActivePower" column="nvmActivePower" />
		<result property="nvmActiveEnergy" column="nvmActiveEnergy" />
		<result property="MeasuredProduction" column="MeasuredProduction" />
		<result property="datatablename" column="datatablename" />
		<result property="view_tablename" column="view_tablename" />
		<result property="job_tablename" column="job_tablename" />

	</resultMap>

	<insert id="insertModelKlea220p" useGeneratedKeys="true"
		keyProperty="time">
		INSERT INTO `${datatablename}`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="time != null">
				`time`,
			</if>
			<if test="id_device != 0.001">
				`id_device`,
			</if>
			<if test="error != 0.001">
				`error`,
			</if>
			<if test="low_alarm != 0.001">
				`low_alarm`,
			</if>
			<if test="high_alarm != 0.001">
				`high_alarm`,
			</if>
			
			<if test="TotalEnergy != 0.001" >
				`TotalEnergy`,
			</if>
			<if test="TotalActivePower != 0.001" >
				`TotalActivePower`,
			</if>
			<if test="TotalReactivePower != 0.001" >
				`TotalReactivePower`,
			</if>
			<if test="TotalApparentPower != 0.001" >
				`TotalApparentPower`,
			</if>
			<if test="GridFrequency != 0.001" >
				`GridFrequency`,
			</if>
			<if test="NeutralCurrent != 0.001" >
				`NeutralCurrent`,
			</if>
			<if test="TotalCurrent != 0.001" >
				`TotalCurrent`,
			</if>
			<if test="TotalPowerFactor != 0.001" >
				`TotalPowerFactor`,
			</if>
			<if test="VoltageLN3phases != 0.001" >
				`VoltageLN3phases`,
			</if>
			<if test="VoltageLL3phases != 0.001" >
				`VoltageLL3phases`,
			</if>
			<if test="ActivePowerPhaseA != 0.001" >
				`ActivePowerPhaseA`,
			</if>
			<if test="ActivePowerPhaseB != 0.001" >
				`ActivePowerPhaseB`,
			</if>
			<if test="ActivePowerPhaseC != 0.001" >
				`ActivePowerPhaseC`,
			</if>
			<if test="ReactivePowerPhaseA != 0.001" >
				`ReactivePowerPhaseA`,
			</if>
			<if test="ReactivePowerPhaseB != 0.001" >
				`ReactivePowerPhaseB`,
			</if>
			<if test="ReactivePowerPhaseC != 0.001" >
				`ReactivePowerPhaseC`,
			</if>
			<if test="ApparentPowerPhaseA != 0.001" >
				`ApparentPowerPhaseA`,
			</if>
			<if test="ApparentPowerPhaseB != 0.001" >
				`ApparentPowerPhaseB`,
			</if>
			<if test="ApparentPowerPhaseC != 0.001" >
				`ApparentPowerPhaseC`,
			</if>
			<if test="CosphiPhaseA != 0.001" >
				`CosphiPhaseA`,
			</if>
			<if test="CosphiPhaseB != 0.001" >
				`CosphiPhaseB`,
			</if>
			<if test="CosphiPhaseC != 0.001" >
				`CosphiPhaseC`,
			</if>
			<if test="PowerFactorPhaseA != 0.001" >
				`PowerFactorPhaseA`,
			</if>
			<if test="PowerFactorPhaseB != 0.001" >
				`PowerFactorPhaseB`,
			</if>
			<if test="PowerFactorPhaseC != 0.001" >
				`PowerFactorPhaseC`,
			</if>
			<if test="VoltagePhaseAB != 0.001" >
				`VoltagePhaseAB`,
			</if>
			<if test="VoltagePhaseBC != 0.001" >
				`VoltagePhaseBC`,
			</if>
			<if test="VoltagePhaseCA != 0.001" >
				`VoltagePhaseCA`,
			</if>
			<if test="VoltagePhaseAN != 0.001" >
				`VoltagePhaseAN`,
			</if>
			<if test="VoltagePhaseBN != 0.001" >
				`VoltagePhaseBN`,
			</if>
			<if test="VoltagePhaseCN != 0.001" >
				`VoltagePhaseCN`,
			</if>
			<if test="CurrentPhaseA != 0.001" >
				`CurrentPhaseA`,
			</if>
			<if test="CurrentPhaseB != 0.001" >
				`CurrentPhaseB`,
			</if>
			<if test="CurrentPhaseC != 0.001" >
				`CurrentPhaseC`,
			</if>
			
			
			
			
			
			<if test="nvmActivePower != 0.001">
			`nvmActivePower`,
			</if>
			<if test="nvmActiveEnergy != 0.001">
			`nvmActiveEnergy`,
			</if>
			
			<if test="MeasuredProduction != 0.001">
				`MeasuredProduction`,
			</if>
			
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="time != null">
				#{time},
			</if>
			<if test="id_device != 0.001">
				#{id_device},
			</if>
			<if test="error != 0.001">
				#{error},
			</if>
			<if test="low_alarm != 0.001">
				#{low_alarm},
			</if>
			<if test="high_alarm != 0.001">
				#{high_alarm},
			</if>
			
			<if test="TotalEnergy != 0.001" >
				#{TotalEnergy},
			</if>
			<if test="TotalActivePower != 0.001" >
				#{TotalActivePower},
			</if>
			<if test="TotalReactivePower != 0.001" >
				#{TotalReactivePower},
			</if>
			<if test="TotalApparentPower != 0.001" >
				#{TotalApparentPower},
			</if>
			<if test="GridFrequency != 0.001" >
				#{GridFrequency},
			</if>
			<if test="NeutralCurrent != 0.001" >
				#{NeutralCurrent},
			</if>
			<if test="TotalCurrent != 0.001" >
				#{TotalCurrent},
			</if>
			<if test="TotalPowerFactor != 0.001" >
				#{TotalPowerFactor},
			</if>
			<if test="VoltageLN3phases != 0.001" >
				#{VoltageLN3phases},
			</if>
			<if test="VoltageLL3phases != 0.001" >
				#{VoltageLL3phases},
			</if>
			<if test="ActivePowerPhaseA != 0.001" >
				#{ActivePowerPhaseA},
			</if>
			<if test="ActivePowerPhaseB != 0.001" >
				#{ActivePowerPhaseB},
			</if>
			<if test="ActivePowerPhaseC != 0.001" >
				#{ActivePowerPhaseC},
			</if>
			<if test="ReactivePowerPhaseA != 0.001" >
				#{ReactivePowerPhaseA},
			</if>
			<if test="ReactivePowerPhaseB != 0.001" >
				#{ReactivePowerPhaseB},
			</if>
			<if test="ReactivePowerPhaseC != 0.001" >
				#{ReactivePowerPhaseC},
			</if>
			<if test="ApparentPowerPhaseA != 0.001" >
				#{ApparentPowerPhaseA},
			</if>
			<if test="ApparentPowerPhaseB != 0.001" >
				#{ApparentPowerPhaseB},
			</if>
			<if test="ApparentPowerPhaseC != 0.001" >
				#{ApparentPowerPhaseC},
			</if>
			<if test="CosphiPhaseA != 0.001" >
				#{CosphiPhaseA},
			</if>
			<if test="CosphiPhaseB != 0.001" >
				#{CosphiPhaseB},
			</if>
			<if test="CosphiPhaseC != 0.001" >
				#{CosphiPhaseC},
			</if>
			<if test="PowerFactorPhaseA != 0.001" >
				#{PowerFactorPhaseA},
			</if>
			<if test="PowerFactorPhaseB != 0.001" >
				#{PowerFactorPhaseB},
			</if>
			<if test="PowerFactorPhaseC != 0.001" >
				#{PowerFactorPhaseC},
			</if>
			<if test="VoltagePhaseAB != 0.001" >
				#{VoltagePhaseAB},
			</if>
			<if test="VoltagePhaseBC != 0.001" >
				#{VoltagePhaseBC},
			</if>
			<if test="VoltagePhaseCA != 0.001" >
				#{VoltagePhaseCA},
			</if>
			<if test="VoltagePhaseAN != 0.001" >
				#{VoltagePhaseAN},
			</if>
			<if test="VoltagePhaseBN != 0.001" >
				#{VoltagePhaseBN},
			</if>
			<if test="VoltagePhaseCN != 0.001" >
				#{VoltagePhaseCN},
			</if>
			<if test="CurrentPhaseA != 0.001" >
				#{CurrentPhaseA},
			</if>
			<if test="CurrentPhaseB != 0.001" >
				#{CurrentPhaseB},
			</if>
			<if test="CurrentPhaseC != 0.001" >
				#{CurrentPhaseC},
			</if>
			
			<if test="nvmActivePower != 0.001">
			#{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001">
			#{nvmActiveEnergy},
			</if>
			
			<if test="MeasuredProduction != 0.001">
				#{MeasuredProduction},
			</if>
		</trim>
		
		
		<trim prefix="ON DUPLICATE KEY UPDATE " suffix="" suffixOverrides=",">
			<if test="id_device != 0.001">
				`id_device` = #{id_device},
			</if>
			<if test="error != 0.001">
				`error` = #{error},
			</if>
			<if test="low_alarm != 0.001">
				`low_alarm` = #{low_alarm},
			</if>
			<if test="high_alarm != 0.001">
				`high_alarm` = #{high_alarm},
			</if>
			
			
			<if test="TotalEnergy != 0.001" >
				`TotalEnergy` = #{TotalEnergy},
			</if>
			<if test="TotalActivePower != 0.001" >
				`TotalActivePower` = #{TotalActivePower},
			</if>
			<if test="TotalReactivePower != 0.001" >
				`TotalReactivePower` = #{TotalReactivePower},
			</if>
			<if test="TotalApparentPower != 0.001" >
				`TotalApparentPower` = #{TotalApparentPower},
			</if>
			<if test="GridFrequency != 0.001" >
				`GridFrequency` = #{GridFrequency},
			</if>
			<if test="NeutralCurrent != 0.001" >
				`NeutralCurrent` = #{NeutralCurrent},
			</if>
			<if test="TotalCurrent != 0.001" >
				`TotalCurrent` = #{TotalCurrent},
			</if>
			<if test="TotalPowerFactor != 0.001" >
				`TotalPowerFactor` = #{TotalPowerFactor},
			</if>
			<if test="VoltageLN3phases != 0.001" >
				`VoltageLN3phases` = #{VoltageLN3phases},
			</if>
			<if test="VoltageLL3phases != 0.001" >
				`VoltageLL3phases` = #{VoltageLL3phases},
			</if>
			<if test="ActivePowerPhaseA != 0.001" >
				`ActivePowerPhaseA` = #{ActivePowerPhaseA},
			</if>
			<if test="ActivePowerPhaseB != 0.001" >
				`ActivePowerPhaseB` = #{ActivePowerPhaseB},
			</if>
			<if test="ActivePowerPhaseC != 0.001" >
				`ActivePowerPhaseC` = #{ActivePowerPhaseC},
			</if>
			<if test="ReactivePowerPhaseA != 0.001" >
				`ReactivePowerPhaseA` = #{ReactivePowerPhaseA},
			</if>
			<if test="ReactivePowerPhaseB != 0.001" >
				`ReactivePowerPhaseB` = #{ReactivePowerPhaseB},
			</if>
			<if test="ReactivePowerPhaseC != 0.001" >
				`ReactivePowerPhaseC` = #{ReactivePowerPhaseC},
			</if>
			<if test="ApparentPowerPhaseA != 0.001" >
				`ApparentPowerPhaseA` = #{ApparentPowerPhaseA},
			</if>
			<if test="ApparentPowerPhaseB != 0.001" >
				`ApparentPowerPhaseB` = #{ApparentPowerPhaseB},
			</if>
			<if test="ApparentPowerPhaseC != 0.001" >
				`ApparentPowerPhaseC` = #{ApparentPowerPhaseC},
			</if>
			<if test="CosphiPhaseA != 0.001" >
				`CosphiPhaseA` = #{CosphiPhaseA},
			</if>
			<if test="CosphiPhaseB != 0.001" >
				`CosphiPhaseB` = #{CosphiPhaseB},
			</if>
			<if test="CosphiPhaseC != 0.001" >
				`CosphiPhaseC` = #{CosphiPhaseC},
			</if>
			<if test="PowerFactorPhaseA != 0.001" >
				`PowerFactorPhaseA` = #{PowerFactorPhaseA},
			</if>
			<if test="PowerFactorPhaseB != 0.001" >
				`PowerFactorPhaseB` = #{PowerFactorPhaseB},
			</if>
			<if test="PowerFactorPhaseC != 0.001" >
				`PowerFactorPhaseC` = #{PowerFactorPhaseC},
			</if>
			<if test="VoltagePhaseAB != 0.001" >
				`VoltagePhaseAB` = #{VoltagePhaseAB},
			</if>
			<if test="VoltagePhaseBC != 0.001" >
				`VoltagePhaseBC` = #{VoltagePhaseBC},
			</if>
			<if test="VoltagePhaseCA != 0.001" >
				`VoltagePhaseCA` = #{VoltagePhaseCA},
			</if>
			<if test="VoltagePhaseAN != 0.001" >
				`VoltagePhaseAN` = #{VoltagePhaseAN},
			</if>
			<if test="VoltagePhaseBN != 0.001" >
				`VoltagePhaseBN` = #{VoltagePhaseBN},
			</if>
			<if test="VoltagePhaseCN != 0.001" >
				`VoltagePhaseCN` = #{VoltagePhaseCN},
			</if>
			<if test="CurrentPhaseA != 0.001" >
				`CurrentPhaseA` = #{CurrentPhaseA},
			</if>
			<if test="CurrentPhaseB != 0.001" >
				`CurrentPhaseB` = #{CurrentPhaseB},
			</if>
			<if test="CurrentPhaseC != 0.001" >
				`CurrentPhaseC` = #{CurrentPhaseC},
			</if>
			
			<if test="nvmActivePower != 0.001">
			`nvmActivePower` = #{nvmActivePower},
			</if>
			<if test="nvmActiveEnergy != 0.001">
			`nvmActiveEnergy` = #{nvmActiveEnergy},
			</if>
			
			<if test="MeasuredProduction != 0.001 and MeasuredProduction > 0">
				`MeasuredProduction` = #{MeasuredProduction},
			</if>
		</trim>
		
		
		
	</insert>
	
	
	<select id="getLastRow" resultType="com.nwm.api.entities.ModelKlea220pEntity">
		SELECT
			dv.*,
			s.enable_alert
		FROM
			${view_tablename} dv 
			LEFT JOIN device d ON d.id = dv.id_device
			LEFT JOIN site s ON s.id = d.id_site
		WHERE
			dv.id_device = #{id_device}
			<if test="time != null" >
	        	AND dv.time <![CDATA[<]]> #{time}
	        </if>
		ORDER BY
			dv.time DESC 
			LIMIT 1
	</select>

</mapper> 