<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="SitesOverviewGas">
	
	<select id="getGasMeters" resultType="com.nwm.api.entities.DeviceEntity">
		SELECT
			d.id,
			d.datatablename,
			s.commissioning
		FROM
			device d
			LEFT JOIN site s ON s.id = d.id_site
		WHERE
			d.id_site = #{id}
			AND d.status = 1
			AND d.is_delete = 0
			<choose>
				<when test="id_device_type != null and id_device_type.length > 0">
					AND d.is_excluded_meter = 0
					<foreach collection="id_device_type" item="id" open="AND d.id_device_type IN (" close=")" separator=",">
						#{id}
					</foreach>
				</when>
				
				<when test="meter_type != null and meter_type.length > 0">
					<foreach collection="meter_type" item="id" open="AND d.meter_type IN (" close=")" separator=",">
						#{id}
					</foreach>
				</when>
				
				<otherwise>
					AND FALSE
				</otherwise>
			</choose>
			AND s.status = 1
			AND s.is_delete = 0
			AND (CONVERT_TZ(UTC_TIMESTAMP(), 'UTC', #{timezone_value}) <![CDATA[ < ]]> s.expiration OR s.expiration IS NULL)
			<include refid="com.nwm.common.deviceByDomainCondition"/>
	</select>
	
	<sql id="summarySection">
		SELECT
			'${interval}' AS categories_time,
			IFNULL(SUM(`value`), 0) AS `value`
		FROM (
			<foreach collection="devices" item="item" separator="UNION ALL">
				SELECT
					ma.${reading_field} - mi.${reading_field} AS `value`
				FROM 
					(
						SELECT
							dv.${reading_field},
							dv.time
						FROM
							${item.datatablename} dv
						WHERE dv.time = (
							SELECT
								MIN(dv.time) AS time
							FROM
								${item.datatablename} dv
							WHERE
								DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '${dateTimeFormat}') = DATE_FORMAT(DATE_SUB(CONVERT_TZ(UTC_TIMESTAMP(), 'UTC', #{timezone_value}), INTERVAL ${beforeDateTimeValue} ${dateTimeUnit}), '${dateTimeFormat}')
						)
					) mi
					CROSS JOIN (
						SELECT
							dv.${reading_field},
							dv.time
						FROM
							${item.datatablename} dv
						WHERE dv.time = (
							SELECT
								${aggregate_function}(dv.time) AS time
							FROM
								${item.datatablename} dv
							WHERE
								DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '${dateTimeFormat}') = DATE_FORMAT(DATE_SUB(CONVERT_TZ(UTC_TIMESTAMP(), 'UTC', #{timezone_value}), INTERVAL ${afterDateTimeValue} ${dateTimeUnit}), '${dateTimeFormat}')
						)
					) ma
			</foreach>
		) t
	</sql>
	
	<select id="getSummary" resultType="com.nwm.api.entities.building.ChartConsumptionEntity">
		<include refid="summarySection">
			<property name="interval" value="current_month"/>
			<property name="dateTimeFormat" value="%Y-%m"/>
			<property name="aggregate_function" value="MAX"/>
			<property name="dateTimeUnit" value="MONTH"/>
			<property name="beforeDateTimeValue" value="0"/>
			<property name="afterDateTimeValue" value="0"/>
		</include>
		
		UNION ALL
		
		<include refid="summarySection">
			<property name="interval" value="last_month"/>
			<property name="dateTimeFormat" value="%Y-%m"/>
			<property name="aggregate_function" value="MIN"/>
			<property name="dateTimeUnit" value="MONTH"/>
			<property name="beforeDateTimeValue" value="1"/>
			<property name="afterDateTimeValue" value="0"/>
		</include>
		
		UNION ALL
		
		<include refid="summarySection">
			<property name="interval" value="month_before_last_month"/>
			<property name="dateTimeFormat" value="%Y-%m"/>
			<property name="aggregate_function" value="MIN"/>
			<property name="dateTimeUnit" value="MONTH"/>
			<property name="beforeDateTimeValue" value="2"/>
			<property name="afterDateTimeValue" value="1"/>
		</include>
		
		UNION ALL
		
		<include refid="summarySection">
			<property name="interval" value="current_year"/>
			<property name="dateTimeFormat" value="%Y"/>
			<property name="aggregate_function" value="MAX"/>
			<property name="dateTimeUnit" value="YEAR"/>
			<property name="beforeDateTimeValue" value="0"/>
			<property name="afterDateTimeValue" value="0"/>
		</include>
		
		UNION ALL
		
		<include refid="summarySection">
			<property name="interval" value="last_year"/>
			<property name="dateTimeFormat" value="%Y"/>
			<property name="aggregate_function" value="MIN"/>
			<property name="dateTimeUnit" value="YEAR"/>
			<property name="beforeDateTimeValue" value="1"/>
			<property name="afterDateTimeValue" value="0"/>
		</include>
		
		UNION ALL
		
		SELECT
			'life_time' AS categories_time,
			IFNULL(SUM(`value`), 0) AS `value`
		FROM (
			<foreach collection="devices" item="item" separator="UNION ALL">
				SELECT
					ma.${reading_field} - mi.${reading_field} AS `value`
				FROM 
					(
						SELECT
							dv.${reading_field},
							dv.time
						FROM
							${item.datatablename} dv
						WHERE dv.time = (
							SELECT
								MIN(dv.time) AS time
							FROM
								${item.datatablename} dv
							WHERE
								dv.time >= CONVERT_TZ(#{item.commissioning}, #{timezone_value}, 'UTC')
						)
					) mi
					CROSS JOIN (
						SELECT
							dv.${reading_field},
							dv.time
						FROM
							${item.datatablename} dv
						WHERE dv.time = (
							SELECT
								MAX(dv.time) AS time
							FROM
								${item.datatablename} dv
						)
					) ma
			</foreach>
		) t
	</select>
	
	<sql id="consumptionTable">
		SELECT
			dv.time,
			t.time_format,
			t.time_full,
			t.categories_time,
			dv.${reading_field}
		FROM
			${item.datatablename} dv
			JOIN (
				SELECT
					<choose>
						<when test="id_filter == 'today'">
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%Y-%m-%d %H:00') AS time_format,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%m/%d/%Y %H:00') AS time_full,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%H:00') AS categories_time,
						</when>
						<when test="id_filter == 'this_week' or id_filter == 'this_month' or id_filter == 'last_month'">
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%Y-%m-%d') AS time_format,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%m/%d/%Y') AS time_full,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%d. %b') AS categories_time,
						</when>
						<when test="id_filter == 'this_year' or id_filter == '12_month' or id_filter == 'lifetime'">
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%Y-%m') AS time_format,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%b. %Y') AS time_full,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%b. %Y') AS categories_time,
						</when>
						<otherwise>
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%Y-%m-%d %H:00') AS time_format,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%m/%d/%Y %H:00') AS time_full,
							DATE_FORMAT(CONVERT_TZ(dv.time, 'UTC', #{timezone_value}), '%H:00') AS categories_time,
						</otherwise>
					</choose>
					${aggregate_function}(dv.time) AS time
				FROM
					${item.datatablename} dv
				WHERE
					dv.time BETWEEN CONVERT_TZ(#{start_date}, #{timezone_value}, 'UTC') AND CONVERT_TZ(DATE_ADD(#{end_date}, INTERVAL 1 DAY), #{timezone_value}, 'UTC')
				GROUP BY
					time_format
			) t ON t.time = dv.time
	</sql>
	
	<select id="getConsumption" resultType="com.nwm.api.entities.building.ChartConsumptionEntity">
		SELECT
			time_full,
			categories_time,
			CAST(SUM(`value`) AS DECIMAL) AS `value`
		FROM (
			<foreach collection="devices" item="item" separator="UNION ALL">
				SELECT
					mi.time,
					mi.time_format,
					mi.time_full,
					mi.categories_time,
					IFNULL(LEAD(mi.${reading_field}) OVER (ORDER BY mi.time_format), ma.${reading_field}) - mi.${reading_field} AS `value`
				FROM
					(
						<include refid="consumptionTable">
							<property name="aggregate_function" value="MIN"/>
						</include>
					) mi
					LEFT JOIN (
						<include refid="consumptionTable">
							<property name="aggregate_function" value="MAX"/>
						</include>
					) ma ON ma.time_full = mi.time_full
			</foreach>
		) t
		WHERE
			time BETWEEN CONVERT_TZ(#{start_date}, #{timezone_value}, 'UTC') AND CONVERT_TZ(#{end_date}, #{timezone_value}, 'UTC')
		GROUP BY
			time_format
	</select>
	
	<select id="getEvents" resultType="com.nwm.api.entities.building.SitesOverviewGasEventEntity">
		SELECT
			l.id,
			CONCAT(d.devicename, " ", e.message) AS event,
			d.devicename AS hardware,
			i.icon AS icon_url,
			DATE_FORMAT(CONVERT_TZ(l.start_date, 'UTC', #{timezone_value}), '%d %b, %Y : %h:%i %p') AS trigger_date,
			IF(
				TIMESTAMPDIFF(YEAR, l.start_date, UTC_TIMESTAMP()) > 0,
				CONCAT(TIMESTAMPDIFF(YEAR, l.start_date, UTC_TIMESTAMP()), " year", IF(TIMESTAMPDIFF(YEAR, l.start_date, UTC_TIMESTAMP()) > 1, "s", "")),
				IF(
			   		TIMESTAMPDIFF(MONTH, l.start_date, UTC_TIMESTAMP()) > 0,
					CONCAT(TIMESTAMPDIFF(MONTH, l.start_date, UTC_TIMESTAMP()), " month", IF(TIMESTAMPDIFF(MONTH, l.start_date, UTC_TIMESTAMP()) > 1, "s", "")),
					IF(
				   		TIMESTAMPDIFF(DAY, l.start_date, UTC_TIMESTAMP()) > 0,
						CONCAT(TIMESTAMPDIFF(DAY, l.start_date, UTC_TIMESTAMP()), " day", IF(TIMESTAMPDIFF(DAY, l.start_date, UTC_TIMESTAMP()) > 1, "s", "")),
						IF(
					   		TIMESTAMPDIFF(HOUR, l.start_date, UTC_TIMESTAMP()) > 0,
							CONCAT(TIMESTAMPDIFF(HOUR, l.start_date, UTC_TIMESTAMP()), " hour", IF(TIMESTAMPDIFF(HOUR, l.start_date, UTC_TIMESTAMP()) > 1, "s", "")),
							IF(
						   		TIMESTAMPDIFF(MINUTE, l.start_date, UTC_TIMESTAMP()) > 0,
								CONCAT(TIMESTAMPDIFF(MINUTE, l.start_date, UTC_TIMESTAMP()), " minute", IF(TIMESTAMPDIFF(MINUTE, l.start_date, UTC_TIMESTAMP()) > 1, "s", "")),
								CONCAT(TIMESTAMPDIFF(SECOND, l.start_date, UTC_TIMESTAMP()), " second", IF(TIMESTAMPDIFF(SECOND, l.start_date, UTC_TIMESTAMP()) > 1, "s", ""))
							)
						)
					)
				)	
			) AS opened_period
		FROM
			`alert` l
			LEFT JOIN error e ON e.id = l.id_error
			LEFT JOIN error_level el ON el.id = e.id_error_level
			LEFT JOIN icon i ON i.id = el.id_icon
			LEFT JOIN device d ON d.id = l.id_device
			LEFT JOIN site s ON s.id = d.id_site
		WHERE
			e.status = 1
			AND e.is_delete = 0
			AND l.status = 1
			AND l.is_delete = 0
			AND s.enable_alert = 1
			<foreach collection="devices" item="item" open="AND d.id IN (" close=")" separator=",">
				#{item.id}
			</foreach>
		ORDER BY
			id DESC
	</select>
	
</mapper>